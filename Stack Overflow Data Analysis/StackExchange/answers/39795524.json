{"title": "passing a single integer to a multithread function in C++", "tags": ["c++", "multithreading", "pthreads"], "creation_date": 1475250955, "score": 0, "body": "<p>As i want to pass numbers from 0 to <code>NumberOfThreads</code> to my function i finally used the code below, by passing an integer inside a <code>struct</code> and locking (lock_mutex) that when trying to retrieve the <code>threadNum</code>:</p>\n\n<p>Calling function in multi threads in a member function of <code>SVAnchor</code> class:</p>\n\n<pre><code>pthread_t threads[this-&gt;numberOfThread];\npthread_attr_t attr;\n\nparams_t params;\npthread_mutex_init (&amp;params.mutex , NULL);\npthread_cond_init (&amp;params.done, NULL);\n\npthread_attr_init(&amp;attr);\npthread_attr_setdetachstate(&amp;attr, PTHREAD_CREATE_JOINABLE);\nfor(int i=0; i &lt; this-&gt;numberOfThread; i++ ){\n    params.id = i;\n    params.ptr = this;\n    rc = pthread_create(&amp;threads[i], NULL, &amp;(SVAnchor::multichaperWrapper), &amp;params);\n    pthread_cond_wait (&amp;params.done, &amp;params.mutex);\n}\npthread_attr_destroy(&amp;attr);\nvoid* status;\nfor(int i=0; i &lt; this-&gt;numberOfThread; i++ )\n    rc = pthread_join(threads[i], &amp;status);\npthread_mutex_destroy (&amp;params.mutex);\npthread_cond_destroy (&amp;params.done);\n</code></pre>\n\n<p>with <code>params_t</code> as follows:</p>\n\n<pre><code>struct params {\n   SVAnchor* ptr;\n   pthread_mutex_t mutex;\n   pthread_cond_t done;\n   int id;\n};\ntypedef struct params params_t;\n</code></pre>\n\n<p>and then <code>multichaperWrapper</code> is as follows:</p>\n\n<pre><code>void* SVAnchor::multichaperWrapper(void* arg){\n    return (((params*)arg)-&gt;ptr)-&gt;multichaper(  ((params*)arg));\n}\n</code></pre>\n\n<p>and <code>multichaper</code> is as follows:</p>\n\n<pre><code>void* SVAnchor::multichaper( void *threadarg  /*0 &lt;= threadNum &lt; numberofthreads*/ ){ \n   int threadNum;\n   /* Lock.  */\n   pthread_mutex_lock(&amp;(*(params_t*)(threadarg)).mutex);\n\n   /* Work.  */\n   threadNum = (*(params_t*)(threadarg)).id;\n\n\n   /* Unlock and signal completion.  */\n   pthread_mutex_unlock(&amp;(*(params_t*)(threadarg)).mutex);\n   pthread_cond_signal (&amp;(*(params_t*)(threadarg)).done);\n   cout&lt;&lt;threadNum&lt;&lt;endl;\n   ...\n}\n</code></pre>\n", "last_activity_date": 1475316629, "answer_id": 39795524, "is_accepted": false, "owner": {"user_id": 4800754, "reputation": 133, "user_type": "registered", "accept_rate": 86, "display_name": "ameerosein", "link": "http://stackoverflow.com/users/4800754/ameerosein", "profile_image": "https://lh5.googleusercontent.com/-e0x7T_VuWGo/AAAAAAAAAAI/AAAAAAAAADc/2eX-Gwmsgsg/photo.jpg?sz=128"}, "last_edit_date": 1475316629, "question_id": 39610372}