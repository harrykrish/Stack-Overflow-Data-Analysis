{"body": "<p><em>I know this is an old question but I just now ran across it.</em></p>\n\n<p>If you encrypted the connection strings in the web.config on your local machine before copying the web.config file over to your web server, <strong>then I'm assuming that's the problem</strong>. Unless both machines are using the same IIS RSA key (which I'm not even sure is possible and it's probably unlikely), the destination machine won't be able to decrypt the connection string cipher because it was encoded with the source machine's key.</p>\n\n<p><strong>Therefore, you must encrypt the web.config settings from the target machine itself.</strong></p>\n\n<p>By the way, I got confused by your comments under the question. Invoking the config.Save() method <em>will</em> modify the web.config file, even if the content didn't change. In the example code above, the content should have changed anyway because you encrypted the connectionStrings section before saving. In order for IIS to utilize an updated web.config, it has to recycle its application pool first. This is partly why, by default, IIS automatically recycles the associated app pool when it detects a web.config change.</p>\n", "tags": ["asp.net", "encryption", "web-config", "connection-string"], "creation_date": 1477689404, "score": 0, "last_activity_date": 1477689404, "answer_id": 40313315, "is_accepted": false, "owner": {"user_id": 2901323, "reputation": 223, "user_type": "registered", "display_name": "Jared Gotte", "link": "http://stackoverflow.com/users/2901323/jared-gotte", "profile_image": "https://www.gravatar.com/avatar/11d0f27e8e7845a03f4c6c112a63793d?s=128&d=identicon&r=PG&f=1"}, "title": "Encrypting connection strings causes App Pool to stop", "question_id": 34000498}