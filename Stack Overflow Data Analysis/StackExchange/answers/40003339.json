{"title": "OOP / Typescript - is it possible to optimize code when class constructor has an interfaced object as param?", "tags": ["oop", "angular2", "typescript"], "creation_date": 1476288560, "score": 0, "body": "<blockquote>\n  <p>i'd like to avoid repeating variables declarations in Project Class and automatize the initialization </p>\n</blockquote>\n\n<p>While this certainly won't cut it in <em>all</em> circumstances, in your case you could use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\" rel=\"nofollow\">Object.keys</a> to iterate over own properties of <code>obj</code>, while also performing some basic type-checking:</p>\n\n<pre><code>constructor(obj: ProjectInterface) {\n    Object.keys(obj).forEach(key =&gt; {\n        if (this.hasOwnProperty(key) &amp;&amp; typeof this[key] == typeof obj[key]) {\n            this[key] = obj[key];\n        }\n    });\n}\n</code></pre>\n\n<p>This however requires that you also initialize your properties to a sensible default value, as <code>hasOwnProperty</code> will return false otherwise.</p>\n\n<p><em>Note the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\" rel=\"nofollow\">ES6 arrow function</a> that preserves the correct lexical scope of <code>this</code>.</em></p>\n", "last_activity_date": 1476351462, "answer_id": 40003339, "is_accepted": false, "owner": {"user_id": 2788872, "reputation": 3682, "user_type": "registered", "accept_rate": 86, "display_name": "John White", "link": "http://stackoverflow.com/users/2788872/john-white", "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1476351462, "question_id": 40002991}