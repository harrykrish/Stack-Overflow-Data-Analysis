{"title": "Casting List&lt;T&gt; to List&lt;String&gt; type", "tags": ["java", "string", "list", "arraylist", "casting"], "creation_date": 1477682300, "score": 1, "body": "<p>Java generics don't always work the way you'd expect. </p>\n\n<p>Specifically, casting a generic to a specific type doesn't actually change the object, and you can get unsafe results when you do this and aren't 100% sure that you have it right.</p>\n\n<p>So the object you have cast to <code>List&lt;String&gt;</code> is still actually a list containing <code>BigDecimal</code> entries, you have just mis-cast it.</p>\n\n<p>This is a case where Java is type-unsafe - just as casting an <code>Object</code> to <code>Integer</code> is type-unsafe (but at runtime, unsafe <code>Object</code> to <code>Integer</code> casts will fail at the time of the cast, while generic casts will not fail until later.)</p>\n", "last_activity_date": 1477686387, "answer_id": 40311857, "is_accepted": true, "owner": {"user_id": 7061, "reputation": 773, "user_type": "registered", "accept_rate": 67, "display_name": "Thomas Andrews", "link": "http://stackoverflow.com/users/7061/thomas-andrews", "profile_image": "https://i.stack.imgur.com/N2I4Q.jpg?s=128&g=1"}, "last_edit_date": 1477686387, "question_id": 40311456}