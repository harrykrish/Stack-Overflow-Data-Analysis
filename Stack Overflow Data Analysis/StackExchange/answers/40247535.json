{"body": "<p>One of the issues is that file uploading uses a different mechanism than the other form <code>&lt;input&gt;</code> types. That is why <code>$this-&gt;input-&gt;post(\"userfile\")</code> isn't getting the job done for you. Other answers have suggested using javascript's <code>FormData</code> and this one does too.</p>\n\n<p><strong>HTML</strong></p>\n\n<p>A very simple form for picking a file and submitting it. Note the change from a simple button to <code>&lt;input type=\"submit\"...</code>. Doing so makes it a lot easier for the javascript to use the <code>FormData</code> object. </p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\" rel=\"nofollow\">FormData documentation</a></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\n        &lt;script src=\"https://code.jquery.com/jquery-2.2.2.js\"&gt;&lt;/script&gt;\n        &lt;title&gt;Upload Test&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;?= form_open_multipart(\"upload/post\", ['id' =&gt; 'uploader']); ?&gt;\n        &lt;input type=\"file\" name=\"userfile\"&gt;\n        &lt;p&gt;\n            &lt;input type=\"submit\" value=\"Upload\"&gt;\n        &lt;/p&gt;\n        &lt;?php echo form_close() ?&gt;\n\n        &lt;div id=\"message\"&gt;&lt;/div&gt;\n\n        &lt;script&gt;\n            $('#uploader').submit(function (event) {\n                event.preventDefault();\n                $.ajax({\n                    url: window.location.href + '/post',\n                    type: \"POST\",\n                    dataType: 'json',\n                    data: new FormData(this),\n                    processData: false,\n                    contentType: false,\n                    success: function (data) {\n                        console.log(data);\n                        if (data.result === true) {\n                            $(\"#message\").html(\"&lt;p&gt;File Upload Succeeded&lt;/p&gt;\");\n                        } else {\n                            $(\"#message\").html(\"&lt;p&gt;File Upload Failed!&lt;/p&gt;\");\n                        }\n                        $(\"#message\").append(data.message);\n                    }\n                });\n            });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>JAVASCRIPT</strong></p>\n\n<p>Use <code>FormData</code> to capture the fields.\nNote that instead of handling the button click we handle the submit event.</p>\n\n<pre><code>$('#uploader').submit(function (event) {\n    event.preventDefault();\n    $.ajax({\n        url: window.location.href + '/post',\n        type: \"POST\",\n        dataType: 'json',\n        data: new FormData(this),\n        processData: false,\n        contentType: false,\n        success: function (data) {\n            //uncomment the next line to log the returned data in the javascript console\n            // console.log(data);\n            if (data.result === true) {\n                $(\"#message\").html(\"&lt;p&gt;File Upload Succeeded&lt;/p&gt;\");\n            } else {\n                $(\"#message\").html(\"&lt;p&gt;File Upload Failed!&lt;/p&gt;\");\n            }\n            $(\"#message\").append(data.message);\n        }\n    });\n});\n</code></pre>\n\n<p><strong>CONTROLLER</strong></p>\n\n<p>I've added some code that \"reports\" results to ajax and will display it on the upload page.</p>\n\n<pre><code>class Upload extends CI_Controller\n{\n    public function __construct()\n    {\n        parent::__construct();\n        $this-&gt;load-&gt;helper(['form', 'url']);\n    }\n\n    public function index()\n    {\n        $this-&gt;load-&gt;view('upload_v');\n    }\n\n    public function post()\n    {\n        $this-&gt;load-&gt;library(\"upload\");\n        $this-&gt;upload-&gt;initialize(array(\n                \"upload_path\" =&gt; './uploads/',\n                'allowed_types' =&gt; 'gif|jpg|png|doc|txt',\n                \"overwrite\" =&gt; FALSE,\n                \"max_filename\" =&gt; 300,\n                \"encrypt_name\" =&gt; TRUE,\n        ));\n\n        $successful = $this-&gt;upload-&gt;do_upload('userfile');\n\n        if($successful)\n        {\n            $data = $this-&gt;upload-&gt;data();\n            $image_file = $data['file_name'];\n            $msg = \"&lt;p&gt;File: {$image_file}&lt;/p&gt;\";\n            $this-&gt;data_models-&gt;update($this-&gt;data-&gt;INFO, array(\"image\" =&gt; $image_file));\n        } else {\n            $msg = $this-&gt;upload-&gt;display_errors();\n        }\n\n        echo json_encode(['result' =&gt; $successful, 'message' =&gt; $msg]);\n    }\n\n}\n</code></pre>\n\n<p>This will upload your file. Your work probably isn't done because I suspect that your are not saving all the file info you need to the db. That, and I suspect you are going to be surprised by the name of the uploaded file. </p>\n\n<p>I suggest you study up on how PHP <a href=\"http://php.net/manual/en/features.file-upload.php\" rel=\"nofollow\">handles file uploads</a> and examine some of the similar codeigniter related questions on file uploads here on SO.</p>\n", "tags": ["javascript", "php", "jquery", "ajax", "codeigniter"], "creation_date": 1477421539, "score": 1, "last_activity_date": 1477421539, "answer_id": 40247535, "is_accepted": true, "owner": {"user_id": 5445194, "reputation": 2579, "user_type": "registered", "display_name": "DFriend", "link": "http://stackoverflow.com/users/5445194/dfriend", "profile_image": "https://www.gravatar.com/avatar/00490b1e3c4d6c45140054d80dd3c6d4?s=128&d=identicon&r=PG&f=1"}, "title": "Ajax upload not working codeigniter", "question_id": 40238671}