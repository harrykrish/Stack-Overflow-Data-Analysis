{"body": "<p>You can try to set the context property with an instance of the class. That way, you can instantiate the class in main, and then pass it's address to set the context property. If the data of the model is subject to change while the program is running, I would suggest implementing the QStringList as a <a href=\"http://doc.qt.io/qt-5/qtqml-cppintegration-exposecppattributes.html\" rel=\"nofollow\">Q_Property</a>.</p>\n\n<pre><code>//main.cpp\n\nFileIO fileIO;\nQQmlApplicationEngine engine;\nQQmlContext* ctx = engine.rootContext();\nctx-&gt;setContextProperty(\"fileio\", &amp;fileIO);\nengine.load(/* Path to your qml */);    \n\n\n//qml\nListView {\n    id: listView1\n    x: 0\n    y: 0\n    model: fileio.m_model\n    delegate: Rectangle{\n        Text {text: modelData }\n    }\n}\n</code></pre>\n", "tags": ["qt", "listview", "qml", "qtquick2"], "creation_date": 1476073784, "score": 0, "last_activity_date": 1476073784, "answer_id": 39951324, "is_accepted": false, "owner": {"user_id": 4621545, "reputation": 59, "user_type": "registered", "accept_rate": 50, "display_name": "Francisco Hernandez", "link": "http://stackoverflow.com/users/4621545/francisco-hernandez", "profile_image": "https://i.stack.imgur.com/m1YBD.jpg?s=128&g=1"}, "title": "QML - How to use QStringList as a model of ListView?", "question_id": 38792269}