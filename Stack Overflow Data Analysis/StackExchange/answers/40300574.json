{"body": "<p>I would try using <code>Promises</code></p>\n\n<pre><code>appModule.factory('dataService', DataService);\n\nDataService.$inject = ['dataContext'];\n\nfunction DataService(dataContext) {\n    DataService.prototype().then( function (err, prototype){\n      if(err){\n       return err;\n      }\n       //Else\n       var service = Object.create(prototype);\n       service._dataContext = dataContext;\n       service._details = {};\n       service.$onInit();\n       if(service){\n         return service;\n       }\n    });\n}\n\nDataService.prototype = {\n  return new Promise( function( resolve, reject){\n    $onInit: function () {\n        this._dataContext.combinedQuery(DataQuery)\n            .then(function (data) {\n                this._details = data[0];\n            }.bind(this));\n    }\n\n    if( this.details ){\n      Details: function () {\n        return resolve( this._details );\n      }   \n    } else {\n        return reject({err: 'Unable to set details'})\n    }\n\n  });  \n};\n</code></pre>\n\n<p>I can't guarantee if the code above works 100% since I did not build a <code>Plunker</code> or similar but, it really seems like it's an <code>asynchronous</code> issue. If this does not work the, you should wrap <code>$on.init()</code> into a <code>Promise</code> also.</p>\n\n<p>Anyways, I never seen writing <code>services/factories</code> like you do, so I'm a bit confused about it.</p>\n\n<p>Hope it helps a bit anyways.</p>\n", "tags": ["javascript", "angularjs"], "creation_date": 1477641501, "score": 0, "last_activity_date": 1477641501, "answer_id": 40300574, "is_accepted": false, "owner": {"user_id": 4684539, "reputation": 790, "user_type": "registered", "accept_rate": 100, "display_name": "AndreaM16", "link": "http://stackoverflow.com/users/4684539/andream16", "profile_image": "https://i.stack.imgur.com/JT5Np.png?s=128&g=1"}, "title": "What do I return for an Angular binded property while waiting for $onInit callbacks to complete", "question_id": 40299769}