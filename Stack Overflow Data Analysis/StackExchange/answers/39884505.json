{"body": "<p>There is no method that takes a <em>primitive</em> array like <code>int[] nums</code> and sorts it in descending order. There are some that take an array of Objects, like <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#sort-T:A-java.util.Comparator-\" rel=\"nofollow\"><code>sort(T[] a, Comparator&lt;? super T&gt; c)</code></a> - but primitives are not <code>Objects</code><sup>1</sup>.</p>\n\n<p>The most straightforward method is likely to simply <code>sort(int[] input)</code> your array in ascending order, then <a href=\"http://stackoverflow.com/questions/2137755/how-do-i-reverse-an-int-array-in-java\">reverse</a> the resulting array. The sort is likely to take significantly longer than the reverse, so this method should perform well. Alternately, you may be able to modify the consuming code so that it deals with the array in ascending order, or you could wrap the array in a <code>List</code> and then use a reversed view.</p>\n\n<p>There are <a href=\"http://stackoverflow.com/questions/215271/sort-arrays-of-primitive-types-in-descending-order\">lots of other options</a> as well.</p>\n\n<hr>\n\n<p><sup>1</sup> You could, in principle, convert your <code>int[]</code> into an <code>Integer[]</code>, by boxing each underlying <code>int</code> element, but you would pay a large performance penalty and a huge memory (increasing the memory used by about 10x) and garbage penalty to do so.</p>\n", "tags": ["java", "arrays", "comparator"], "creation_date": 1475705461, "score": 1, "last_activity_date": 1475705461, "answer_id": 39884505, "is_accepted": true, "owner": {"user_id": 149138, "reputation": 6036, "user_type": "registered", "accept_rate": 67, "display_name": "BeeOnRope", "link": "http://stackoverflow.com/users/149138/beeonrope", "profile_image": "https://www.gravatar.com/avatar/cfd457233c8ebbab383475fc097442d9?s=128&d=identicon&r=PG"}, "title": "java comparator for arrays sort", "question_id": 39884385}