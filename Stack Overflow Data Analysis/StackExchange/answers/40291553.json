{"title": "OpenGL multithreading", "tags": ["c++", "multithreading", "opengl", "boost-asio"], "creation_date": 1477592109, "score": 1, "body": "<p><strong>First, a warning</strong>. Your \"slight problem\" is not slight at all. It is race condition, which is undefined behavior in C++, which, in turn, implies that anything could happen, including:</p>\n\n<ul>\n<li><p>Everything renders fine</p></li>\n<li><p>Image flickers</p></li>\n<li><p>Nothing renders at all</p></li>\n<li><p>It crashes on the last Saturday of every month. Or working fine on your computer and crashing on everyone's else. </p></li>\n</ul>\n\n<p>Seriously, do not ever rely on UB, especially when writing library/framework/game engine.</p>\n\n<p><strong>Now about your question.</strong></p>\n\n<p>Lets leave aside any practical benefits of your approach and fix it first.</p>\n\n<p>Actually, OpenGL implementation uses something very similar under the hood. Commands are executed asynchronously by the driver thread. I recommend you to read about their implementation to get some ideas on how to improve your design.</p>\n\n<p>What you need to do, is to somehow \"capture\" the state at the time you <code>post</code> a rendering command. Simplest possible thing - copy the <code>CORE_RENDERER-&gt;state</code> into closure and use this copy to do the rendering. If <code>state</code> is large enough, it can be costly, though.</p>\n\n<p>Alternative solution (and OpenGL goes that way) is to make every change in the <code>state</code> a command also, so</p>\n\n<pre><code>CORE_RENDERER-&gt;state.ModelMatrix = (*it).matrix;\nCORE_RENDERER-&gt;state.ActiveSubmesh = (*it).submesh;\n</code></pre>\n\n<p>translates into</p>\n\n<pre><code>Matrix matrix = (*it).matrix;\nSubmesh submesh = (*it).submesh;\n\nTHREAD_POOL-&gt;service.post([&amp;,matrix,submesh]{\n    CORE_RENDERER-&gt;state.ModelMatrix = matrix;\n    CORE_RENDERER-&gt;state.ActiveSubmesh = submesh;\n});\n</code></pre>\n\n<p>Notice, however, that now you can't simply read <code>CORE_RENDERER-&gt;state.ModelMatrix</code> from your main thread, as it is changing in a different thread. You must first ensure that command queue is empty.</p>\n", "last_activity_date": 1477593388, "answer_id": 40291553, "is_accepted": true, "owner": {"user_id": 2512323, "reputation": 2935, "user_type": "registered", "display_name": "deniss", "link": "http://stackoverflow.com/users/2512323/deniss", "profile_image": "https://www.gravatar.com/avatar/7bc322724b516562653c787cb602b901?s=128&d=identicon&r=PG"}, "last_edit_date": 1477593388, "question_id": 40289825}