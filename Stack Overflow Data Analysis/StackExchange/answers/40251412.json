{"body": "<p>The main thing to remember is that in Electron, interProcess communication is done by ipcMain (in the main process) and ipcRenderer(in all the created windows). Like below:\n<a href=\"https://i.stack.imgur.com/cUH8Z.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/cUH8Z.png\" alt=\"enter image description here\"></a>\nFrom what i've seen in the GitHub comments - direct communication between the Renderer instances is not allowed. Everything must pass trough the mainProcess.</p>\n\n<p>the code:\n<strong>mainProcess.js:</strong></p>\n\n<pre><code>function createWindow1 () {\n  window1 = new BrowserWindow({width: 800,height: 600})\n  window1.loadURL(`file://${__dirname}/window1.html`)\n  window1.webContents.openDevTools()\n  window1.on('closed', function () {\n     window1 = null\n  })\n  return window1\n}\nfunction createWindow2 () {\n  window2 = new BrowserWindow({width: 1000, height: 600})\n  window2.loadURL(`file://${__dirname}/window2.html`)\n  window2.webContents.openDevTools()\n  window2.on('closed', function () {\n    window2 = null\n  })\n  return window2\n}\n\napp.on('ready', () =&gt; {\n  window1 = createWindow1();\n  window2 = createWindow2();\n\n  ipcMain.on('nameMsg', (event, arg) =&gt; {\n  console.log(\"name inside main process is: \", arg); // this comes form within window 1 -&gt; and into the mainProcess\n  event.sender.send('nameReply', { not_right: false }) // sends back/replies to window 1 - \"event\" is a reference to this chanel.\n  window2.webContents.send( 'forWin2', arg ); // sends the stuff from Window1 to Window2.\n});\n</code></pre>\n\n<p><strong>window1.html:</strong></p>\n\n<pre><code>&lt;body&gt;\n    &lt;input type=\"text\" id=\"name\" value=\"\" placeholder=\"Enter your name\"&gt;\n    &lt;button type=\"button\" id=\"sendName\" &gt;Send the name! &lt;/button&gt;\n&lt;/body&gt;\n&lt;script&gt;\n   // You can also require other files to run in this process\n   require('./window1.js')\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>window1.js:</strong></p>\n\n<pre><code>const ipcRenderer = require('electron').ipcRenderer\n\nlet name = document.getElementById('name');\n\nButtonSendName = document.getElementById('sendName');\nButtonSendName.addEventListener('click', (event) =&gt; {\n  ipcRenderer.send('nameMsg', name.value);\n})\n\nipcRenderer.on('nameReply', (event, arg) =&gt; {\n  console.log(arg) // why/what is not right..\n});\n</code></pre>\n\n<p>window2.html:</p>\n\n<pre><code>&lt;body&gt;\n  &lt;p id = \"showName\"&gt;&lt;/p&gt;\n&lt;/body&gt;\n\n&lt;script&gt;\n  require('./window2.js')\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>window2.js:</strong></p>\n\n<pre><code>const { ipcRenderer } = require('electron')\n\nshowName = document.getElementById('showName')\nipcRenderer.on('forWin2', function (event, arg){\n  console.log(arg);\n  showName.innerHTML = arg;\n});\nconsole.log(\"I'm Window2\");\n</code></pre>\n\n<p>A demo would be better, but I don't know how to build an electron CodeBin app. This image gives you an idea:\n<a href=\"https://i.stack.imgur.com/nSK7o.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/nSK7o.png\" alt=\"enter image description here\"></a></p>\n\n<p>Enjoy the power of Electron !</p>\n", "tags": ["webbrowser-control", "ipc", "electron"], "creation_date": 1477438484, "score": 2, "last_activity_date": 1477438484, "answer_id": 40251412, "is_accepted": false, "owner": {"user_id": 5904566, "reputation": 414, "user_type": "registered", "accept_rate": 67, "display_name": "AIon", "link": "http://stackoverflow.com/users/5904566/aion", "profile_image": "https://lh5.googleusercontent.com/-0EFYFwb0YqE/AAAAAAAAAAI/AAAAAAAAAA0/4Kehw78dfgg/photo.jpg?sz=128"}, "title": "communication between 2 browser windows in electron", "question_id": 40251411}