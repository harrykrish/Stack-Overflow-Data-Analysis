{"body": "<p>Unfortunately I wasn't able to figure out the proper query to get the order I wanted straight from the database. However, I did come up with an easy <code>usort</code> function to compare meta values.</p>\n\n<p>To further complicate the SQL needed to order this, the <code>exhibition_start_date</code> is stored in the format <code>Ymd</code>, while the <code>event_date</code> is stored in format <code>Y-m-d H:i:s</code>. </p>\n\n<pre><code>usort( $the_query-&gt;posts, 'my_compare_exhibition_and_event_dates_descending' );\n\nfunction my_compare_exhibition_and_event_dates_descending($a, $b) {\n  $a_date = get_post_meta( $a-&gt;ID, 'exhibition_start_date', true );\n  if ( empty( $a_date ) ) {\n    $a_date = get_post_meta( $a-&gt;ID, 'event_date', true );\n    $a_date = DateTime::createFromFormat( 'Y-m-d H:i:s', $a_date )-&gt;format( 'Ymd' );\n  }\n\n  $b_date = get_post_meta( $b-&gt;ID, 'exhibition_start_date', true );\n  if ( empty( $b_date ) ) {\n    $b_date = get_post_meta( $b-&gt;ID, 'event_date', true );\n    $b_date = DateTime::createFromFormat( 'Y-m-d H:i:s', $b_date )-&gt;format( 'Ymd' );\n  }\n\n  return ( $a_date &gt; $b_date ) ? -1 : 1;\n}\n</code></pre>\n", "tags": ["mysql", "wordpress", "advanced-custom-fields"], "creation_date": 1477769041, "score": 0, "last_activity_date": 1477769041, "answer_id": 40322803, "is_accepted": true, "owner": {"user_id": 1986068, "reputation": 11, "user_type": "registered", "display_name": "Dylan Fisher", "link": "http://stackoverflow.com/users/1986068/dylan-fisher", "profile_image": "https://i.stack.imgur.com/N67J6.png?s=128&g=1"}, "title": "Complex meta_query and orderby with multiple custom post types, and multiple date column names", "question_id": 40194334}