{"title": "Find the minimum number of switches to be turned on for illuminating the binary tree", "tags": ["algorithm"], "creation_date": 1476869357, "score": 0, "body": "<p>You can solve it recursively by considering what is the minimum number of switches that need to be turned on for each sub-tree, assuming the root node is on and also assuming it is off.</p>\n\n<p>If the root node is on then the child nodes can be either on or off, so <code>minSwitchesAssumingRootOn</code> calls <code>minSwitches</code> recursively. If the root node is off then the child nodes must be on for the edges connected to the root node to be on, so <code>minSwitchesAssumingRootOff</code> calls <code>minSwitchesAssumingRootOn</code> recursively.</p>\n\n<p>The sub-totals can be stored using memo-ization to speed it up. <code>tree.minAssumingOff</code> and <code>tree.minAssumingOn</code> should be initialized to -1.</p>\n\n<p>Pseudo-code:</p>\n\n<pre><code>int minSwitches(tree)\n{\n    if(tree == null)\n        return 0;\n    return min(minSwitchesAssumingRootOff(tree),\n       minSwitchesAssumingRootOn(tree));\n}\n\nint minSwitchesAssumingRootOn(tree)\n{\n    if(tree == null)\n        return 0;\n    if(tree.minAssumingOn == -1)\n        tree.minAssumingOn = 1 + minSwitches(tree.left) + minSwitches(tree.right);\n    return tree.minAssumingOn;\n}\n\nint minSwitchesAssumingRootOff(tree)\n{\n    if(tree == null)\n        return 0;\n    if(tree.minAssumingOff == -1)\n        tree.minAssumingOff = minSwitchesAssumingRootOn(tree.left) + \n            minSwitchesAssumingRootOn(tree.right);\n    return tree.minAssumingOff;\n}\n</code></pre>\n", "last_activity_date": 1477727166, "answer_id": 40127405, "is_accepted": true, "owner": {"user_id": 696391, "reputation": 13996, "user_type": "registered", "accept_rate": 75, "display_name": "samgak", "link": "http://stackoverflow.com/users/696391/samgak", "profile_image": "https://i.stack.imgur.com/VrUwT.jpg?s=128&g=1"}, "last_edit_date": 1477727166, "question_id": 40126822}