{"title": "How to perform Modulo greatest common divisor?", "tags": ["discrete-mathematics"], "creation_date": 1477728574, "score": 0, "body": "<p>Perhaps you are assuming that both <code>e</code> and <code>m</code> are integers, but the problem allows them to be non-integers?  There is only one case that gives an integer solution when both <code>e</code> and <code>m</code> are integers.</p>\n\n<p><strong>Why strictly integer output is not a reasonable outcome if <code>e</code> != <code>m</code>:</strong></p>\n\n<p>When you look at a fraction like <code>3/7</code> say, and refer to its denominator as the numerator's \"divisor\", this is a loose sense of the word from a classical math-y perspective.  When you talk about the gcd (greatest common divisor), the \"d\" refers to an integer that divides the numerator (an integer) evenly, resulting in another integer: <code>4</code> is a divisor of <code>8</code>, because <code>8/4 = 2</code> and <code>2</code> is an integer.  A computer science or discrete mathematics perspective might frame a divisor as a number <code>d</code> that for a given number <code>a</code> gives <code>0</code> when we take <code>a % d</code> (<code>a mod d</code> for discrete math).  Can you see that the absolute value of a divisor can't exceed the absolute value of the numerator?  If it did, you would get pieces of pie, instead of whole pies - example: </p>\n\n<p><code>4 % a = 0</code> for <code>a in Z</code> (Z being the set of integers) <code>while |a| &lt;= 4</code> (in math-y notation, that set is: <code>{a \u2208 Z : |a| &lt;= 4}</code>), but </p>\n\n<p><code>4 % a != 0</code> for <code>a in Z while |a| &gt; 4</code> (math-y: <code>{a \u2208 Z : |a| &gt; 4}</code>\n), because when we divide <code>4</code> by stuff bigger than it, like <code>5</code>, we get fractions (i.e. <code>|4/a| &lt; 1</code> when <code>|a| &gt; 4</code>).  Don't worry too much about the absolute value stuff if it throws you off - it is there to account for working with negative numbers since they are integers as well.</p>\n\n<p>So, even the \"greatest\" of divisors for any given integer will be smaller than the integer.  Otherwise it's not a divisor (see above, or <a href=\"https://en.wikipedia.org/wiki/Divisor\" rel=\"nofollow\">Wikipedia on divisors</a>).</p>\n\n<p>Look at <code>gcd(e, m) = g</code>:</p>\n\n<ul>\n<li>By the definition of <code>%</code> (<code>mod</code> for math people), for any two numbers <code>number1</code> and <code>number2</code>, <code>number1 % number2</code> never makes <code>number1</code> bigger: <code>number1 % number2 &lt;= number1</code>. \n\n<ul>\n<li>So substitute: <code>(e * d) = g % m</code> <strong>--></strong> <code>(e * d) &lt;= g</code></li>\n</ul></li>\n<li>By the paragraphs above and definition of gcd being a divisor of both <code>e</code> and <code>m</code>: <code>g &lt;= e, m</code>.</li>\n<li>To make <code>(e * d) &lt;=  g such that d, g are both integers</code>, knowing that <code>g &lt;= e</code> since <code>g</code> is a divisor of <code>e</code>, we have to make the left side smaller to match <code>g</code>.  You can only make an integer smaller with multiplcation if the other multipland is <code>0</code> or a fraction.  The problem specifies that <code>d</code> is an integer, so we one case that works - the <code>d = 0</code> case - and infinitely many that give a contradiction - contradiction that <code>e</code>, <code>m</code>, and <code>d</code> all be integers.</li>\n</ul>\n\n<p><strong>If <code>e</code> == <code>m</code>:</strong></p>\n\n<p>This is the <code>d = 0</code> case:</p>\n\n<ul>\n<li>If <code>e == m</code>, then <code>gcd(e, m) = e = m</code> - example: greatest common divisor of <code>3</code> and <code>3</code> is <code>3</code></li>\n<li>Then <code>(e * d) = g % m</code> is <code>(e * d) = m % m</code> and <code>m % m = 0</code> so <code>(e * d) = 0</code> implying <code>d = 0</code></li>\n</ul>\n\n<p><strong>How to code a function that will find <code>d</code> when either of <code>e</code> or <code>m</code> might be NON-integer:</strong></p>\n\n<p>A lot of divisor problems are done iteratively, like \"find the gcd\" or \"find a prime number\".  That works in part because those problems deal strictly with integers, which are <a href=\"https://en.wikipedia.org/wiki/Countable_set\" rel=\"nofollow\">countable</a>.  With this problem, we need to allow <code>e</code> or <code>m</code> to be non-integer in order to have a solution for cases other than <code>e = m</code>.  The set of rational numbers is NOT countable, however, so an iterative solution would eventually make your program crash.  With this problem, you really just want a formula, and possibly some cases.  You might set it up like this:</p>\n\n<pre><code>If e == m\n    return 0 # since (e * d) = m % m -&gt; d = 0\nElse\n    return g / e\n</code></pre>\n\n<p><strong>Lastly:</strong></p>\n\n<p>Another thing that might be useful depending on what you do with this problem is the fact that the right-hand-side is always either <code>g</code> or <code>0</code>, because <code>g &lt;= m</code> since <code>g</code> is a divisor of <code>m</code> (see all the stuff above). In the cases where <code>g &lt; m</code>, <code>g % m = g</code>.  In the case where <code>g == m</code>, <code>g % m = 0</code>.</p>\n\n<p>The @asp answer with the link to the Wikipedia page on the Euclidean Algorithm is good.</p>\n\n<p>The @aidenhjj comment about trying the math-specific version of StackOverflow is good.</p>\n\n<p>In case this is for a math class and you aren't used to coding: <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code>, and <code>!=</code> are computer speak for \u2264, \u2265, \"are equal\", and \"not equal\" respectively. </p>\n\n<p>Good luck.</p>\n", "last_activity_date": 1477730276, "answer_id": 40317252, "is_accepted": false, "owner": {"user_id": 6542449, "reputation": 6, "user_type": "registered", "display_name": "hlp", "link": "http://stackoverflow.com/users/6542449/hlp", "profile_image": "https://www.gravatar.com/avatar/6e2952caccf045a96bf4aa5fc6d0d99f?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477730276, "question_id": 40251113}