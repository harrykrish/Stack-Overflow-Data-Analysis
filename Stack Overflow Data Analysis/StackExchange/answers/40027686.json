{"body": "<p>You can certainly roll your own using the same ideas as slim rwlock (at least what I imagine they did, since this is fairly straightforward). I outlined the approach in some detail in <a href=\"http://stackoverflow.com/questions/40025600/how-to-make-windows-slim-read-writer-lock-fair/40026997#40026997\">this other question</a>. </p>\n\n<p>For your case, you can mostly ignore the \"fair\" aspect, but the implementation is essentially the same. In particular, if you are willing to let an indefinite stream of readers block writers, you always let readers in when the lock already has readers in it (i.e., state (2) and (3) more or less collapse together).</p>\n\n<p>In your case, for the cross platform angle, you would need to implement the blocking with <em>either</em> windows events or pthread condvars - but the details are similar in either case. Or, if you really want to avoid blocking at all, your only choice is spinning (ideally using the <code>pause</code> instruction to be nice to the CPU), which makes things even easier by removing the whole fallback to blocking code.</p>\n\n<p>A good implementation is probably a couple hundred LOC. I wrote one (close source, I cannot share it) and it performs excellently (better than slim lock, in fact).</p>\n", "tags": ["c", "windows", "multithreading"], "creation_date": 1476380767, "score": 0, "last_activity_date": 1476380767, "answer_id": 40027686, "is_accepted": false, "owner": {"user_id": 149138, "reputation": 6036, "user_type": "registered", "accept_rate": 67, "display_name": "BeeOnRope", "link": "http://stackoverflow.com/users/149138/beeonrope", "profile_image": "https://www.gravatar.com/avatar/cfd457233c8ebbab383475fc097442d9?s=128&d=identicon&r=PG"}, "title": "Is there a cross platform version of window vista&#39;s slim reader writer locks?", "question_id": 1865412}