{"body": "<p>Nginx blog has this post on <a href=\"https://www.nginx.com/blog/dns-service-discovery-nginx-plus/\" rel=\"nofollow\">Using DNS for Service Discovery with NGINX and NGINX Plus</a>.</p>\n\n<blockquote>\n  <p>NGINX caches the DNS records until the next restart or configuration reload, ignoring the records\u2019 TTL values.</p>\n</blockquote>\n\n<p>Explains what you were seeing, that after restarting the container, you are able to route to new nodes.</p>\n\n<p>The section <em>Setting the Domain Name in a Variable</em> has an example of a workaround for caching on startup.</p>\n\n<pre><code>resolver 10.0.0.2 valid=10s;\n\nserver {\n    location / {\n        set $backend_servers backends.example.com;\n        proxy_pass http://$backend_servers:8080;\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>When you use a variable to specify the domain name in the proxy_pass directive, NGINX re\u2011resolves the domain name when its TTL expires.</p>\n</blockquote>\n\n<p><a href=\"https://github.com/docker/docker/issues/22652\" rel=\"nofollow\">This discussion</a> suggests <code>127.0.0.11</code> will be the IP of the resolver inside the container.</p>\n\n<hr>\n\n<p>I used this configuration locally to confirm DNS changes are reflected after scaling, and it seems to work</p>\n\n<pre><code>resolver 127.0.0.11 valid=5s;\n\nserver {\n    listen 80;\n    location / {\n        set $application_servers application;\n        proxy_pass http://$application_servers:8080;\n    }\n}\n</code></pre>\n", "tags": ["docker", "docker-compose"], "creation_date": 1477677002, "score": 1, "last_activity_date": 1477677002, "answer_id": 40310616, "is_accepted": true, "owner": {"user_id": 164966, "reputation": 10266, "user_type": "registered", "accept_rate": 100, "display_name": "R0MANARMY", "link": "http://stackoverflow.com/users/164966/r0manarmy", "profile_image": "https://www.gravatar.com/avatar/5c72f100bc09518cd468b9fe146f1f22?s=128&d=identicon&r=PG"}, "title": "Docker Compose injecting linked containers in v2", "question_id": 40262935}