{"body": "<p>After some playing around, I finally figured out the solution myself. It also takes care of rows that have <code>''</code> or <code>NULL</code> as values for <code>categories</code>:</p>\n\n<pre><code>-- create temporary table which buffers the maximum article ID, because SELECT MAX can take a very long time on huge databases\nDROP TABLE IF EXISTS max_article_id;\nCREATE TEMP TABLE max_article_id(num INTEGER);\nINSERT INTO max_article_id VALUES((SELECT MAX(id) FROM articles));\n\nWITH RECURSIVE split(article_id, word, str, offsep) AS\n(\n    VALUES ( 0, '', '', 0 )                                      -- begin with dummy article 0 (which does not actually exist) to avoid code duplication\n    UNION ALL\n    SELECT\n        CASE WHEN offsep==0 OR str IS NULL\n            THEN article_id+1                                    -- go to next article if the current one is finished\n            ELSE article_id                                      -- and keep the current one in the opposite case\n        END,\n        CASE WHEN offsep==0 OR str IS NULL\n            THEN ''\n            ELSE substr(str, 0, CASE WHEN instr(str, ',') THEN instr(str, ',') ELSE length(str)+1 END)\n        END,\n        CASE WHEN offsep==0 OR str IS NULL                       -- when str==NULL, then there has been a NULL value for the categories cell of the current article\n            THEN (SELECT categories FROM articles WHERE id=article_id+1)\n            ELSE ltrim(substr(str, instr(str, ',')), ',')\n        END,\n        CASE WHEN offsep==0 OR str IS NULL                       -- offsep==0 means that the splitting was finished in the previous iteration\n            THEN 1                                               -- offsep==1 means that splitting the categories for a new article will begin in the next iteration\n            ELSE instr(str, ',')                                 -- the actual string splitting stuff is explained and taken from here: http://stackoverflow.com/a/32051164\n        END\n        FROM split\n        WHERE article_id&lt;=(SELECT * FROM max_article_id)         -- stop getting new articles when the maximum article ID is reached\n) SELECT article_id, word AS category FROM split WHERE word!=''; -- only select article_id and word from the result to use output the desired table layout\n</code></pre>\n", "tags": ["sql", "sqlite"], "creation_date": 1477753695, "score": 0, "last_activity_date": 1477753695, "answer_id": 40320468, "is_accepted": true, "owner": {"user_id": 3554605, "reputation": 257, "user_type": "registered", "accept_rate": 58, "display_name": "sigalor", "link": "http://stackoverflow.com/users/3554605/sigalor", "profile_image": "https://www.gravatar.com/avatar/6b5fd257651f55b309a95a18bd4ba92f?s=128&d=identicon&r=PG&f=1"}, "title": "Split comma-separated values and map them to original ID in SQLite", "question_id": 40289159}