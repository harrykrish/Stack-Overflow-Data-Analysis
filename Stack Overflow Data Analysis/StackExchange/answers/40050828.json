{"body": "<p>Several thoughts:</p>\n\n<ol>\n<li><p>The tableview would not need to reload every second based on the scenario you described. You would be <em>checking</em> every second the timer fires but it would only need to be reloaded when the posts in question actually need to be unlocked (seems like that is roughly at 30 second intervals, not that bad at all).</p></li>\n<li><p>If you can figure out the index of the cells that need to be reloaded, you can just call the <code>reloadRows(at indexPaths: [IndexPath], with animation: UITableViewRowAnimation)</code> <code>UITableView</code> method directly. This would avoid updating the entire tableview to reload a single row and can improve UX a little bit if you are experiencing jumpiness due to rows reloading too much. <a href=\"https://developer.apple.com/reference/uikit/uitableview/1614935-reloadrows\" rel=\"nofollow\">Documentation here</a></p></li>\n<li><p>If you are concerned about the actual timer firing every second but know that you have a finite number of rows (particularly if it is just 3 as you listed), then you can just create a separate timer for each row that fires at the appropriate time (30 seconds, 1 minute, etc). However, a single timer firing every second is not that big of a deal and shouldn't cause any noticeable performance issues.</p></li>\n</ol>\n", "tags": ["ios", "swift", "uitableview", "nstimer"], "creation_date": 1476473942, "score": 3, "last_activity_date": 1476473942, "answer_id": 40050828, "is_accepted": true, "owner": {"user_id": 484304, "reputation": 17819, "user_type": "registered", "accept_rate": 67, "display_name": "Dima", "link": "http://stackoverflow.com/users/484304/dima", "profile_image": "https://www.gravatar.com/avatar/866fd50b077d3d8bf4ce63ec68bc1dae?s=128&d=identicon&r=PG"}, "title": "How taxing would running an NSTimer every second be?", "question_id": 40050720}