{"body": "<p>I found this explanation quite nice:</p>\n\n<blockquote>\n  <p>An observable is like an array where the elements arrive delayed in time.</p>\n</blockquote>\n\n<p>You can use operators like <code>.forEach()</code>, and <code>.map()</code> (and others).</p>\n\n<p>It also has similarities to <code>Promise</code> but can emit 0 or more values on <code>subscribe()</code> (similar to <code>then()</code> but only calls the callback passed to <code>then()</code> once, while the callback passed to <code>subscribe()</code> can be called multiple times before the emitter resolves the observable).</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/37364973/angular-2-promise-vs-observable/37365955#37365955\">Angular 2 - promise vs observable</a></p>\n", "tags": ["angular2", "rxjs", "subject"], "creation_date": 1477296321, "score": 0, "last_activity_date": 1477296321, "answer_id": 40213465, "is_accepted": false, "owner": {"user_id": 217408, "reputation": 130599, "user_type": "registered", "accept_rate": 99, "display_name": "G&#252;nter Z&#246;chbauer", "link": "http://stackoverflow.com/users/217408/g%c3%bcnter-z%c3%b6chbauer", "profile_image": "https://i.stack.imgur.com/IlnZm.jpg?s=128&g=1"}, "title": "How to explain RxJS Subject to someone with Angular 1.X background", "question_id": 40213388}