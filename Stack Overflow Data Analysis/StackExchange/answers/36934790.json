{"body": "<blockquote>\n  <p>Do I need another server for Ehcache?</p>\n</blockquote>\n\n<p>You can use Ehcache in Standalone mode. In this topology, the cache data is held in the application node. So you won't need another server in this mode. Ehcache also provides <a href=\"http://www.ehcache.org/generated/2.10.2/html/ehc-all/#page/Ehcache_Documentation_Set%2Fco-top_topology_types.html%23\" rel=\"nofollow\">two other modes</a>:</p>\n\n<ol>\n<li><p><strong>Distributed</strong> \u2013 The data is held in a remote server (or array of servers) with a subset of recently used data held in each\napplication node. This topology offers a rich set of consistency\noptions. A distributed topology is the recommended approach in a\nclustered or scaled-out application environment. It provides the\nhighest level of performance, availability, and scalability.</p>\n\n<p>The distributed topology is available as a <a href=\"http://terracotta.org/downloads/open-source/catalog\" rel=\"nofollow\">Terracotta open source offering</a> with no client limitations but limitations on Terracotta cluster size. These are removed when using the commercial <a href=\"http://terracotta.org/products/bigmemorymax\" rel=\"nofollow\">BigMemory Max</a>.</p></li>\n<li><strong>Replicated</strong> \u2013 The cached data set is held in each application node and data is copied or invalidated across the nodes without\nlocking. Replication can be either asynchronous or synchronous,\nwhere the writing thread blocks while propagation occurs. The only\nconsistency mode supported in this topology is Weak Consistency.</li>\n</ol>\n\n<p>\n\n<blockquote>\n  <p>Do I need some another client to work with Ehcache?</p>\n</blockquote>\n\n<p>You should use Ehcache library in order to be able to communicate with Ehache. But Spring provides a Caching Abstraction which is more elegant to work with and also has the advantage of being independent from the underlying caching implementation. So if you use Spring Caching Abstraction you could easily switch form Ehcache to, say, Hazelcast. You can read more about Spring Caching Abstraction in <a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html\" rel=\"nofollow\">here</a>.</p>\n\n<p><a href=\"http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-caching\" rel=\"nofollow\">Spring Boot</a> provides <code>spring-boot-starter-cache</code> starter package which auto-configures a suitable <code>CacheManager</code> according to the implementation as long as the caching support is enabled. </p>\n\n<blockquote>\n  <p>How Ehcache works with multiple instances? Is it even possible to\n  create something like shared cache using Ehcache?</p>\n</blockquote>\n\n<p>Quoting from <a href=\"http://www.ehcache.org/generated/2.10.2/html/ehc-all/#page/Ehcache_Documentation_Set%2Fco-over_what_is_ehcache.html%23\" rel=\"nofollow\">Ehcache documentation</a>:</p>\n\n<blockquote>\n  <p>Ehcache provides in-process cache, which you can replicate across\n  multiple nodes. It is also at the core of BigMemory Go and BigMemory\n  Max, Terracotta\u2019s commercial caching and in-memory data-storage\n  products. The Terracotta Server Array provided with BigMemory Max\n  enables mixed in-process/out-of-process configurations with\n  terabyte-size caches. For information about Terracotta\u2019s BigMemory\n  offerings, see the BigMemory Go and BigMemory Max product\n  documentation at <a href=\"http://terracotta.org/documentation\" rel=\"nofollow\">http://terracotta.org/documentation</a>.</p>\n</blockquote>\n\n<p>As stated above, there is a free clustering option available with Ehcache.\nFor this requirement, Redis and Hazelcast are also good options.</p>\n", "last_activity_date": 1462736408, "last_edit_date": 1462736408, "question_id": 36934115, "tags": ["java", "spring", "caching", "ehcache"], "title": "Spring Boot, caching with EhCache", "score": 4, "answer_id": 36934790, "creation_date": 1461922558, "is_accepted": true, "owner": {"user_id": 1393484, "reputation": 11214, "user_type": "registered", "accept_rate": 100, "display_name": "Ali Dehghani", "link": "http://stackoverflow.com/users/1393484/ali-dehghani", "profile_image": "https://i.stack.imgur.com/YA5eu.jpg?s=128&g=1"}, "community_owned_date": 1461948634}