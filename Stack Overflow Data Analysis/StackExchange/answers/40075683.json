{"body": "<h1>Game design today must indeed be reactive.</h1>\n\n<h1>It is very, very difficult, and there is no easy or built-in solution.</h1>\n\n<p>Yes, this is unfortunately an absolute basic aspect of game design in our era.</p>\n\n<p>It is indeed very, very difficult to make 2D games work on all different screen shapes.</p>\n\n<p>Consider say some sort of landscape 2D arcade game - perhaps where you shoot against each other.  What does it actually mean if two people are competing, and one has a 4:3 screen and one has a 16:9 screen?</p>\n\n<p>Should it actually <strong><em>take longer for one user to fly across the screen</em></strong>?!? Should you <strong><em>adjust the speed of the ship, so that screen-travel-time is constant</em></strong>?!?</p>\n\n<p>Should you just <strong><em>show more stuff on the edges</em></strong>?  But wait - does that mean some players get <strong><em>far more warning</em></strong> of arriving enemy or scenery??!</p>\n\n<p>Nobody has the answer - it is very, very difficult.</p>\n\n<p>it is difficult conceptually, and a real pain to program.</p>\n\n<p>In answer to your question, there is absolutely NO built-in method to deal with these hassles in Unity (or any game engine).</p>\n\n<p>Almost all teams have code like this .......</p>\n\n<pre><code>/* \nCall this dynamically, probably from SizeCare or RotationCare\n\nPosition something in relation to the dynamic screen edges\n- reactively so to speak\n\nThis is critical for (for example) knowing where to launch sprites from,\nknowing where to dispose of them, and so on.\n*/\n\nusing UnityEngine;\nusing System.Collections;\n\npublic class KeepAtScreenEdges:MonoBehaviour\n    {\n    [Header(\"Left and right...\")]\n    public bool keepOnLeftEdge;\n    public bool keepOnRightEdge;\n\n    [Header(\"Bottom and top...\")]\n    public bool keepOnBottomEdge;\n    public bool keepOnTopEdge;\n\n    public void ScreenMaybeChanged()\n        {\n        if (keepOnLeftEdge) gameObject.ScreenLeft();\n        if (keepOnRightEdge) gameObject.ScreenRight();\n\n        if (keepOnBottomEdge) gameObject.ScreenBottom();\n        if (keepOnTopEdge) gameObject.ScreenTop();\n        }\n\n    }\n</code></pre>\n\n<p>you just stick it on a marker (marker: empty GameObject)</p>\n\n<p><a href=\"https://i.stack.imgur.com/HSN0z.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/HSN0z.png\" alt=\"enter image description here\"></a> </p>\n\n<p>there's the \"top left\" one ...</p>\n\n<p><a href=\"https://i.stack.imgur.com/p2O2l.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/p2O2l.png\" alt=\"enter image description here\"></a></p>\n\n<p>and indeed you'll have whole constellations of \"reactive markers\" like this.</p>\n\n<p>Then, every single thing you do in the game, is positioned in relation to these.</p>\n\n<p>So for example you'll have a marker for \"place where offscreen enemies come in to existence, just off the right edge of the screen\". And you'll use that extensively for launching enemies, or whatever.</p>\n\n<p>You can do nothing in the editor: everything is reactive.  (Well, indeed, you have to program editor code so that it too is perfectly reactive, for during development: you</p>\n\n<p>Note that - thank goodness - Unity's awesome .UI system of course is reactive, and that, thank goodness, takes care of the UI aspect of \"modern frickin' reactive game layout\". (Then again, it's not really that easy to be absolutely expert with .UI, and you have to be.  And that's absolutely trivial compared to \"game layout reactiveness\"  :/ )</p>\n\n<p>Again - just fundamentally - forget about executing it technically! - are you going to go for a solution like \"equal speed across the screen\" or \"always show more trees at the top\" - or whatever?  It's very difficult.</p>\n", "tags": ["mobile", "unity3d"], "creation_date": 1476653317, "score": 0, "last_activity_date": 1476653317, "answer_id": 40075683, "is_accepted": true, "owner": {"user_id": 294884, "reputation": 15622, "user_type": "registered", "accept_rate": 89, "display_name": "Joe Blow", "link": "http://stackoverflow.com/users/294884/joe-blow", "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG"}, "title": "Unity3d different screen sizes and limited play area", "question_id": 40075480}