{"body": "<blockquote>\n  <p>Final SQL Results: <br />\n  With the Help of some CTE's or Views I was able to get it working.<br /></p>\n</blockquote>\n\n<ol>\n<li>Query 1- Tours ran between date range (Yesterday)</li>\n<li>Query 2- Summary showing Tours with No Datestamp as Null on Datestamp Column</li>\n<li>Query 3- Conditional Count when Tour is Missed so I show 0 for Missed Routes</li>\n</ol>\n\n<hr>\n\n<pre><code>`--Get All ToursRanYesterday \nWITH toursranyesterday \n     AS (SELECT TR.tourid, \n                TR.tourruntimestamp, \n                TC.tourname, \n                TC.division, \n                TC.unit, \n                TC.tourfrequency \n         FROM   dbo.tbltourrun AS TR \n                INNER JOIN dbo.tso_piml_tour_config AS TC \n                        ON TC.tourid = TR.tourid \n         WHERE  ( TC.tourfrequency LIKE '%xDay%' ) \n                AND ( TR.tourruntimestamp \n                      BETWEEN Dateadd(day, Datediff(day, \n                                   0,Getdate()) - 1, 0) \n                                                  AND \n                      Dateadd(day, Datediff(day, \n                                   0, Getdate()), 0) )), \n     --Get Summary of xDay Tours Ran with Missing Tours \n     toursummary \n     AS (SELECT TC.tourid, \n                TC.division, \n                TC.unit, \n                TC.tourname, \n                TC.tourfrequency, \n                ( CASE \n                    WHEN EXISTS (SELECT * \n                                 FROM   toursranyesterday AS TY \n                                 WHERE  TC.tourid = TY.tourid) THEN 'NO' \n                    WHEN NOT EXISTS (SELECT * \n                                     FROM   toursranyesterday AS TY \n                                     WHERE  TC.tourid = TY.tourid) THEN 'YES' \n                  END ) AS Missed, \n                TY.tourruntimestamp \n         FROM   dbo.tso_piml_tour_config AS TC \n                FULL OUTER JOIN toursranyesterday AS TY \n                             ON TY.tourid = TC.tourid \n         WHERE  ( TC.tourfrequency LIKE '%xDay%' )) \n--Add Daily Tour Count when Missed = NO \nSELECT TS.tourid, \n       TS.division, \n       TS.unit, \n       TS.tourname, \n       TS.tourfrequency, \n       TS.missed, \n       TS.tourruntimestamp, \n       Count(CASE \n               WHEN missed = 'NO' THEN 1 \n               ELSE NULL \n             END) \n         OVER ( \n           partition BY TS.tourid) AS [DailyTourCount] \nFROM   toursummary AS TS \nORDER  BY TS.tourname `\n</code></pre>\n", "tags": ["sql-server", "tsql", "gaps-and-islands"], "creation_date": 1477680327, "score": 0, "last_activity_date": 1477680327, "answer_id": 40311387, "is_accepted": false, "owner": {"user_id": 1202529, "reputation": 158, "user_type": "registered", "accept_rate": 90, "display_name": "Ben_Coding", "link": "http://stackoverflow.com/users/1202529/ben-coding", "profile_image": "https://www.gravatar.com/avatar/5dd271c1c8e09b57725b8869086d42a8?s=128&d=identicon&r=PG"}, "title": "Identify Gaps of Records in Date Range", "question_id": 40288634}