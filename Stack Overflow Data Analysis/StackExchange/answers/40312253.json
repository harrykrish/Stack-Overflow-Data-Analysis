{"body": "<p>The problem is that you have two different <code>RoomsManager</code> instances (and hence, two different executors): first is created by Tomcat, and second is created by you.</p>\n\n<p>When you annotate <code>RoomsManager</code> with <code>@WebListener</code>, Tomcat automatically creates an instance of that class and subscribes it to receive servlet context create/destroy events. That instance is the one that actually stops its executor and prints <code>ServletContextListener destroyed</code>.</p>\n\n<p>The second instance is created by you in the <code>getRoomsManager</code> method (by the way, that method doesn't look thread-safe). That instance is not registered with Tomcat and doesn't receive servlet context \"destroy\" event, so it doesn't even try to shutdown its executor.</p>\n", "tags": ["java", "multithreading", "tomcat", "executorservice"], "creation_date": 1477684014, "score": 2, "last_activity_date": 1477684014, "answer_id": 40312253, "is_accepted": true, "owner": {"user_id": 5032339, "reputation": 3213, "user_type": "registered", "display_name": "Roman", "link": "http://stackoverflow.com/users/5032339/roman", "profile_image": "https://www.gravatar.com/avatar/e3f89c7c930ef491ddc8b3de518ef667?s=128&d=identicon&r=PG&f=1"}, "title": "ExecutorService doesn&#39;t shut down from contextDestroyed() when stopping Tomcat", "question_id": 40236736}