{"title": "Django unapply migration", "tags": ["python", "django", "migration"], "creation_date": 1476491162, "score": 1, "body": "<p>Let's call the snippet <code>accident</code> and the additional one <code>fix</code>.</p>\n\n<p>When writing custom SQL migrations you should usually provide the reverse part otherwise you can not roll it back to prior state without loosing the integrity of your schema and/or data.</p>\n\n<p><code>accident</code> should provide sql to revert itself. The <code>fix</code> that rolls <code>accident</code> back should therefor consist of both operations interchanged.</p>\n\n<p>You might want to read <a href=\"https://docs.djangoproject.com/es/1.10/topics/migrations/#migration-squashing\" rel=\"nofollow\">about squashing migrations</a> afterwards.</p>\n\n<p>EDIT: the term operations might by confusing as it is part of the migration system :) - will say: interchange <code>sql</code> and <code>reverse_sql</code> in <code>fix</code> migration</p>\n", "last_activity_date": 1476491590, "answer_id": 40053751, "is_accepted": false, "owner": {"user_id": 5992118, "reputation": 839, "user_type": "registered", "display_name": "dahrens", "link": "http://stackoverflow.com/users/5992118/dahrens", "profile_image": "https://www.gravatar.com/avatar/08ae2e7ce567cbfb93d480892bd10fa0?s=128&d=identicon&r=PG"}, "last_edit_date": 1476491590, "question_id": 40053515}