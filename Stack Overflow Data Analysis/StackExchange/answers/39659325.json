{"title": "AngularJS: $q wait for all even when 1 rejected", "tags": ["angularjs"], "creation_date": 1474629041, "score": 0, "body": "<p>I solved this same issue recently. This was the problem:</p>\n\n<ul>\n<li>I had an array of promises to handle, <code>promises</code></li>\n<li>I wanted to get all the results, resolve or reject</li>\n<li>I wanted the promises to run in parallel</li>\n</ul>\n\n<p>This was how I solved the problem:</p>\n\n<pre><code>promises = promises.map(function(promise) {\n    return promise.catch(function() {\n        return null;\n    });\n};\n$q.all(promises, function(results) {\n    // code to handle results\n}\n</code></pre>\n\n<p>It's not a general fix, but it is simple and and easy to follow. Of course if any of your promises could resolve to null then you can't distinguish between that a rejection, but it works in many cases and you can always modify the catch function to work with the particular problem you're solving.</p>\n", "last_activity_date": 1477409085, "answer_id": 39659325, "is_accepted": false, "owner": {"user_id": 1806381, "reputation": 79, "user_type": "registered", "accept_rate": 67, "display_name": "Will Bolam", "link": "http://stackoverflow.com/users/1806381/will-bolam", "profile_image": "https://www.gravatar.com/avatar/983599f55fe4fb6b38c6e6e19c22a530?s=128&d=identicon&r=PG"}, "last_edit_date": 1477409085, "question_id": 18888104}