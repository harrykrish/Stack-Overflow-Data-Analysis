{"title": "Deleting a line from a huge file in Perl", "tags": ["perl", "file", "seek", "tell"], "creation_date": 1477504803, "score": 4, "body": "<p>A file is a sequence of bytes. We can <em>replace</em> (overwrite) some of them, but how would we <em>remove</em> them? Once a file is written its bytes cannot be 'pulled out' of the sequence or 'blanked' in any way. (The ones at the end of the file can be dismissed, by indicating the end-of-file where we want.) </p>\n\n<p>The rest of the content has to move 'down', so that what follows the text to be removed overwrites it. We have to rewrite the rest of the file. In practice it is often far simpler to rewrite the whole file. </p>\n\n<p>As a very basic example</p>\n\n<pre><code>use warnings 'all';\nuse strict;\nuse File::Copy qw(mv);\n\nmy $file_in = '...';\nmy $file_out = '...';  # best use `File::Temp`\n\nopen my $fh_in,  '&lt;', $file_in  or die \"Can't open $file_in: $!\";\nopen my $fh_out, '&gt;', $file_out or die \"Can't open $file_out: $!\";\n\n# Remove a line with $pattern\nmy $pattern = qr/this line goes/;\n\nwhile (&lt;$fh_in&gt;) \n{\n    print $fh_out $_  unless /$pattern/;\n}\nclose $fh_in;\nclose $fh_out;\n\n# Rename the new fie into the original one, thus replacing it\nmove ($file_out, $file_in) or die \"Can't move $file_out to $file_in: $!\";\n</code></pre>\n\n<p>This writes every line of input file into the output file, unless a line matches a given pattern. Then that file is renamed, replacing the original (what does not involve data copy). See <a href=\"http://perldoc.perl.org/perlfaq5.html#How-do-I-change,-delete,-or-insert-a-line-in-a-file,-or-append-to-the-beginning-of-a-file?\" rel=\"nofollow\">this topic in perlfaq5</a>.</p>\n\n<p>Since we really use a temporary file I'd recommend the core module <a href=\"http://perldoc.perl.org/File/Temp.html\" rel=\"nofollow\">File::Temp</a> for that.</p>\n\n<hr>\n\n<p>This may be made more efficient, but far more complicated, by opening in update <code>'+&lt;'</code> mode so to overwrite only a portion of the file. You iterate until the line with the pattern, record (<code>tell</code>) its position and the line length, then copy all remaining lines in memory. Then <code>seek</code> back to the position minus length of that line, and dump the copied rest of the file, overwriting the line and all that follows it. </p>\n\n<p>Note that now the data for the rest of the file is copied <em>twice</em>, albeit one copy is in memory. Going to this trouble may make sense if the line to be removed is far down the file. If there are more lines to remove this gets messier.</p>\n", "last_activity_date": 1477674554, "answer_id": 40269154, "is_accepted": true, "owner": {"user_id": 4653379, "reputation": 8427, "user_type": "registered", "display_name": "zdim", "link": "http://stackoverflow.com/users/4653379/zdim", "profile_image": "https://www.gravatar.com/avatar/b3953dbedd0dabff5cbc3db9b0835b14?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477674554, "question_id": 40269036}