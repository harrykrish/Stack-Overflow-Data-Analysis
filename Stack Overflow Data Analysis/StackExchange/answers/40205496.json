{"body": "<p>You have to figure out what happens through the stages of compilations that the C compiler uses.</p>\n\n<p>Since #define si a pre-compiler directive, everything will be resolved before actually compiling or looking at the code. Pieces of text (code, functions, whatever is included) will be passed on or filtered according to the directive.</p>\n\n<p>All the rest happens after that, like compilation, that will look for global variable declaration, and linking, that will look for the address of those variable.</p>\n\n<p>In you case, if you take your file and compile with a gcc compiler and the -E option (to do just the precompiler stage), you will get:</p>\n\n<pre><code>    struct Foo {\n        static const char * TEXT[]; static const char * getText( int _enum ) {   return TEXT[_enum]; }\n    };\n\n   const char * Foo::TEXT[] = {\n       \"ONE\",\n       \"TWO\",\n       \"THREE\",\n       0\n   };\n</code></pre>\n", "tags": ["c++", "static-variables", "compiler-directives"], "creation_date": 1477242319, "score": 1, "last_activity_date": 1477242319, "answer_id": 40205496, "is_accepted": false, "owner": {"user_id": 6397798, "reputation": 61, "user_type": "registered", "display_name": "bracco23", "link": "http://stackoverflow.com/users/6397798/bracco23", "profile_image": "https://www.gravatar.com/avatar/02009503bb2e6dfa0785c8645919aa5d?s=128&d=identicon&r=PG&f=1"}, "title": "static variable in #define directive c++", "question_id": 40205114}