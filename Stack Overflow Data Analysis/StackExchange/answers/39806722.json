{"title": "I want to detect if a JVM Class is a Kotlin class or not", "tags": ["reflection", "kotlin"], "creation_date": 1475325763, "score": 7, "body": "<p>Kotlin adds an annotation to all of its classes, and you can safely check for its existence by name.  This is an implementation detail and could change over time, but some key libraries use this annotation so it is likely to be ok indefinitely.</p>\n\n\n\n<pre><code>fun Class&lt;*&gt;.isKotlinClass(): Boolean {\n    return this.declaredAnnotations.any {\n        it.annotationClass.qualifiedName == \"kotlin.Metadata\"\n    }\n}\n</code></pre>\n\n<p>Can be used as:</p>\n\n<pre><code>someClass.isKotlinClass()\n</code></pre>\n\n<p>The class <code>kotlin.Metadata</code> is not accessed directly because it is marked <code>internal</code> in the Kotlin runtime.</p>\n", "last_activity_date": 1475496379, "answer_id": 39806722, "is_accepted": true, "owner": {"user_id": 3679676, "reputation": 12075, "user_type": "registered", "accept_rate": 100, "display_name": "Jayson Minard", "link": "http://stackoverflow.com/users/3679676/jayson-minard", "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG"}, "last_edit_date": 1475496379, "question_id": 39806721}