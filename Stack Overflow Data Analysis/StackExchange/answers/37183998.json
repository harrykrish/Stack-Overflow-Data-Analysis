{"title": "IntegrityError duplicate key value violates unique constraint - django/postgres", "tags": ["django", "postgresql", "duplicates", "unique-constraint", "database-integrity"], "creation_date": 1463048330, "score": 4, "body": "<p>It appears to be a known difference of behaviour between the MySQL and SQLite (they update the next available primary key even when inserting an object with an explicit id) backends, and other backends like Postgres, Oracle, ... (they do not).</p>\n\n<p><a href=\"https://code.djangoproject.com/ticket/11423\" rel=\"nofollow\">There is a ticket describing the same issue</a>. Even though it was closed as invalid, it provides a hint that there is a Django management command to update the next available key.</p>\n\n<p>To display the SQL updating all next ids for the application <em>MyApp</em>:</p>\n\n<pre><code>python manage.py sqlsequencereset MyApp\n</code></pre>\n\n<p>In order to have the statement executed, you can provide it as the input for the <strong>dbshell</strong> management command. For bash, you could type:</p>\n\n<pre><code>python manage.py sqlsequencereset MyApp |\u00a0python manage.py dbshell\n</code></pre>\n\n<p>The advantage of the management commands is that abstracts away the underlying DB backend, so it will work even if later migrating to a different backend.</p>\n", "last_activity_date": 1476714280, "answer_id": 37183998, "is_accepted": false, "owner": {"user_id": 1027706, "reputation": 2590, "user_type": "registered", "accept_rate": 31, "display_name": "Ad N", "link": "http://stackoverflow.com/users/1027706/ad-n", "profile_image": "https://www.gravatar.com/avatar/ff91cf16cbd51dad8e48e2799f97e811?s=128&d=identicon&r=PG"}, "last_edit_date": 1476714280, "question_id": 11089850}