{"body": "<p>Check this out....</p>\n\n<pre><code>Private Sub TextBox_Validating( sender As System.Object,  e As System.ComponentModel.CancelEventArgs) Handles TextBox1.Validating, TextBox2.Validating, ComboBox1.Validating\n    Dim ctl As Control = CType(sender, Control)\n    If ctl.Text = \"\"\n        e.Cancel = True\n        ErrorProvider1.SetError(ctl,\"Please enter a value\")\n    End If\nEnd Sub\n</code></pre>\n\n<p>In the private sub part - change textbox2.validating to your control names. Then use this to call this function....</p>\n\n<pre><code>ErrorProvider1.Clear()\nIf Me.ValidateChildren()\n    ' continue on\nEnd If\n</code></pre>\n\n<p>I didn't do this. John Koerner did it. Here's the link\n<a href=\"http://stackoverflow.com/questions/9489671/check-for-empty-textbox-controls-in-vb-net\">Check for empty TextBox controls in VB.NET</a></p>\n", "tags": ["validation", "error-handling", "textbox", "string"], "creation_date": 1477424704, "score": 0, "last_activity_date": 1477424704, "answer_id": 40248439, "is_accepted": false, "owner": {"user_id": 6641623, "reputation": 176, "user_type": "registered", "accept_rate": 95, "display_name": "Bobski", "link": "http://stackoverflow.com/users/6641623/bobski", "profile_image": "https://www.gravatar.com/avatar/24e362277e4177b474247860a342348c?s=128&d=identicon&r=PG&f=1"}, "title": "How to apply one error provider to all empty textboxes VB.net 2010", "question_id": 28642446}