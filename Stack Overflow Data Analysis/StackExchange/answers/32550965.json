{"title": "What are different ways to access variables with OGNL in Struts 2", "tags": ["jsp", "struts2", "ognl", "valuestack"], "creation_date": 1442156313, "score": 0, "body": "<p>The value stack which is an implementation of <a href=\"http://struts.apache.org/maven/struts2-core/apidocs/com/opensymphony/xwork2/util/ValueStack.html\" rel=\"nofollow\"><code>ValueStack</code></a> has two methods <code>push</code> and <code>set</code>. The first method <em>pushes</em> the variable to the stack, but the second <em>sets</em> in to the value stack's context. If the variable in the value stack's context, you can use different ways to access it. <del>Struts has a feature if it can't find a variable in the value stack it searches the value stack's context.</del></p>\n\n<pre class=\"lang-jsp prettyprint-override\"><code>&lt;s:property value=\"previousList\"/&gt;\n&lt;s:property value=\"#previousList\"/&gt;\n&lt;s:property value=\"%{previousList}\"/&gt;\n</code></pre>\n\n<hr>\n\n<p>So, all of them print the value, but second case is a bit faster because it points out OGNL using <code>#</code> to find the value directly in the value stack's context.  </p>\n\n<p>On the other hand if the variable is not in the value stack's context but in the value stack's root the second method fails to return the value. </p>\n\n<p>And the last point is that Struts parses its some tag attributes (almost all), like <code>value</code>, for OGNL, and <code>%{}</code> defines the scope of OGNL expression.  </p>\n", "last_activity_date": 1476464889, "answer_id": 32550965, "is_accepted": false, "owner": {"user_id": 573032, "reputation": 34515, "user_type": "registered", "accept_rate": 91, "display_name": "Roman C", "link": "http://stackoverflow.com/users/573032/roman-c", "profile_image": "https://www.gravatar.com/avatar/bca617231294691f95f0e9f0ee623630?s=128&d=identicon&r=PG"}, "last_edit_date": 1476464889, "question_id": 32543346}