{"body": "<p>Use the concept of <code>Hashing</code>:</p>\n\n<p>In python, <code>hashing</code> is implemented using <code>dict()</code></p>\n\n<pre><code>hashmap = dict()\nstring = \"hello world\"\nsubstring = \"roll\"\nfor char in string:\n    if char in hashmap:\n        hashmap[char] += 1\n    else:\n        hashmap[char] = 1\n\nflag = 0    \nfor char in substring:\n    if char in hashmap and hashmap[char] &gt;= 1:\n        hashmap[char] -= 1\n    else:\n        flag = 1\n        break\n\nif flag == 1:\n    print False\nelse:\n    print True\n</code></pre>\n\n<p>For the characters in string, we make a hashmap that keeps a record of the different characters available and their respective counts.</p>\n\n<p>Next we iterate over the substring and find out if all the characters are available or not.. If available we decrement the count of that character in the hashmap and move forward. IF not present, then simply <code>break</code> out and print <code>False</code>..... So simple</p>\n\n<p>Hope it helps!!!</p>\n", "tags": ["python", "string", "algorithm"], "creation_date": 1477381180, "score": 5, "last_activity_date": 1477381180, "answer_id": 40234080, "is_accepted": false, "owner": {"user_id": 6354622, "reputation": 1183, "user_type": "registered", "accept_rate": 76, "display_name": "User_Targaryen", "link": "http://stackoverflow.com/users/6354622/user-targaryen", "profile_image": "https://i.stack.imgur.com/rNoam.jpg?s=128&g=1"}, "title": "Efficiently find whether a string contains a group of characters (like substring but ignoring order)?", "question_id": 40230749}