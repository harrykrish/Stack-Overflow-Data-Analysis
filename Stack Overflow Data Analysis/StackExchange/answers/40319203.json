{"body": "<p>The MPMediaLibrary will only automatically prompt the user once. The state is <code>MPMediaLibraryAuthorizationStatusNotDetermined</code> if you ask for it before it has been granted or denied by the user. If they have denied access previously, you need to send the user to the System Settings so they can manually turn it on for your app.</p>\n\n<p>The following code is how we are doing it.</p>\n\n<pre><code>+ (void) validateMediaLibraryForMinimumIosAndAboveWithViewController:(UIViewController *)viewController\n                                                        ifAuthorized:(void(^)())authorizedBlock\n                                                     ifNotAuthorized:(void(^)())notAuthorizedBlock\n{\n    MPMediaLibraryAuthorizationStatus authorizationStatus = MPMediaLibrary.authorizationStatus;\n\n    switch (authorizationStatus)\n    {\n        case MPMediaLibraryAuthorizationStatusAuthorized:\n        {\n            // We are already authorized - proceed\n            if( authorizedBlock )\n            {\n                authorizedBlock();\n            }\n            break;\n        }\n        case MPMediaLibraryAuthorizationStatusNotDetermined:\n        {\n            // Not yet authorized - request it from the system\n            [MPMediaLibrary requestAuthorization:^(MPMediaLibraryAuthorizationStatus authorizationStatus)\n             {\n                 if ( authorizationStatus == MPMediaLibraryAuthorizationStatusAuthorized )\n                 {\n                     if( authorizedBlock )\n                     {\n                         authorizedBlock();\n                     }\n                 }\n                 else\n                 {\n                     PLog(@\"The Media Library was not authorized by the user\");\n                     if( notAuthorizedBlock )\n                     {\n                         notAuthorizedBlock();\n                     }\n                 }\n             }];\n            break;\n        }\n\n        case MPMediaLibraryAuthorizationStatusRestricted:\n        case MPMediaLibraryAuthorizationStatusDenied:\n        {\n            // user has previously denied access. Ask again with our own alert that is similar to the system alert\n            // then take them to the System Settings so they can turn it on for the app\n            NSString *titleString  = NSLocalizedStringWithDefaultValue(@\"Media Library Privacy Alert Title\",\n                                                                       @\"Localizable\",\n                                                                       [NSBundle mainBundle],\n                                                                       @\"Would Like to Access Apple Music And Your Media Library\",\n                                                                       @\"Title for dialog requesting media library access\");\n\n            [self displayPermissionAlertFromViewController:viewController\n                                                 withTitle:titleString];\n            if( notAuthorizedBlock )\n            {\n                notAuthorizedBlock();\n            }\n            break;\n        }\n    }\n}\n\n+ (void)displayPermissionAlertFromViewController:(UIViewController *)viewController withTitle:(NSString *)title\n{\n    NSString* appName = [[NSProcessInfo processInfo] processName];\n\n    NSString *titleString = [NSString stringWithFormat:@\"\\\"%@\\\" %@\",appName, title];\n\n    NSString *cancelString = NSLocalizedStringWithDefaultValue(@\"Don't Allow\",\n                                                               @\"Localizable\",\n                                                               [NSBundle mainBundle],\n                                                               @\"Don't Allow\",\n                                                               @\"Don't allow button\");\n\n    NSString *settingsString = NSLocalizedStringWithDefaultValue( @\"Settings\",\n                                                                 @\"Localizable\",\n                                                                 [NSBundle mainBundle],\n                                                                 @\"Settings\",\n                                                                 @\"Settings button label\");\n\n    UIAlertController *alertController = [UIAlertController\n                                          alertControllerWithTitle:titleString\n                                          message:nil\n                                          preferredStyle:UIAlertControllerStyleAlert];\n\n    [alertController addAction:[UIAlertAction actionWithTitle:cancelString\n                                                        style:UIAlertActionStyleDefault\n                                                      handler:nil]];\n\n    [alertController addAction:[UIAlertAction actionWithTitle:settingsString\n                                                        style:UIAlertActionStyleDefault\n                                                      handler:\n                                ^(UIAlertAction * _Nonnull action)\n                                {\n                                    NSURL *url = [NSURL URLWithString:UIApplicationOpenSettingsURLString];\n                                    [[UIApplication sharedApplication] openURL:url];\n                                }]];\n\n    [viewController presentViewController:alertController animated:true completion:nil];\n}\n</code></pre>\n", "tags": ["ios", "ios10", "mpmedialibrary"], "creation_date": 1477744946, "score": 0, "last_activity_date": 1477744946, "answer_id": 40319203, "is_accepted": true, "owner": {"user_id": 5135551, "reputation": 57, "user_type": "registered", "accept_rate": 67, "display_name": "Jim Leask", "link": "http://stackoverflow.com/users/5135551/jim-leask", "profile_image": "https://i.stack.imgur.com/ILHpb.jpg?s=128&g=1"}, "title": "Request authorization to Media Library programmatically fails", "question_id": 39374951}