{"body": "<p>You can define an interface and its implementation as follows. And ofcourse with dependency injection container, you have to do someting like this.</p>\n\n<pre><code>NInjectKernel.Bind&lt;IMessageBoxService&gt;().To&lt;MessageBoxService&gt;();\n</code></pre>\n\n<p>Your ViewModel will look something like this.</p>\n\n<pre><code>    private IMessageBoxService _MBService;\n    public DropboxSettingsViewModel(IDropboxService dbService, IMessageBoxService mbService)\n    {\n        if (dbService == null)\n            throw new ArgumentNullException(\"IDropboxService is null\");\n\n        _DropboxService = dbService;\n\n        if (mbService == null)\n            throw new ArgumentNullException(\"MessageBoxService is null\");\n\n        _MBService = mbService;\n\n    }\n</code></pre>\n\n<p>Your click command execute method would be as follows.</p>\n\n<pre><code>    private void ConfigureDropboxExecute(object obj)\n    {\n\n        _MBService.Show(\"Error Occured Authenticating dropbox\", \"Dropbox Authentication\", MessageBoxButton.OK, MessageBoxImage.Error, MessageBoxResult.OK);\n\n    }\n\n\npublic interface  IMessageBoxService\n{\n    MessageBoxResult Show(string messageBoxText);\n    MessageBoxResult Show(string messageBoxText, string caption);\n    MessageBoxResult Show(Window owner, string messageBoxText);\n    MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button);\n    MessageBoxResult Show(Window owner, string messageBoxText, string caption);\n    MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon);\n    MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button);\n    MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult);\n    MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon);\n    MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult, MessageBoxOptions options);\n    MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult);\n    MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult, MessageBoxOptions options);\n}\n</code></pre>\n\n<p>using System.Windows;</p>\n\n<pre><code>public class MessageBoxService : IMessageBoxService\n{\n    public MessageBoxResult Show(string messageBoxText)\n    {\n        return MessageBox.Show(messageBoxText);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText)\n    {\n        return MessageBox.Show(owner, messageBoxText);\n    }\n\n    public MessageBoxResult Show(string messageBoxText, string caption)\n    {\n        return MessageBox.Show(messageBoxText, caption);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText, string caption)\n    {\n        return MessageBox.Show(owner, messageBoxText, caption);\n    }\n\n    public MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button)\n    {\n        return MessageBox.Show(messageBoxText, caption, button);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button)\n    {\n        return MessageBox.Show(owner, messageBoxText, caption, button);\n    }\n\n    public MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon)\n    {\n        return MessageBox.Show(messageBoxText, caption, button, icon);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon)\n    {\n        return MessageBox.Show(owner, messageBoxText, caption, button, icon);\n    }\n\n    public MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult)\n    {\n        return MessageBox.Show(messageBoxText, caption, button, icon, defaultResult);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult)\n    {\n        return MessageBox.Show(owner, messageBoxText, caption, button, icon, defaultResult);\n    }\n\n    public MessageBoxResult Show(string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult, MessageBoxOptions options)\n    {\n        return MessageBox.Show(messageBoxText, caption, button, icon, defaultResult, options);\n    }\n\n    public MessageBoxResult Show(Window owner, string messageBoxText, string caption, MessageBoxButton button, MessageBoxImage icon, MessageBoxResult defaultResult, MessageBoxOptions options)\n    {\n        return MessageBox.Show(owner, messageBoxText, caption, button, icon, defaultResult, options);\n    }\n}\n</code></pre>\n", "tags": ["mvvm", "dialog", "mvvm-light"], "creation_date": 1475495029, "score": 0, "last_activity_date": 1475495029, "answer_id": 39830804, "is_accepted": false, "owner": {"user_id": 1977871, "reputation": 935, "user_type": "registered", "accept_rate": 85, "display_name": "VivekDev", "link": "http://stackoverflow.com/users/1977871/vivekdev", "profile_image": "https://www.gravatar.com/avatar/96369eebd8de286a6d4b6db05c2bb1fc?s=128&d=identicon&r=PG"}, "title": "Show dialog with MVVM Light toolkit", "question_id": 5644459}