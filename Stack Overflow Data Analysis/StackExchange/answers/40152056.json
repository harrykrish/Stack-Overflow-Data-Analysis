{"title": "How to output child elements separately, not as one space-delimited string?", "tags": ["xml", "powershell"], "creation_date": 1476959894, "score": 1, "body": "<p>You're not using <a href=\"https://wikipedia.org/wiki/XPath\" rel=\"nofollow\">XPath selectors</a> but native PowerShell object property access.</p>\n\n<p>PowerShell 3.0 and newer automatically produces an array of the specified property values when used on an array as a whole.</p>\n\n<p>In case of XML, each repeated element like <code>COMPOUND</code> returns an array when accessed by name (that is without index), so the aforementioned behavior applies to <code>$_.COMPOUND.id</code>: this is an array! And it's automatically type-coerced into a string by joining the elements with a space in your code.</p>\n\n<p><strong>Solution 1:</strong> enumerate the child elements manually:</p>\n\n<pre><code>$delim = ':'\nforeach ($sample in $xml.QUANDATASET.GROUPDATA.GROUP.SAMPLELISTDATA.SAMPLE) {\n    foreach ($compound in $sample.COMPOUND) {\n        $sample.id, $sample.name,\n        $compound.id, $compound.name, [double]$compound.PEAK.analconc -join $delim\n    }\n}\n</code></pre>\n\n<p><strong>Solution 2:</strong> actually use XPath to select all child elements and access <code>SAMPLE</code> as <code>parentNode</code>:</p>\n\n<pre><code>$delim = ':'\nforeach ($compound in $xml.SelectNodes('//COMPOUND')) {\n    $sample = $compound.ParentNode\n    $sample.id, $sample.name,\n    $compound.id, $compound.name, [double]$compound.PEAK.analconc -join $delim\n}\n</code></pre>\n\n<p>Instead of pipelining I'm using <code>foreach</code> statement to have a nicely named iterator variable.</p>\n", "last_activity_date": 1476960389, "answer_id": 40152056, "is_accepted": true, "owner": {"user_id": 3959875, "reputation": 15080, "user_type": "registered", "display_name": "wOxxOm", "link": "http://stackoverflow.com/users/3959875/woxxom", "profile_image": "https://i.stack.imgur.com/wJdGu.png?s=128&g=1"}, "last_edit_date": 1476960389, "question_id": 40151076}