{"body": "<p>You can do what you want simply by removing <code>val</code> from the constructor parameter, so that it is a parameter and not a member.  Your final class would be:</p>\n\n\n\n<pre><code>class AnyUsernamePersistentNodePath(username: String) : AnyPersistenceNodePath {\n    override val key = \"username\"\n    override val value = username\n}\n</code></pre>\n\n<p>You cannot otherwise change the name of something that you are truly overriding.  But you can pass in the value to be assigned to a member later during construction, as my slightly modified version of your code shows.  </p>\n", "tags": ["kotlin"], "creation_date": 1476209560, "score": 7, "last_activity_date": 1476209560, "answer_id": 39983897, "is_accepted": true, "owner": {"user_id": 3679676, "reputation": 12075, "user_type": "registered", "accept_rate": 100, "display_name": "Jayson Minard", "link": "http://stackoverflow.com/users/3679676/jayson-minard", "profile_image": "https://www.gravatar.com/avatar/c0faaf44a8922cf165ff73d9efd0dade?s=128&d=identicon&r=PG"}, "title": "Override interface property with constructor parameter with different name", "question_id": 39983290}