{"body": "<p>@CarlosRafaelRamirez mentioned the right place, but I will add a few details and provide more detailed, step-by-step instructions, because Windows devs are often not fluent in Linux ecosystem.</p>\n\n<p><strong>Disclaimer</strong>: following steps make it possible to hit Docker Remote API from Windows host, but please keep in mind two things:</p>\n\n<ol>\n<li>This should not be done in production as it makes Docker machine very not secure.</li>\n<li>Current solution disables most of the <code>docker-machine</code> and all <code>docker</code> CLI functionality. <code>docker-machine ssh</code> remains operational, forcing one to SSH into docker machine to access <code>docker</code> commands.</li>\n</ol>\n\n<p><strong>Solution</strong>\nNow, here are the steps necessary to switch Docker API to non-TLS port. (Docker machine name is assumed to be \"default\". If your machine name has a different name, you will need to specify it in the commands below.)</p>\n\n<ol>\n<li>Start \"Docker Quickstart Terminal\". It starts Bash shell and is the place where all following commands will be run. Run <code>docker-machine ip</code> command and note the IP address of the docker host machine. Then do</li>\n<li><code>docker-machine ssh</code></li>\n<li><code>cd /var/lib/boot2docker</code></li>\n<li><code>sudo vi profile</code> This starts \"vi\" editor in elevated privileges mode required for editing \"profile\" file, where Docker host settings are. (If as a Windows user you are not familiar with vi, here's is super-basic crash course on it. When file is open in the vi, vi is not in editing mode. Press \"i\" to start edit mode. Now you can make changes. After you made all the changes, hit <code>Esc</code> and then <code>ZZ</code> to save changes and exit vi. If you need to exit vi without saving changes, after <code>Esc</code> please type <code>:q!</code> and hit Enter. \":\" turns on vi's command mode, and \"q!\" command means exit without saving. Detailed vi command info is <a href=\"http://www.lagmonster.org/docs/vi.html\" rel=\"nofollow\">here</a>.)</li>\n<li>Using vi, change DOCKER_HOST to be <code>DOCKER_HOST='-H tcp://0.0.0.0:2375'</code>, and set <code>DOCKER_TLS=no</code>. Save changes as described above.</li>\n<li><code>exit</code> to leave SSH session.</li>\n<li><code>docker-machine restart</code></li>\n</ol>\n\n<p>After doocker machine has restarted, your sould be able to hit docker API URL, like <code>http://dokerMachineIp:2375/containers/json?all=1</code>, and get valid JSON back.</p>\n\n<p>This is <strong>the end</strong> of steps required to achieve the main goal.</p>\n\n<p>However, if at this point you try to run <code>docker-machine config</code> or <code>docker images</code>, you will see an error message indicating that docker CLI client is trying to get to the Docker through the old port/TLS settings, which is understandable. What was not expected to me though, is that even after I followed all the <a href=\"https://docs.docker.com/machine/get-started/\" rel=\"nofollow\">Getting Started</a> directions, and ran <code>export DOCKER_HOST=tcp://192.168.99.101:2375</code> and <code>export DOCKER_TLS_VERIFY=0</code>, resulting in</p>\n\n<pre><code>$ env | grep DOCKER\nDOCKER_HOST=tcp://192.168.99.101:2375\nDOCKER_MACHINE_NAME=default\nDOCKER_TLS_VERIFY=0\nDOCKER_TOOLBOX_INSTALL_PATH=C:\\Program Files\\Docker Toolbox\nDOCKER_CERT_PATH=C:\\Users\\USERNAME\\.docker\\machine\\machines\\default\n</code></pre>\n\n<p>the result was the same:</p>\n\n<pre><code>$ docker-machine env\nError checking TLS connection: Error checking and/or regenerating the certs: There was an error validating certificates for host \"192.168.99.101:2376\"\n</code></pre>\n\n<p>If you see a problem with how I changed environment variables to point Docker CLI to the new Docker host address, please comment.</p>\n\n<p>To work around this problem, use <code>docker-machine ssh</code> command and run your <code>docker</code> commands after that.</p>\n", "tags": ["windows", "rest", "docker", "windows-7", "docker-api"], "creation_date": 1477693581, "score": 0, "last_activity_date": 1477693581, "answer_id": 40314020, "is_accepted": false, "owner": {"user_id": 516508, "reputation": 463, "user_type": "registered", "display_name": "VladH", "link": "http://stackoverflow.com/users/516508/vladh", "profile_image": "https://www.gravatar.com/avatar/2cf52f12bde86c7c118380f8b8746dab?s=128&d=identicon&r=PG"}, "title": "How to enable Docker API access from Windows running Docker Toolbox (docker machine)", "question_id": 40294853}