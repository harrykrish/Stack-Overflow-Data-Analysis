{"title": "use lodash to find substring from array of strings", "tags": ["javascript", "arrays", "include", "lodash"], "creation_date": 1456520979, "score": 2, "body": "<p>You can easily construct an iteratee for <a href=\"https://lodash.com/docs#some\" rel=\"nofollow\">some()</a> using lodash's higher-order functions. For example:</p>\n\n<pre><code>_.some(myArray, _.unary(_.partialRight(_.includes, 'orange')));\n</code></pre>\n\n<p>The <a href=\"https://lodash.com/docs#unary\" rel=\"nofollow\">unary()</a> function ensures that only one argument is passed to the callback. The <a href=\"https://lodash.com/docs#partialRight\" rel=\"nofollow\">partialRight()</a> function is used to apply the <code>'orange'</code> value as the second argument to <a href=\"https://lodash.com/docs#includes\" rel=\"nofollow\">includes()</a>. The first argument is supplied with each iteration of <code>some()</code>.</p>\n\n<p>However, this approach won't work if case sensitivity matters. For example, <code>'Orange'</code> will return false. Here's how you can handle case sensitivity:</p>\n\n<pre><code>_.some(myArray, _.method('match', /Orange/i));\n</code></pre>\n\n<p>The <a href=\"https://lodash.com/docs#method\" rel=\"nofollow\">method()</a> function creates a function that will call the given method of the first argument passed to it. Here, we're matching against a case-insensitive regular expression.</p>\n\n<p>Or, if case-sensitivity doesn't matter and you simply prefer the <code>method()</code> approach, this works as well for ES2015:</p>\n\n<pre><code>_.some(myArray, _.method('includes', 'orange'));\n</code></pre>\n", "last_activity_date": 1456521360, "answer_id": 35661794, "is_accepted": true, "owner": {"user_id": 4606858, "reputation": 3969, "user_type": "registered", "display_name": "Adam Boduch", "link": "http://stackoverflow.com/users/4606858/adam-boduch", "profile_image": "https://lh4.googleusercontent.com/-kmPj38LfU9c/AAAAAAAAAAI/AAAAAAAAAyU/jGT5CG2ZIIU/photo.jpg?sz=128"}, "last_edit_date": 1456521360, "question_id": 35615413}