{"body": "<blockquote>\n  <p>First Question: Do i also have to enter the instance of the Sales entity into the Sales Entity? or that will be updated automatically since there is a relationship?</p>\n</blockquote>\n\n<p>Something you might not realize here is that you are inherently saving the object by adding it to the <code>managedObjectContext</code>. As soon as you do something like </p>\n\n<pre><code>let sale = Sale(context: managedObjectContext)\n</code></pre>\n\n<p>followed by </p>\n\n<pre><code>managedObjectContext.save()\n</code></pre>\n\n<p>the context issues a save request to your persistent store (your actual SQL database). </p>\n\n<p>Therefore your question whether you need to store the Sale as well is answered, it will always be stored upon saving the context. </p>\n\n<blockquote>\n  <p>Second Question: If i want to query all the sales that happened to date, do i query the Sales Entity? or do i query the relationship in the Products Entity?</p>\n</blockquote>\n\n<p><strong>That depends...</strong></p>\n\n<p>First let me give you a little tip/best practise: </p>\n\n<p><em>Always make sure to set up an inverse relationship</em></p>\n\n<p>In the Core Data Editor for your <code>Product</code> entity's relationships you can do something like this: </p>\n\n<p><a href=\"http://i.stack.imgur.com/o0Ka2.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/o0Ka2.png\" alt=\"enter image description here\"></a></p>\n\n<p>Your sales relationships look something like this: </p>\n\n<p><a href=\"http://i.stack.imgur.com/c2suM.png\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/c2suM.png\" alt=\"enter image description here\"></a></p>\n\n<p>A relationship is nothing more but a dependency between two entities, therefore there is always an <em>inverse relationship</em> between two entities, make sure you hook them up as shown above. </p>\n\n<p>Why am I telling you this ? Remember I mentioned it depends what entity you do your query on ? This is where it matters. </p>\n\n<p>For example, if you want the <code>Sale</code> for a given <code>Product</code>, you would query the product itself (by querying its relationship called <code>sale</code>): </p>\n\n<pre><code>let product = [A product instance from your Core Data store]\nlet sale = product.sale // returns the sale the product is associated to\n</code></pre>\n\n<p>If you want all the products from a given sale, you would query the <code>Sale</code> entity leveraging the <code>products</code> relationship: </p>\n\n<pre><code>let sale = [A sale from your Core Data store]\nlet products = sale.products // the products contained in the sale\n</code></pre>\n\n<p>You mentioned that you want <strong>all the sales to a given date</strong>: </p>\n\n<p>It would not make any sense querying the <code>Product</code> entity for that because each product only has a relationship to the sale it is contained in. </p>\n\n<p>So, to answer your question, you should query the <code>Sale</code> entity to retrieve all the sales to a given date. </p>\n\n<p>I hope that helps, let me know if something is unclear.</p>\n", "tags": ["ios", "swift", "core-data"], "creation_date": 1457436916, "score": 1, "last_activity_date": 1457436916, "answer_id": 35866277, "is_accepted": true, "owner": {"user_id": 1066899, "reputation": 3405, "user_type": "registered", "accept_rate": 67, "display_name": "the_critic", "link": "http://stackoverflow.com/users/1066899/the-critic", "profile_image": "https://www.gravatar.com/avatar/093623a2cb341330217f2a4f38a69cc2?s=128&d=identicon&r=PG"}, "title": "Swift iOS : Insert data into related entities in CoreData", "question_id": 35858236}