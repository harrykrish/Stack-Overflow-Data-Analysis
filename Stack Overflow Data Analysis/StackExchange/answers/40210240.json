{"body": "<p>This is a function used to sum up all nodes in a binary tree. First down from root to leave and then goes up (stack unwinding). So, time complexity is O(N), as it needs to visit each node at least once.</p>\n", "tags": ["time-complexity"], "creation_date": 1477279180, "score": 0, "last_activity_date": 1477279180, "answer_id": 40210240, "is_accepted": false, "owner": {"user_id": 1465553, "reputation": 1444, "user_type": "registered", "accept_rate": 75, "display_name": "Saurav Sahu", "link": "http://stackoverflow.com/users/1465553/saurav-sahu", "profile_image": "https://www.gravatar.com/avatar/5b559f395549789c041652429444dc0a?s=128&d=identicon&r=PG"}, "title": "Calculating time complexity using master method", "question_id": 40210162}