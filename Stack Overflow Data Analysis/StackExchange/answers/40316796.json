{"body": "<p>After a while of searching over internet and reading about ui-grid events, I coded a directive to use the <code>scope</code> entity and ui-grid events to apply validation on click of cell.</p>\n\n<p>The basic trick was to use the custom editable template and apply validation on its field.</p>\n\n<p>Here is the code, it can also be found at my repository <a href=\"https://github.com/soyiatgit/CodedUtilities/blob/master/uiGridValidationDirective.js\" rel=\"nofollow\">here</a></p>\n\n<pre><code>(function(module){\n\n    module.directive('gridValidation', gridValidationFn);\n\n    gridValidationFn.$inject = ['uiGridEditConstants'];\n\n    function gridValidationFn(uiGridEditConstants) {\n        var directive = {\n            restrict: 'A',\n            template: '&lt;div&gt;&lt;input type=\"text\" ng-model=\"txtValue\"  ng-change=\"changeTxt(txtValue)\"/&gt;&lt;/div&gt;',\n            scope: true,\n            link: gridValidationLinkFn\n        };\n\n        return directive;\n\n        function gridValidationLinkFn(scope, elm, attr) {\n\n            var oldTxt = scope.row.entity[scope.col.field];\n            scope.limit = attr.limit;\n            scope.txtValue = oldTxt;\n\n            function windowClickListener(ev) {\n                if (ev.target.nodeName !== \"INPUT\")\n                    scope.editDone();\n            }\n\n            scope.changeTxt = function (val) {\n                if (attr.words) {\n                    if (scope.txtValue &amp;&amp; scope.txtValue.match(/\\S+/g) &amp;&amp; scope.txtValue.match(/\\S+/g).length &gt; Number(scope.limit)) {\n                        scope.txtValue = scope.txtValue.split(/\\s+/, Number(scope.limit)).join(\" \");\n                        scope.row.entity[scope.col.field] = scope.txtValue.split(/\\s+/, Number(scope.limit)).join(\" \");\n                    }\n                    else\n                        scope.row.entity[scope.col.field] = scope.txtValue;\n                }\n                else {\n                    if (scope.txtValue &amp;&amp; scope.txtValue.length &gt; Number(scope.limit)) {\n                        scope.txtValue = scope.txtValue.slice(0, Number(scope.limit));\n                        scope.row.entity[scope.col.field] = scope.txtValue;\n                    }\n                    else\n                        scope.row.entity[scope.col.field] = scope.txtValue;\n                }\n            };\n\n            scope.editDone = function () {\n                scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n            };\n\n            scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                angular.element(window).on('click', windowClickListener);\n            });\n\n            scope.$on('$destroy', function () {\n                angular.element(window).off('click', windowClickListener);\n            });\n        }\n\n    }\n}(angular.module(\"ModuleName\"))); \n</code></pre>\n\n<p>It works nicely for me. Hope it helps someone else</p>\n", "tags": ["angularjs", "angular-ui-grid", "ui-grid"], "creation_date": 1477723909, "score": 0, "last_activity_date": 1477723909, "answer_id": 40316796, "is_accepted": false, "owner": {"user_id": 5316255, "reputation": 505, "user_type": "registered", "accept_rate": 50, "display_name": "Saurabh Tiwari", "link": "http://stackoverflow.com/users/5316255/saurabh-tiwari", "profile_image": "https://i.stack.imgur.com/BYJ8v.jpg?s=128&g=1"}, "title": "How can I apply my custom validation on a ui-grid cell template", "question_id": 39753338}