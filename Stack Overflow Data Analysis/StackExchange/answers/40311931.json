{"title": "d3/dc.js - How to create a stacked bar chart while telling crossfilter to treat elements in an array as separate records?", "tags": ["javascript", "d3.js", "charts", "dc.js", "crossfilter"], "creation_date": 1477682629, "score": 0, "body": "<p>I fixed the colored stack problem.  I am using D3.js verison 2.5.5, crossfilter.js version 1.3.11, and dc.js and dc.css of version 2.1.0 dev. <a href=\"https://jsfiddle.net/rmc2zpr4/\" rel=\"nofollow\">https://jsfiddle.net/rmc2zpr4/</a></p>\n\n<p>I haven't fixed the counting issue.  To further explain what I mean...The examples seem to show the total count of items for entries containing the item chosen. For example, when choosing \"apple\", 'MA' shows a count of 2 -- 1 apple, 1 bread (you can highlight the legend to determine these) -- and 'TN' shows a count of 4 -- 1 orange, 1 bread, 2 apple. I hope someone can answer how can this be fixed to only show the counts for \"apple\", for example.</p>\n\n<pre><code>var data = [\n    {\"key\":\"KEY-1\",\"state\":\"MA\", \"items\":[\"orange\", \"meat\", \"bread\"], \"date\":\"Y16\"},\n    {\"key\":\"KEY-2\",\"state\":\"MA\", \"items\":[\"apple\", \"bread\"], \"date\":\"Y15\"},\n    {\"key\":\"KEY-3\",\"state\":\"TX\", \"items\":[\"bread\"], \"date\":\"Y16\"},\n    {\"key\":\"KEY-4\",\"state\":\"TN\", \"items\":[\"apple\", \"bread\"], \"date\":\"Y16\"},\n    {\"key\":\"KEY-5\",\"state\":\"TN\", \"items\":[\"apple\", \"orange\"], \"date\":\"Y15\"},\n    {\"key\":\"KEY-6\",\"state\":\"TN\", \"items\": [], \"date\":\"Y14\"}\n];\n\nvar cf = crossfilter(data);\n\n//dimensions and groups:\nvar dates       = cf.dimension(function(d){ return d.date; });\nvar datesGroup  = dates.group().reduceCount(function(d){ return d.key; });\nvar states      = cf.dimension(function(d){ return d.state; });\nvar statesGroup = states.group().reduceCount(function(d){ return d.key; });\nvar itemsDim    = cf.dimension(function(d){ return d.items; });\nvar itemsGroup  = itemsDim.groupAll().reduce(reduceAdd, reduceRemove, reduceInitial).value();\nitemsGroup.all  = myAllFunction;\nvar statesDim   = cf.dimension(function(d){ return d.state; });\nvar states_items_group_apple  = statesDim.group().reduce(reduceAdd_apple,  reduceRemove_apple,  reduceInitial_items);\nvar states_items_group_bread  = statesDim.group().reduce(reduceAdd_bread,  reduceRemove_bread,  reduceInitial_items);\nvar states_items_group_orange = statesDim.group().reduce(reduceAdd_orange, reduceRemove_orange, reduceInitial_items);\nvar states_items_group_meat   = statesDim.group().reduce(reduceAdd_meat,   reduceRemove_meat,   reduceInitial_items);\nvar items        = cf.dimension(function(d){ return d.items; })\nvar itemsGroup1  = items.groupAll().reduce(reduceAdd1, reduceRemove1, reduceInitial).value();\nvar itemsGroup2  = items.groupAll().reduce(reduceAdd2, reduceRemove2, reduceInitial).value();\nvar itemsGroup3  = items.groupAll().reduce(reduceAdd3, reduceRemove3, reduceInitial).value();\nitemsGroup1.all  = myAllFunction;\nitemsGroup2.all  = myAllFunction;\nitemsGroup3.all  = myAllFunction;\n\n//graphs:\nvar row = dc.rowChart(\"#rowchart\");\nrow.height(170)\n   .dimension(itemsDim)\n   .group(itemsGroup)\n   .ordering(function(d){return -d.value;})\n   .renderLabel(true)\n       .ordinalColors([\"#008600\", \"#80FF80\", \"#FF80FF\", \"#860086\"])\n   .xAxis().ticks(3);\nrow.filterHandler(myFilterFunction);\n\nvar pie1 = dc.pieChart(\"#piechart1\");\npie1.height(75).width(75)\n    .dimension(dates)\n    .group(datesGroup);\n\nvar pie2 = dc.pieChart(\"#piechart2\");\npie2.height(75).width(75)\n    .dimension(states)\n    .group(statesGroup);\n\nvar bar = dc.barChart(\"#barchart\");\nbar.width(500).height(200)\n   .dimension(statesDim)\n   .group(states_items_group_bread,  'bread')\n   .stack(states_items_group_orange, 'orange')\n   .stack(states_items_group_apple,  'apple')\n   .stack(states_items_group_meat,   'meat')\n   .valueAccessor(function(p){ return p.value.count; })\n   .renderHorizontalGridLines(true)\n   .renderLabel(true)\n   .legend(dc.legend().x(100).y(0).horizontal(1).itemHeight(13).gap(6).legendWidth(400).itemWidth(100))\n   .gap(10)\n   .elasticX(true).elasticY(true)\n   .yAxisLabel(\"count\")\n   .x(d3.scale.ordinal())\n   .xUnits(dc.units.ordinal)\n   .margins({top:30, left:50, right:10, bottom:50});\n//bar.filterHandler(myFilterFunction);\n//bar.on(\"renderlet\", function(_chart){\n//    _chart.selectAll(\"rect.bar\").on(\"click\", _chart.onClick);\n//});\n\nvar bar2 = dc.barChart(\"#barchart2\");\nbar2.width(500).height(200)\n    .dimension(items)\n    .group(itemsGroup1, 'MA')\n    .stack(itemsGroup2, 'TN')\n    .stack(itemsGroup3, 'TX')\n    .renderHorizontalGridLines(true)\n    .renderLabel(true)\n    .legend(dc.legend().x(60).y(0).horizontal(1).itemHeight(13).gap(6).legendWidth(400).itemWidth(60))\n    .gap(10)\n    .yAxisLabel(\"count\")\n    .x(d3.scale.ordinal())\n    .xUnits(dc.units.ordinal)\n    .ordinalColors([\"#008600\", \"#80FF80\", \"#FF80FF\", \"#860086\"])\n    .margins({top:30, left:50, right:10, bottom:50});\nbar2.filterHandler(myFilterFunction);\n\ndc.renderAll();  // render graphs\n\n//reduce functions:\nfunction reduceAdd(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    v.items.forEach (function(val, idx) {\n        p[val] = (p[val] || 0) + 1; //increment counts\n    });\n    return p;\n}\nfunction reduceRemove(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    v.items.forEach (function(val, idx) {\n        p[val] = (p[val] || 0) - 1; //decrement counts\n    });\n    return p;\n}\nfunction reduceInitial() {\n    return {\n        bread: 0,\n        apple: 0,\n        orange: 0,\n        meat: 0\n    };  \n}\nfunction reduceAdd1(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"MA\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  += (val === 'bread'  ? 1 : 0);\n            p.apple  += (val === 'apple'  ? 1 : 0);\n            p.orange += (val === 'orange' ? 1 : 0);\n            p.meat   += (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceRemove1(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"MA\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  -= (val === 'bread'  ? 1 : 0);\n            p.apple  -= (val === 'apple'  ? 1 : 0);\n            p.orange -= (val === 'orange' ? 1 : 0);\n            p.meat   -= (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceAdd2(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"TN\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  += (val === 'bread'  ? 1 : 0);\n            p.apple  += (val === 'apple'  ? 1 : 0);\n            p.orange += (val === 'orange' ? 1 : 0);\n            p.meat   += (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceRemove2(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"TN\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  -= (val === 'bread'  ? 1 : 0);\n            p.apple  -= (val === 'apple'  ? 1 : 0);\n            p.orange -= (val === 'orange' ? 1 : 0);\n            p.meat   -= (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceAdd3(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"TX\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  += (val === 'bread'  ? 1 : 0);\n            p.apple  += (val === 'apple'  ? 1 : 0);\n            p.orange += (val === 'orange' ? 1 : 0);\n            p.meat   += (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceRemove3(p, v) {\n    if (v.items[0] === \"\") return p;    // skip empty values\n    if (v.state === \"TX\"){\n        v.items.forEach (function(val, idx) {\n            p.bread  -= (val === 'bread'  ? 1 : 0);\n            p.apple  -= (val === 'apple'  ? 1 : 0);\n            p.orange -= (val === 'orange' ? 1 : 0);\n            p.meat   -= (val === 'meat'   ? 1 : 0);\n        });    \n    }\n    return p;\n}\nfunction reduceAdd_apple(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count += (val === 'apple' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceRemove_apple(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count -= (val === 'apple' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceAdd_bread(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count += (val === 'bread' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceRemove_bread(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count -= (val === 'bread' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceAdd_orange(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count += (val === 'orange' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceRemove_orange(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count -= (val === 'orange' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceAdd_meat(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count += (val === 'meat' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceRemove_meat(p, v){\n    if (v.items[0] === \"\") return p;    // skip empty values\n    p.state = v.state;\n    v.items.forEach(function(val, idx){\n        p.count -= (val === 'meat' ? 1 : 0);\n    });\n    return p;\n}\nfunction reduceInitial_items(){\n    return {\n        count: 0,\n        state: ''\n    };\n}\n\n\n//filter function:\nfunction myFilterFunction (dimension, filters) {\n    dimension.filter(null);   \n    if (filters.length === 0)\n        dimension.filter(null);\n    else\n        dimension.filterFunction(function (d) {\n            for (var i=0; i &lt; d.length; i++) {\n                if (filters.indexOf(d[i]) &gt;= 0) return true;\n            }\n            return false;\n        });\n    return filters; \n}\n\n//all function:\nfunction myAllFunction() {\n    var newObject = [];\n    for (var key in this) {\n        if (this.hasOwnProperty(key) &amp;&amp; key != \"all\") {\n            newObject.push({\n                key: key,\n                value: this[key]\n            });\n        }\n    }\n    return newObject;\n};\n</code></pre>\n", "last_activity_date": 1477683473, "answer_id": 40311931, "is_accepted": false, "owner": {"user_id": 5402754, "reputation": 33, "user_type": "registered", "display_name": "Casey", "link": "http://stackoverflow.com/users/5402754/casey", "profile_image": "https://www.gravatar.com/avatar/f1a4695139ca50788bbef564cc2e0acc?s=128&d=identicon&r=PG"}, "last_edit_date": 1477683473, "question_id": 40307099}