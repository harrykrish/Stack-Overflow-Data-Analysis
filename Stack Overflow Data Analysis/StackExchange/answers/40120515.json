{"title": "How to loop through a list and then swap digits for other instances of the loop to see?", "tags": ["python", "xml", "list", "loops", "compare"], "creation_date": 1476839661, "score": 0, "body": "<p>This version remembers the newest addition date (and time):</p>\n\n<pre><code>import jdcal\n\ndef julian(y, m, d, h, mi, s):\n    return sum(jdcal.gcal2jd(y, m, d)) + (h-12.0)/24 + mi/1440.0 + s/86400.0\n\n\ntree = get_xml_data(line)\n    to_log(tree)\n    julNewest = 0.0                                                         # establish a comparison value for the newest addition\n    for child in tree:\n        if child.tag.endswith(\"url\"):\n            for c in child:\n                    if c.tag.endswith(\"lastmod\"):\n                        xml_date = c.text\n                        year = float(xml_date[0:4])\n                        month = float(xml_date[5:7])\n                        day = float(xml_date[8:10])\n                        hour = float(xml_date[11:13])\n                        minute = float(xml_date[14:16])\n                        second = float(xml_date[17:19])\n                        julDay = julian(year, month, day, hour, minute, second) # calculate Julian day number of recent addition\n                        if julDay &gt; julNewest:\n                            nt.set_year(int(year))\n                            nt.set_month(int(month))\n                            nt.set_day(int(day))\n                            nt.set_hour(int(hour))\n                            nt.set_minute(int(minute))\n                            nt.set_second(int(second))\n                            julNewest = julDay\n\n                        to_log(\"Addition:\", year, month, day, hour, minute, second)\n        to_log(\"Newest addition:\", nt.get_year(), nt.get_month(), nt.get_day())\n        to_log(\"Newest addition (cont.):\", nt.get_hour(), nt.get_minute(), nt.get_second())`\n</code></pre>\n\n<p>You first have to import the module jdcal (if not installed, install it with \"pip install jdcal\"). The function that is defined then allows you to represent any date as a unique (float) number. It is much easier to compare these single numbers to other date-converted numbers to see which one is higher (more recent, newer).</p>\n\n<p>Note that I also simplified and sped up your code that constructs year, month, day information.</p>\n\n<p>Hope this helps.</p>\n\n<p>Regards,</p>\n", "last_activity_date": 1476865795, "answer_id": 40120515, "is_accepted": true, "owner": {"user_id": 6804704, "reputation": 86, "user_type": "registered", "display_name": "Ukimiku", "link": "http://stackoverflow.com/users/6804704/ukimiku", "profile_image": "https://i.stack.imgur.com/1mhOw.jpg?s=128&g=1"}, "last_edit_date": 1476865795, "question_id": 40119661}