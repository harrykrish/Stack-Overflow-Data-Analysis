{"title": "The view &#39;Reporting&#39; or its master was not found or no view engine supports the searched locations", "tags": ["c#", "asp.net", "model-view-controller", "asp.net-mvc-5", "asp.net-mvc-routing"], "creation_date": 1477633244, "score": 0, "body": "<p>In MVC, the routing engine, which is used to parse incoming and outgoing URL Combinations, if you follow the Convention (rules) that the routing engine uses, you don't have to change the Configuration. I really only use custom routes for areas or anything outside the convention of MVC. And the convention you have seems to follow the guidelines of MVC with folder and controller matching each other. so i do not believe you need a custom route.</p>\n\n<p>The routing engine for ASP.net MVC does not serve web pages (.cshtml). It provides a way for a URL to be handled by a Class in your code, which can render text/html to the output stream, or parse and serve the .cshtml files in a consistent manner using Convention. Your View engine is what provides the web pages (.cshtml) file from the directory named after the controller. This being said the routing engine controls the URL. Have you tried <code>**return View(\"NameOfView\", Model);**</code></p>\n\n<p>You need to watch for other things, like Make sure the namespaces are correct and if you are you obtaining a string from your model? of you are it must be properly formatted like <code>return View(\"Message\",(object)msg);</code> and not <code>return View(\"Message\",msg);</code> as i can not see your model, or your view, and the complete stack trace is not posted its really hard to say why your view is not showing. it would also be nice if you had show a URL that was being called with changed names of course. but the main thing i can think of is the model, and or namespaces, Also if you are calling the <code>Layout = \"~/Views/Shared/_Layout.cshtml\";</code> from your view or are you dependent on the <code>_ViewStart</code> file. Also check that you are calling the correct action from you menu, or link. The <code>@Html.Action</code> method actually invokes a controller and renders the view, Have you tried to use intellisense to look at the overloads for ActionLink, (<code>@Html.ActionLink(\"Some text\",\"Action\",\"Controller\", new {id=1}, null)</code>), just to make sure your calling the correct action from the link. Hope this kind of points you in the right direction to a solution.</p>\n", "last_activity_date": 1477634328, "answer_id": 40298727, "is_accepted": true, "owner": {"user_id": 4851351, "reputation": 1249, "user_type": "registered", "accept_rate": 60, "display_name": "Rich Bailo", "link": "http://stackoverflow.com/users/4851351/rich-bailo", "profile_image": "https://www.gravatar.com/avatar/bcfbceb1749f505b4f21f3dd0cfa7883?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477634328, "question_id": 40271603}