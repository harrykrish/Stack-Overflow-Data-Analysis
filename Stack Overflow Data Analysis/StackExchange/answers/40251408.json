{"body": "<p>Here is what I did</p>\n\n<pre><code>private void myEvent_Handler(object sender, SomeEvent e)\n{\n  // I dont know how many times this event will fire\n  Task t = new Task(() =&gt;\n  {\n    if (something == true) \n    {\n        DoSomething(e);  \n    }\n  });\n  t.RunSynchronously();\n}\n</code></pre>\n\n<p>working great and not blocking UI thread</p>\n", "tags": ["c#", ".net", "task-parallel-library", "windows-store-apps", "async-await"], "creation_date": 1477438464, "score": 0, "last_activity_date": 1477438464, "answer_id": 40251408, "is_accepted": false, "owner": {"user_id": 3453898, "reputation": 695, "user_type": "registered", "accept_rate": 74, "display_name": "dbnex14", "link": "http://stackoverflow.com/users/3453898/dbnex14", "profile_image": "https://www.gravatar.com/avatar/654b07502deb9fcacf3193a50203cffb?s=128&d=identicon&r=PG&f=1"}, "title": "Synchronously waiting for an async operation, and why does Wait() freeze the program here", "question_id": 14485115}