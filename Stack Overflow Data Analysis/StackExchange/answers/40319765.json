{"body": "<p>Ok, i'll answer myself since i finally solved that issue.</p>\n\n<p>So apparently one of the problem is that EncodeElement is making use of MarshalXML, and with a huge file it cause an explosion function calls.</p>\n\n<p>Anyway the solution is to manually encode all components of the element. </p>\n\n<p>So in that case i did that: </p>\n\n<pre><code>// MarshalXML generate XML output for PrecsontructedInfo\nfunc (preconstructed PreconstructedInfo) MarshalXML(e *xml.Encoder, start xml.StartElement) (err error) {\n    if (PreconstructedInfo{} == preconstructed) {\n        return nil\n    }\n    if preconstructed.Decks &gt; 0 {\n        start.Attr = []xml.Attr{xml.Attr{Name: xml.Name{Local: \"decks\"}, Value: strconv.Itoa(preconstructed.Size)}}\n    }\n    if strings.Compare(preconstructed.Type, \"\") != 0 {\n        start.Attr = append(start.Attr, xml.Attr{Name: xml.Name{Local: \"type\"}, Value: preconstructed.Type})\n    }\n\n    err = e.EncodeToken(start)\n    e.EncodeElement(preconstructed.Size, xml.StartElement{Name: xml.Name{Local: \"size\"}})\n    return e.EncodeToken(xml.EndElement{Name: start.Name})\n}\n</code></pre>\n\n<p>So what i did is: </p>\n\n<ol>\n<li>Check if the field is empty or not, if yes return null (the same as in my question)</li>\n<li>If not empty, check for the values contained in PreconstructedInfo, and add them in their relevant position, add first attributes to the start element. start.Attr will contain the xml attributes for the tag being Marshalled, the syntax for it is quite easy, you specify the name and the value. This has to be done before calling e.EncodeToken(start).</li>\n<li>After that encode the other elements of the tag into the current start Element. As you can see you must encode the tag using the xml.StartElement, in a similar way as for the attribute.</li>\n<li>Finally you can close the start Tag. </li>\n</ol>\n\n<p>In that way it will generate the xml tag only if data is available, and add attributes/childs only if they have a value, if they are empty or 0 it will not be added. </p>\n", "tags": ["xml", "go", "marshalling"], "creation_date": 1477749137, "score": 1, "last_activity_date": 1477749137, "answer_id": 40319765, "is_accepted": true, "owner": {"user_id": 907685, "reputation": 2363, "user_type": "registered", "accept_rate": 87, "display_name": "Ivan", "link": "http://stackoverflow.com/users/907685/ivan", "profile_image": "https://www.gravatar.com/avatar/fe0614a9325272b0dbeea1751f3c8ebe?s=128&d=identicon&r=PG"}, "title": "Golang XML customize output", "question_id": 39780433}