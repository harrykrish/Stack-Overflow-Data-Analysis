{"title": "Solve set of simple equations given only a few variables", "tags": ["python", "performance", "recursion", "sympy"], "creation_date": 1477622965, "score": 2, "body": "<p>Just get SymPy and stuff the whole system of linear equations into <a href=\"http://docs.sympy.org/latest/modules/solvers/solveset.html#sympy.solvers.solveset.linsolve\" rel=\"nofollow\"><code>sympy.solvers.solveset.linsolve</code></a>. It'll give you the whole solution space, including the values of variables with determined values, in a form dependent on whether the system has 0, 1, or infinite solutions.</p>\n\n<p>There's probably also a NumPy/SciPy way to get the solution set of an underdetermined system, but whatever that way is, I don't know it. Google suggests a <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.svd.html\" rel=\"nofollow\">singular value decomposition</a> would be useful, but I haven't figured out how you'd get a basis for the solution set out of that.</p>\n\n<hr>\n\n<p>In case it wasn't clear, \"the whole system of linear equations\" includes formulating known variable values as equations. For example, if you know that <code>u2 = 5</code>, then <code>u2 = 5</code> would be one of the linear equations. You'd represent that as <code>u2 - 5</code> in the <code>eqns</code> list.</p>\n", "last_activity_date": 1477671583, "answer_id": 40297304, "is_accepted": true, "owner": {"user_id": 2357112, "reputation": 78524, "user_type": "registered", "accept_rate": 40, "display_name": "user2357112", "link": "http://stackoverflow.com/users/2357112/user2357112", "profile_image": "https://www.gravatar.com/avatar/3f80897d57525afe9eac4fb8c8318052?s=128&d=identicon&r=PG"}, "last_edit_date": 1477671583, "question_id": 40277144}