{"title": "How to add user-registration form to my django app?", "tags": ["django", "authentication", "authorization", "django-1.9"], "creation_date": 1474474474, "score": -1, "body": "<p>You can follow <a href=\"https://www.youtube.com/watch?v=3UEY0ZIQ9dU&amp;list=PL6gx4Cwl9DGBlmzzFcLgDhKTTfNLfX1IK&amp;index=34\" rel=\"nofollow\">this youtube tutorial</a>, it really helped me and if you follow it completely you'll by more familiar with the django configuration.</p>\n\n<p><strong>Update</strong></p>\n\n<p>Also, you can follow this steps: </p>\n\n<ul>\n<li><p>1.- Create a forms.py file inside your app directory with the following code</p>\n\n<pre><code>\n\n<pre><code># we import the django default user model\nfrom django.contrib.auth.models import User\n# also, import the forms to create em\nfrom django import forms\n\n# define a class for your form, it can be anithing you want\nclass UserForm(forms.ModelForm):\n    # password = forms.CharField(widget=forms.PasswordInput)\n    # this Meta class is the way we send information for our form\n    class Meta:\n        # define the model\n        model = User\n        # define the fields you need (note that username and password are required)\n        fields = [\n            'password',\n            'username',\n            'first_name',\n            'last_name',\n            'is_staff',\n            'email',\n        ]\n        # then, in widgets you can define the input type of the field and give\n        # attributes to each one\n        widgets = {\n            'password': forms.PasswordInput(attrs={'class': 'form-control', 'name': 'username'}),\n            'username': forms.TextInput(attrs={'class': 'form-control', 'name': 'username', 'placeholder': 'username'}),\n            'first_name': forms.TextInput(attrs={'class': 'form-control', 'name': 'first_name', 'placeholder': 'First Name'}),\n            'last_name': forms.TextInput(attrs={'class': 'form-control', 'name': 'last_name', 'placeholder': 'Last Name'}),\n            'is_staff': forms.CheckboxInput(attrs={'class': 'form-control', 'name': 'is_staff'}),\n            'email': forms.TextInput(attrs={'class': 'form-control', 'name': 'email', 'placeholder': 'email'}),\n        }\n</code></pre>\n\n</code></pre></li>\n<li><p>2.- Then you have to create the view.py file inside the app directory (if not created)</p>\n\n<pre><code>\n    # import the View form django and the UserForm we created on step 1\n    from django.views.generic import View\n    from .forms import UserForm\n    # And some other things we need\n    from django.core.urlresolvers import reverse_lazy\n    from django.http import HttpResponseRedirect\n    from django.contrib.auth.models import User # we also need this one\n    from django.shortcuts import render\n    from django.contrib import messages\n    from django.views import generic\n\n<pre><code># create the class view, named as you need\nclass UserFormView(View):\n    # define the form to use, in this case the form we created\n    form_class = UserForm\n    # define the template_name, your main html file wher your are goin to use the form\n    template_name = 'usersControll/add.html'\n    # and the reverse_lazy is helpfull when the user succesfully added a new user\n    # replace 'users-add' with the name of your rute \n    success_url = reverse_lazy('users-add')\n\n    def get(self, request):\n        form = self.form_class(None)\n        return render(request, self.template_name, {'form': form})\n\n    def post(self, request):\n        form = self.form_class(request.POST)\n\n        if form.is_valid():\n            return self.form_valid(form)\n        else:\n            return self.form_invalid(form, request)\n\n    def form_valid(self, form):\n        # when the info the user gave us is valid, stop the commit \n        # so we can give some nice format to this info\n        user = form.save(commit=False)\n        # the \"form.cleaned_data\" help us to give a standar format to the info\n        username = form.cleaned_data['username']\n        first_name = form.cleaned_data['first_name']\n        last_name = form.cleaned_data['last_name']\n        password = 'tempPass'\n        user.set_password(password)\n        # aaand we save it to the database\n        user.save()\n\n        # in my case a send a succesfull massage to the user indicating that\n        # went fine\n        messages.add_message(self.request, messages.SUCCESS, \"El usuario &lt;b&gt;form.cleaned_data['first_name']&lt;/b&gt; fue registrado exitosamente.\")\n        return super(UserFormView, self).form_valid(form)\n\n    def form_invalid(self, form, request):\n        return render(request, self.template_name, {'form': form})\n</code></pre>\n\n</code></pre>\n\n<ul>\n<li><p>3.- Add the route in your urls.py file</p>\n\n<pre><code>\n\nfrom django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    url(r'^add/', views.UserFormView.as_view(), name='users-add'),\n    # dont forget to add the .as_view() because our view is a class and not a function\n]\n\n</code></pre></li>\n</ul></li>\n<li><p>4.- finally just add the form in your html file</p>\n\n<pre><code>&lt;form action=\"\" method=\"post\"&gt;\n    &lt;div class=\"panel panel-default\"&gt;\n      &lt;div class=\"panel-body\"&gt;\n        {% csrf_token %}\n        {% if messages %}\n          {% for msg in messages %}\n            &lt;div class=\"alert alert-{{msg.level_tag}} alert-dismissible\" role=\"alert\"&gt;\n              &lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"&gt;x&lt;/button&gt;\n              {% autoescape off %}\n                {{ msg.message }}\n              {% endautoescape %}\n            &lt;/div&gt;\n          {% endfor %}\n        {% endif %}\n\n        {% if form.errors %}\n          &lt;div class=\"alert alert-danger alert-dismissible\"&gt;\n            &lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"&gt;x&lt;/button&gt;\n              &lt;i class=\"fa fa-bug\"&gt;&lt;/i&gt; Oops, algo sali\u00f3 mal.\n          &lt;/div&gt;\n        {% endif %}\n        &lt;div class=\"col-lg-6\"&gt;\n\n          &lt;div class=\"form-group {% if form.first_name.errors %} has-error {% endif %}\"&gt;\n            &lt;label class=\"control-label\" for=\"first_name\"&gt;Nombre&lt;/label&gt;\n            {{ form.first_name }}\n            &lt;p class=\"help-block\"&gt;{{ form.first_name.errors.as_text }}&lt;/p&gt;\n          &lt;/div&gt;\n\n          &lt;div class=\"form-group {% if form.last_name.errors %} has-error {% endif %}\"&gt;\n            &lt;label class=\"control-label\" for=\"last_name\"&gt;Apellido&lt;/label&gt;\n            {{ form.last_name }}\n            &lt;p class=\"help-block\"&gt;{{ form.last_name.errors.as_text }}&lt;/p&gt;\n          &lt;/div&gt;\n\n          &lt;div class=\"form-group {% if form.username.errors %} has-error {% endif %}\"&gt;\n            &lt;label class=\"control-label\" for=\"username\"&gt;Nombre de Usuario&lt;/label&gt;\n            {{ form.username }}\n            &lt;p class=\"help-block\"&gt;{{ form.username.errors.as_text }}&lt;/p&gt;\n          &lt;/div&gt;\n\n          &lt;div class=\"form-group {% if form.email.errors %} has-error {% endif %}\"&gt;\n            &lt;label class=\"control-label\" for=\"email\"&gt;Correo Electronico&lt;/label&gt;\n            {{ form.email }}\n            &lt;p class=\"help-block\"&gt;{{ form.email.errors.as_text }}&lt;/p&gt;\n          &lt;/div&gt;\n\n          &lt;div class=\"form-group {% if form.is_staff.errors %} has-error {% endif %}\"&gt;\n            &lt;label class=\"control-label\" for=\"is_staff\"&gt;Administrador&lt;/label&gt;\n            {{ form.is_staff }}\n            &lt;p class=\"help-block\"&gt;{{ form.is_staff.errors.as_text }}&lt;/p&gt;\n          &lt;/div&gt;\n\n        &lt;/div&gt;\n      &lt;/div&gt; &lt;!-- panel-body --&gt;\n\n      &lt;div class=\"panel-footer\"&gt;\n        &lt;input class=\"btn btn-success btn-sm\" type=\"submit\" value=\"Registrar\"&gt;\n      &lt;/div&gt; &lt;!-- panel-footer --&gt;\n    &lt;/div&gt; &lt;!-- panel --&gt;\n  &lt;/form&gt;\n</code></pre></li>\n</ul>\n\n<p>Hope this is usefull for you.</p>\n", "last_activity_date": 1474564519, "answer_id": 39621651, "is_accepted": false, "owner": {"user_id": 4225225, "reputation": 42, "user_type": "registered", "accept_rate": 100, "display_name": "Izuzvo", "link": "http://stackoverflow.com/users/4225225/izuzvo", "profile_image": "https://graph.facebook.com/1121797331/picture?type=large"}, "last_edit_date": 1474564519, "question_id": 36295282}