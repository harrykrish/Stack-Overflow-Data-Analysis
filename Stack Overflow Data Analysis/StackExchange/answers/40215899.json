{"body": "<p>If you <em>only</em> need this in <code>list_display</code> you may do the calculation in the modeladmin as specified in <a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display\" rel=\"nofollow\">the docs</a></p>\n\n<p>The following snippet is taken from the docs and slightly adjusted to match your scenario.</p>\n\n<pre><code>class FooAdmin(admin.ModelAdmin):\n    list_display = ('calculation_plm',)\n\n    def calculation_plm(self, obj):\n        return (obj.T / 1000) * (20  + math.log(obj.tr))\n    calculated_plm.short_description = 'PLM caluculation'\n</code></pre>\n\n<p>If you need this calculation more often it might be more related to the model. You can easily move it over to your model and <code>list_display</code> will also work in that case.</p>\n\n<pre><code>class Foo(models.Model):\n    PLM = models.FloatField(_('LMP'),blank=True, null=False,  default=1)\n\n    def calculation_plm(self, obj):\n        return (obj.T / 1000) * (20  + math.log(obj.tr))\n    calculated_plm.short_description = 'PLM caluculation'\n\nclass FooAdmin(admin.ModelAdmin):\n    list_display = ('calculation_plm',)\n</code></pre>\n\n<p>Note that T and tr are not defined and i've just took them from your comment above. Of course <code>obj</code> needs this fields available to work properly.</p>\n", "tags": ["django", "django-admin"], "creation_date": 1477304210, "score": 0, "last_activity_date": 1477304210, "answer_id": 40215899, "is_accepted": true, "owner": {"user_id": 5992118, "reputation": 839, "user_type": "registered", "display_name": "dahrens", "link": "http://stackoverflow.com/users/5992118/dahrens", "profile_image": "https://www.gravatar.com/avatar/08ae2e7ce567cbfb93d480892bd10fa0?s=128&d=identicon&r=PG"}, "title": "Django : size of floatfields", "question_id": 40213206}