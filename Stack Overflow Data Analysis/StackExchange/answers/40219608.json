{"title": "Accessing &#39;this&#39; inside the callback should reference my array", "tags": ["javascript", "jquery", "arrays", "callback", "this"], "creation_date": 1477315338, "score": 1, "body": "<p>You can use <code>call</code> to execute a function in a given <code>this</code> context:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var callback = function() {\r\n  console.log(this);\r\n  console.log(arguments);\r\n};\r\n\r\n// Using call\r\ncallback.call([1,2,3], \"A\", \"B\", \"C\");\r\n\r\n// Using apply\r\ncallback.apply([1,2,3], [\"A\", \"B\", \"C\"]);\r\n\r\n// Using bind:\r\n//  creates a new function bound to [1,2,3]\r\ncallback.bind([1,2,3])(\"A\", \"B\", \"C\");\r\ncallback.bind([1,2,3], \"A\")(\"B\", \"C\"); // etc.</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>I guess that in your example code, that would mean that instead of doing <code>callback()</code>, you'd use <code>callback.call(originalArray)</code>:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function makeMultiFilter(array) {\r\n    // What we track\r\n    var originalArray = array;\r\n    var currentArray = originalArray;\r\n    return (function arrayFilterer(pred, callback) {\r\n        // If filter not a function return current Array\r\n        if (typeof pred !== \"function\")\r\n            return currentArray;\r\n        // Filter out things\r\n        currentArray = currentArray.filter(pred);\r\n\r\n        // If callback is a function, execute callback\r\n        if (typeof callback === \"function\")\r\n            callback.call(originalArray, currentArray);\r\n            return arrayFilterer;\r\n    });\r\n}\r\n\r\nvar arrayFilterer = makeMultiFilter([1, 2, 3]);\r\n\r\n// call arrayFilterer to filter out all the numbers not equal to 2\r\narrayFilterer(function(elem) {\r\n    return elem != 2; // check if element is not equal to 2\r\n}, function(currentArray) {\r\n    console.log(this); // prints [1,2 3]\r\n    console.log(currentArray); // prints [1,3]\r\n}); // prints [1, 3]`</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", "last_activity_date": 1477316049, "answer_id": 40219608, "is_accepted": true, "owner": {"user_id": 3297291, "reputation": 5828, "user_type": "registered", "display_name": "user3297291", "link": "http://stackoverflow.com/users/3297291/user3297291", "profile_image": "https://www.gravatar.com/avatar/2d0d7237254b7a62c94e8e97cf1e0e29?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477316049, "question_id": 40219167}