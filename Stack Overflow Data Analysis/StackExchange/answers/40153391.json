{"body": "<p><strong>There's no faster solution</strong> in Python, given your question. <code>dict()</code> is same as a <code>hashmap</code> and so your <code>update</code> function has <code>O(|word_length| + |dict_length|)</code> average case complexity where <code>word_length</code> is the number of characters in the given word and <code>dict_length</code> is the number of key-value pairs in your dict.</p>\n\n<p>Note: @khelwood is correct about <code>d = dCopy</code>. Figure out how to solve that problem yourself.</p>\n", "tags": ["python", "sorting", "dictionary", "edx"], "creation_date": 1476963536, "score": 1, "last_activity_date": 1476963536, "answer_id": 40153391, "is_accepted": false, "owner": {"user_id": 6354622, "reputation": 1183, "user_type": "registered", "accept_rate": 76, "display_name": "User_Targaryen", "link": "http://stackoverflow.com/users/6354622/user-targaryen", "profile_image": "https://i.stack.imgur.com/rNoam.jpg?s=128&g=1"}, "title": "How could I make this word matching algo more efficient python", "question_id": 40152082}