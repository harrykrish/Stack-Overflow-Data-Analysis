{"body": "<p>The whole idea is that you enter fork() once, but leave it twice - once in the parent, once in the child. In the parent, fork() returns the child's PID, in the child, fork() returns 0. -1 means error and there is no child.</p>\n\n<p>So when you call fork(), look at the return value. Like this:</p>\n\n<pre><code>  if(fork() &gt; 0) //We're in the parent, and a child was spawned\n      fork(); //Spawn another.\n</code></pre>\n\n<p>This will create three processes. Error handling omitted.</p>\n", "tags": ["c"], "creation_date": 1475629320, "score": 0, "last_activity_date": 1475629320, "answer_id": 39863921, "is_accepted": false, "owner": {"user_id": 219159, "reputation": 39452, "user_type": "registered", "accept_rate": 73, "display_name": "Seva Alekseyev", "link": "http://stackoverflow.com/users/219159/seva-alekseyev", "profile_image": "https://i.stack.imgur.com/cxM6H.jpg?s=128&g=1"}, "title": "Handling multiple fork()s in c", "question_id": 39863849}