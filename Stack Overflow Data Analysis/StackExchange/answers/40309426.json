{"body": "<p>A memory leak in java is caused by keeping a reference into a object that you thought you deleted but you left one or more references that provides a path to the object from a root GC (for instance a static object). That means the JVM has to assume that the object might be accessed in the future. It does not know that programmer doesn't need the object anymore.</p>\n\n<p>It's sort of like forgetting to free memory in C/C++. The difference here is that you forgot to remove a reference to it rather than freeing the object itself.</p>\n\n<p>Read more about it here: <a href=\"http://www.w3resource.com/java-tutorial/garbage-collection-in-java.php\" rel=\"nofollow\">http://www.w3resource.com/java-tutorial/garbage-collection-in-java.php</a></p>\n\n<p>You can see examples of memory leaks here: <a href=\"http://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java\">Creating a memory leak with Java</a></p>\n", "tags": ["java", "memory-leaks"], "creation_date": 1477672427, "score": 1, "last_activity_date": 1477672427, "answer_id": 40309426, "is_accepted": true, "owner": {"user_id": 1810962, "reputation": 310, "user_type": "registered", "accept_rate": 60, "display_name": "joseph", "link": "http://stackoverflow.com/users/1810962/joseph", "profile_image": "https://i.stack.imgur.com/4MfRM.jpg?s=128&g=1"}, "title": "Java memory leaks?", "question_id": 40185042}