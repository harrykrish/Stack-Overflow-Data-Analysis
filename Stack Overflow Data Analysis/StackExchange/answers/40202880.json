{"title": "cursor.fetchall() vs list(cursor) in Python", "tags": ["python", "cursor", "mysql-python"], "creation_date": 1477225556, "score": 0, "body": "<p>A (MySQLdb/PyMySQL-specific) difference worth noting when using a <code>DictCursor</code> is that <code>list(cursor)</code> will always give you a list, while <code>cursor.fetchall()</code> gives you a list <em>unless</em> the result set is empty, in which case it gives you an empty tuple. This was the case in MySQLdb and remains the case in the newer <a href=\"https://github.com/PyMySQL/PyMySQL\" rel=\"nofollow\">PyMySQL</a>, where it <a href=\"https://github.com/PyMySQL/PyMySQL/issues/521\" rel=\"nofollow\">will not be fixed</a> for backwards-compatibility reasons. While this <a href=\"https://www.python.org/dev/peps/pep-0249/#fetchall\" rel=\"nofollow\">isn't a violation of Python Database API Specification</a>, it's still surprising and can easily lead to a type error caused by wrongly assuming that the result is a <em>list</em>, rather than just a <em>sequence</em>.</p>\n\n<p>Given the above, I suggest always favouring <code>list(cursor)</code> over <code>cursor.fetchall()</code>, to avoid ever getting caught out by a mysterious type error in the edge case where your result set is empty.</p>\n", "last_activity_date": 1477226225, "answer_id": 40202880, "is_accepted": false, "owner": {"user_id": 1709587, "reputation": 24447, "user_type": "registered", "accept_rate": 66, "display_name": "Mark Amery", "link": "http://stackoverflow.com/users/1709587/mark-amery", "profile_image": "https://i.stack.imgur.com/frBtD.jpg?s=128&g=1"}, "last_edit_date": 1477226225, "question_id": 17861152}