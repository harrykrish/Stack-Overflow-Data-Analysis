{"title": "start &amp; stop RESTful service from Java Application", "tags": ["java", "tomcat", "servlets", "jersey", "ewsjavaapi"], "creation_date": 1473801216, "score": 0, "body": "<p>I am not aware of any way to run a swing application and a servlet in the same Java process. Even if there was one it would probably be some kind of hack.</p>\n\n<p>If you think about it, you will find that there are two completely separate concepts involved. Your Swing GUI is a desktop application, and desktop applications usually run in the context of the users session because they require a graphical desktop environment. So usually they will be started <strong>after</strong> the user has logged in and closed <strong>before</strong> the user logs out.</p>\n\n<p>On the other hand your \"listener\" application is a web application, it needs a network connection and maybe file system access but otherwise it knows nothing about a graphical desktop environment. Web applications are normally longer running system services that are started when the server is booted and run as long as the server is running.</p>\n\n<p>If you try to combine them into a single application then that also indicates a problem with your design.</p>\n\n<p>I would instead recommend a different approach. Create the three parts for <strong>subscription</strong>, <strong>push-callback-registration</strong> and <strong>listener</strong> inside your web application. You can deploy that application in a Servlet container,  install it as a regular system service and configure it to start it when the system boots up.</p>\n\n<p>Next you need to think about what you do with mails you receive in the servlet. Either you store them somewhere and process them when the Swing app is started, or you also move your processing logic to the web application, preferably by moving that code into its own library that you can then access from both the gui application and the servlet.</p>\n\n<p>Depending on which option you choose, when you start your Swing application either all your mails would already be in the database and you can simply access them, or you can just process those mails that the servlet has stored while your app was not running.</p>\n", "last_activity_date": 1473801583, "answer_id": 39479075, "is_accepted": false, "owner": {"user_id": 474034, "reputation": 3970, "user_type": "registered", "accept_rate": 69, "display_name": "lanoxx", "link": "http://stackoverflow.com/users/474034/lanoxx", "profile_image": "https://i.stack.imgur.com/zKYWU.jpg?s=128&g=1"}, "last_edit_date": 1473801583, "question_id": 39462368}