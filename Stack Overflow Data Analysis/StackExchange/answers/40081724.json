{"title": "How to get refs from another component in React JS", "tags": ["javascript", "reactjs"], "creation_date": 1476693016, "score": 0, "body": "<p>According to <a href=\"https://facebook.github.io/react/docs/more-about-refs.html#the-ref-string-attribute\" rel=\"nofollow\">Refs to Components</a>, string-based <code>ref</code>s -- <em>while not deprecated</em> -- are superseded by the callback-based syntax, for example:</p>\n\n<pre><code>&lt;section ref={sectionElement =&gt; this.sectionElement = sectionElement}&gt;\n    &lt;Info/&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>The string-based <code>ref</code> is likely to be deprecated soon, which also implies that <code>this.refs</code> is affected as well. As such, I would recommend you take these into consideration, and provide instance methods or properties to expose refs instead:</p>\n\n<pre><code>class HomePage extends Component {\n    render() {\n        return (\n            &lt;div className=\"homeMain\"&gt;\n                &lt;section ref={infoSection =&gt; this.infoSection = infoSection}&gt;\n                    &lt;Info/&gt;\n                &lt;/section&gt;\n\n                &lt;section ref={contactSection =&gt; this.contactSection = contactSection}&gt;\n                    &lt;Contact /&gt;\n                &lt;/section&gt;\n            &lt;/div&gt;\n        );\n    }\n}\n</code></pre>\n\n<p>After that, you'll need to obtain a <code>ref</code> to <code>HomePage</code> as well, on which you can then access <code>infoSection</code> and <code>contactSection</code> as properties, which you can then pass as props to <code>Header</code>, for example:</p>\n\n<pre><code>&lt;HomePage ref={homePage =&gt; this.homePage = homePage} ... /&gt;\n&lt;Header sections={[this.homePage.infoSection, this.homePage.contactSection]} ... /&gt;\n</code></pre>\n\n<p>Your exact application structure is unknown to me, but the general principle will work everywhere: expose <code>ref</code>s through instance methods or properties, obtain a <code>ref</code> to the component exposing its <code>ref</code>s, then access the inside <code>ref</code>s through the exposed properties.</p>\n\n<hr>\n\n<h2>Edit</h2>\n\n<p>If you would keep using string-based <code>ref</code>s for now instead, you could define a getter <em>(although <code>refs</code> should be directly accessible as well)</em>:</p>\n\n<pre><code>Object.defineProperty(this, \"infoSection\" {\n    get: () =&gt; this.refs[\"infoSection\"]\n});\n</code></pre>\n", "last_activity_date": 1476698492, "answer_id": 40081724, "is_accepted": false, "owner": {"user_id": 2788872, "reputation": 3682, "user_type": "registered", "accept_rate": 86, "display_name": "John White", "link": "http://stackoverflow.com/users/2788872/john-white", "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1476698492, "question_id": 40080742}