{"title": "why do repe and repne do the same before movsb?", "tags": ["string", "assembly", "repeat"], "creation_date": 1477316523, "score": 2, "body": "<p>In the machine code, there are actually only two different prefix bytes.  </p>\n\n<ul>\n<li><code>0xF3</code> is called REP when used with MOVS/LODS/STOS/INS/OUTS (instructions which don't affect flags)</li>\n<li><code>0xF3</code> is called REPE or REPZ when used with CMPS/SCAS</li>\n<li><code>0xF2</code> is called REPNE or REPNZ when used with CMPS/SCAS, and is not documented for other instructions.</li>\n</ul>\n\n<p>Intel's <a href=\"http://www.felixcloutier.com/x86/REP:REPE:REPZ:REPNE:REPNZ.html\" rel=\"nofollow\">insn reference manual REP entry</a> only documents <code>F3</code> REP for MOVS, not the F2 prefix.  Congratulations, you've found an undocumented encoding for REP MOVSB, at least on whatever CPU you tested this on. :)</p>\n\n<p>See also <a href=\"http://www.posix.nl/linuxassembly/nasmdochtml/nasmdoca.html\" rel=\"nofollow\">this appendix of the NASM manual</a> which includes other undocumented opcodes, but not this <code>F2 A4</code> REPNE MOVSB.  (linked from the <a href=\"/questions/tagged/x86\" class=\"post-tag\" title=\"show questions tagged &#39;x86&#39;\" rel=\"tag\">x86</a> tag wiki).</p>\n\n<hr>\n\n<p>Normally, prefixes which don't affect an instruction are ignored, so I would have expected REPNE MOVSB to run identically to just MOVSB.  e.g. <a href=\"http://www.felixcloutier.com/x86/TZCNT.html\" rel=\"nofollow\">TZCNT</a> is encoded as REP BSF, and on CPUs which don't support BMI1, it simple executes as BSF.  (Doing the same thing except when the source is zero.)</p>\n\n<p>Similarly, REP RET is a common trick to introduce padding <a href=\"http://stackoverflow.com/a/32347393/224132\">to work around a limitation of AMD K8/K10 branch predictors</a>, and runs the same as RET.</p>\n\n<p>But Intel cautions that this behaviour is not guaranteed, because new instructions can use an encoding that used to be a different instruction with an ignored prefix.  e.g. LZCNT (encoded as REP BSR) produces the opposite result to BSR, so old code that included a REP BSR for some reason would stop working on new CPUs.</p>\n", "last_activity_date": 1477327048, "answer_id": 40219999, "is_accepted": true, "owner": {"user_id": 224132, "reputation": 43916, "user_type": "registered", "accept_rate": 70, "display_name": "Peter Cordes", "link": "http://stackoverflow.com/users/224132/peter-cordes", "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1"}, "last_edit_date": 1477327048, "question_id": 40219519}