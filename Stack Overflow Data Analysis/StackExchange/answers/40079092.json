{"title": "Sort an array of strings by a part of the string or index?", "tags": ["java", "arrays", "eclipse", "sorting", "mergesort"], "creation_date": 1476682316, "score": 1, "body": "<p>You can sort an array using <code>Arrays.sort</code> and give it a custom comparator. For example, using Java 8:</p>\n\n<pre><code>Arrays.sort(age, Comparator.comparingInt(a -&gt; Integer.parseInt(a.split(\"#\")[1])));\n</code></pre>\n\n<p>While this code works, I would suggest creating a class to encapsulate the logic. </p>\n\n<pre><code>public class Person {\n    public static Person decode(String line) {\n        Matcher matcher = Pattern.compile(\"(\\\\w+) #(\\\\d+)\").matcher(line);\n        if (!matcher.matches())\n            throw new IllegalArgumentException(\"Illegal format\");\n        return new Person(matcher.group(1), matcher.group(2));\n    }\n\n    public int getAge() {...}\n    public String getName() {...}\n}\n</code></pre>\n\n<p>Then using streams your code can become much more explicit:</p>\n\n<pre><code>Arrays.stream(age)\n    .map(Person::decode)\n    .sorted(Comparator.comparingInt(Person::getAge))\n    .forEach(...);\n</code></pre>\n", "last_activity_date": 1476686492, "answer_id": 40079092, "is_accepted": false, "owner": {"user_id": 3705127, "reputation": 10046, "user_type": "registered", "accept_rate": 53, "display_name": "sprinter", "link": "http://stackoverflow.com/users/3705127/sprinter", "profile_image": "https://www.gravatar.com/avatar/b03aedaddfa4dc1c2b331f318a724ec7?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1476686492, "question_id": 40078934}