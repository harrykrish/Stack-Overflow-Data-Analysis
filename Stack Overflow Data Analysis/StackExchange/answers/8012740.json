{"title": "JNI: converting unsigned int to jint", "tags": ["java", "c++", "jni", "unsigned-integer", "jint"], "creation_date": 1320424792, "score": 6, "body": "<p>Depending on your compiler settings, there may or may not be a warning about mixing signed/unsigned integers. There will be no error. All the caveats from the answers above apply - <code>unsigned int</code> values of 0x80000000 (2,147,483,648) and above will end up as negative integers on the Java side.</p>\n\n<p>If it's imperative that those large numbers are preserved in Java, use a <code>jlong</code> as a return datatype instead, and convert like this:</p>\n\n<pre><code>return (jlong)(unsigned long long)i;\n</code></pre>\n\n<p>The point is to first expand to 64 bits, then to cast away unsigned-ness. Doing it the other way around would produce a 64-bit negative number.</p>\n", "last_activity_date": 1474740548, "answer_id": 8012740, "is_accepted": false, "owner": {"user_id": 219159, "reputation": 39452, "user_type": "registered", "accept_rate": 73, "display_name": "Seva Alekseyev", "link": "http://stackoverflow.com/users/219159/seva-alekseyev", "profile_image": "https://i.stack.imgur.com/cxM6H.jpg?s=128&g=1"}, "last_edit_date": 1474740548, "question_id": 8012450}