{"title": "Firebase @PropertyName doesn&#39;t work", "tags": ["android", "firebase", "firebase-database"], "creation_date": 1470291026, "score": 1, "body": "<p>Finally got a chance to solve this problem. Thanks to <strong>@hatboysam</strong> for the suggestion.</p>\n\n<p>The only problem was, <code>@PropertyName</code> annotation was not properly documented in Firebase.</p>\n\n<p>The first thing that is necessary is the the field must be <strong>public</strong> otherwise the annotation will not work, which is quite obvious/</p>\n\n<p>Now the annotation takes into account both the field name as well as the getter/setter names to serialize. I also had the problem where the fields as well as the getter/setters were getting serialized, <strong>resulting in duplicate ket/value pairs</strong>.</p>\n\n<p>I solved the problem by <strong>using the annotation on the field name which were public and ignoring the getter/setters</strong>. This solved the problem perfectly. Not the data was properly serialized with the property name I wanted and there was no duplicate data problem as well.</p>\n\n<p>Here is a simple example,</p>\n\n<pre><code>    class Item {\n\n        @PropertyName(\"item_no\")\n        int mItemNo;\n        // Simplified for brevity\n\n        @Exclude\n        public int getItemNo(){\n              return mItemNo;\n        }\n\n        @Exclude\n        public void setItemNo(int itemNo){\n              this.mItemNo = itemNo;\n        }\n    }\n</code></pre>\n", "last_activity_date": 1477747461, "answer_id": 38759668, "is_accepted": true, "owner": {"user_id": 2858654, "reputation": 7774, "user_type": "registered", "accept_rate": 41, "display_name": "Aritra Roy", "link": "http://stackoverflow.com/users/2858654/aritra-roy", "profile_image": "https://www.gravatar.com/avatar/74aa11ff36efcdb0b99dce510af7f517?s=128&d=identicon&r=PG"}, "last_edit_date": 1477747461, "question_id": 38681260}