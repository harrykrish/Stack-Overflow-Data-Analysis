{"title": "how do I get the User&#39;s previous photo?", "tags": ["ruby-on-rails"], "creation_date": 1476465620, "score": 1, "body": "<p>On your previous_modal method, instead of searching by id, you could search by created_at... something like:</p>\n\n<pre><code>def previous_modal \n\n  if self.class.approved.where(\"created_at &lt; ?\", self.created_at).last == nil\n    return self\n  else\n    return self.class.approved.where(\"created_at &lt; ?\", self.created_at).last\n  end  \nend \n</code></pre>\n\n<p>And for a cleaner code, I would suggest:</p>\n\n<pre><code>def previous_modal \n  last_photo = self.class.approved.where(\"created_at &lt; ?\", self.created_at).last\n  last_photo ? last_photo : self        \nend \n</code></pre>\n\n<p>It would work as same as above. Hope it helps!</p>\n\n<p>EDIT:</p>\n\n<p>I'm not sure how you would get that  [ 10, 9, 8, 7, 6, 1 ] array, but once you have it, it's easy... you just had to find the photo by the id on the next/previous position. Could think of something like:</p>\n\n<pre><code>def previous_modal \n\n    photo_ids = self.user.photos.map(&amp;id) #Get all photos ids for that user\n    self_index = photos_ids.index(self.id) #Get the index of this particular object id\n    previous_photo = Photo.find_by_id(photos_ids[self_index-1]) #Find the previous one\n    return (previous_photo || self)\nend \n</code></pre>\n\n<p>But I guess, in this case, the photo_ids returned would be ordered, so produced the same result as above. You have to figure out a way to maintain that array with the history of photos order... good luck!</p>\n", "last_activity_date": 1476467135, "answer_id": 40048724, "is_accepted": false, "owner": {"user_id": 5864985, "reputation": 353, "user_type": "registered", "accept_rate": 82, "display_name": "Ronan Lopes", "link": "http://stackoverflow.com/users/5864985/ronan-lopes", "profile_image": "https://graph.facebook.com/965393416873148/picture?type=large"}, "last_edit_date": 1476467135, "question_id": 40047740}