{"title": "Efficiency optimization", "tags": ["python", "performance", "python-2.7"], "creation_date": 1477776628, "score": 0, "body": "<p>This can be optimized in a few ways. First, instead of hosting everything in an array, have a variable <code>maximum</code> which is initialized to <code>xs[0]</code> and each product is checked against. Additionally, instead of doing the multiplication yourself, you can use <a class='doc-link' href=\"http://stackoverflow.com/documentation/python/298/simple-math/1064/multiplication#t=201610292127183766099\">mul</a> from the <code>operator</code> module with reduce. Finally, I would use <code>xrange</code> as in Python 2 it does not create an array making it more efficient than <code>range</code> This would make your code look like this</p>\n\n<pre><code>from itertools import combinations\nfrom operator import mul    \n\ndef answer(xs):\n    maximum = xs[0]\n    one = 1 in xs\n    filter(lambda a: a != 0 and a != 1, xs)\n    if len(xs) == 0:\n        if one:\n            return 1\n         else:\n            return 0\n    for i in xrange(len(xs), 0, -1):\n        for j in combinations(xs, i):\n            prod = reduce(mul, j, 1)\n            if prod &gt; maximum:\n                maximum = prod\n    return str(maximum)\n</code></pre>\n\n<p>I left the return as <code>str(maximum)</code>, but you can return it as <code>maximum</code> which is an integer if you want.</p>\n", "last_activity_date": 1477776968, "answer_id": 40323869, "is_accepted": false, "owner": {"user_id": 5021321, "reputation": 2041, "user_type": "registered", "accept_rate": 75, "display_name": "Eli Sadoff", "link": "http://stackoverflow.com/users/5021321/eli-sadoff", "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG"}, "last_edit_date": 1477776968, "question_id": 40323758}