{"body": "<p><code>raise</code> and <code>return</code> are two inherently different keywords.</p>\n\n<hr>\n\n<p><code>raise</code>, commonly known as <code>throw</code> in other languages, produces an error in the current level of the call-stack. You can catch a raised error by covering the area where the error might be raised in a <code>try</code> and handling that error in an <code>except</code>.</p>\n\n<pre><code>try:\n    if something_bad:\n        raise generate_exception()\nexcept CertainException, e:\n    do_something_to_handle_exception(e)\n</code></pre>\n\n<p><code>return</code> on the other hand, returns a value to where the function was called from, so returning an exception usually is not the functionality you are looking for in a situation like this, since the exception itself is not the thing triggering the <code>except</code> it is instead the <code>raise</code>ing of the exception that triggers it.</p>\n", "tags": ["python", "exception-handling"], "creation_date": 1477715033, "score": 1, "last_activity_date": 1477715033, "answer_id": 40316012, "is_accepted": true, "owner": {"user_id": 5695018, "reputation": 153, "user_type": "registered", "accept_rate": 100, "display_name": "Wintro", "link": "http://stackoverflow.com/users/5695018/wintro", "profile_image": "https://www.gravatar.com/avatar/0fe42a7bb2af0e4c4ba2150915a1039b?s=128&d=identicon&r=PG&f=1"}, "title": "Is there any difference between return and raise an Exception?", "question_id": 40315882}