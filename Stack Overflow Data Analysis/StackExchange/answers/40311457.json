{"title": "Parsing SOAP objects", "tags": ["c#", "xml", "soap"], "creation_date": 1477680614, "score": 1, "body": "<p>The SoapFormatter is intended to support RPC calls in remoting scenarios where both ends of the channel use .NET. It will add some metadata about the assembly and the types to the output. </p>\n\n<p>If you want to create a SOAP message manually, you can better use the XmlSerializer and wrap your class in a typemapper like descibed <a href=\"https://msdn.microsoft.com/en-us/library/d5wt2he6(v=vs.110).aspx\" rel=\"nofollow\">here</a></p>\n\n<p>Edit:\nForget the typemapper, it does not work as the description suggests. One way i know for sure will work is to add the soap envelope using a little manual coding: </p>\n\n<pre><code>XElement snElement;\nXmlSerializer mySerializer = new XmlSerializer(typeof(StartupNotification));\nusing (MemoryStream ms = new MemoryStream())\n{\n     mySerializer.Serialize(ms, sn);\n     ms.Position = 0;\n     snElement = XElement.Load(ms);\n}\n\nXNamespace soapenv = \"http://schemas.xmlsoap.org/soap/envelope/\";\nXElement soap = new XElement(soapenv + \"Envelope\",\nnew XElement(soapenv + \"Body\", snElement));\n// use soap.ToString() to inspect the result\n</code></pre>\n", "last_activity_date": 1477688300, "answer_id": 40311457, "is_accepted": false, "owner": {"user_id": 288891, "reputation": 201, "user_type": "registered", "display_name": "W van Noort", "link": "http://stackoverflow.com/users/288891/w-van-noort", "profile_image": "https://www.gravatar.com/avatar/5d97ff88ef81d97b2bbe1b897f7aeeb6?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477688300, "question_id": 40293941}