{"body": "<p>Thanks to @v7d8dpo4 explanation for Euler's Totient Function.\nI edited my code as of following:</p>\n\n<pre><code>#define MOD z\n\nlong long power (long long k, long long n) {\n    if (n == 1) return k;\n    else {\n        long long p = power (k, n/2);\n        if (n % 2 == 0) return (p * p) % MOD;\n        else return (((p * p) % MOD) * k) % MOD;\n    }\n}\n\nlong long convert (char *n, int mod) {\n    long long number = 0;\n    int ln = strlen (n);\n\n    for (int x = 0; x &lt; ln; x++) {\n        number = number * 10;\n        number = (number + (n[x] - '0')) % mod;\n    }\n\n    return number % mod;\n}\n\nint main () {\n    char s_x[1111], s_y[1111];\n    scanf (\"%s %s\", s_x, s_y);\n\n    long long x, y, r;\n    x = convert (s_x, MOD);\n    y = convert (s_y, totient (MOD)); // totient (x) is Euler's Totient Function of x\n    r = power (x, y);\n\n    printf (\"%lld\\n\", r);\n}\n</code></pre>\n", "tags": ["c", "modulus", "exponentiation"], "creation_date": 1477712306, "score": 0, "last_activity_date": 1477712306, "answer_id": 40315799, "is_accepted": true, "owner": {"user_id": 5447454, "reputation": 27, "user_type": "registered", "accept_rate": 80, "display_name": "Ronald Sumbayak", "link": "http://stackoverflow.com/users/5447454/ronald-sumbayak", "profile_image": "https://www.gravatar.com/avatar/4191aeb9a860f591fb91dd987143e46f?s=128&d=identicon&r=PG&f=1"}, "title": "Big Integer Modular Exponentiation", "question_id": 39865526}