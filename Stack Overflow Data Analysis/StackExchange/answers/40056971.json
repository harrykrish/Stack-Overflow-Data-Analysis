{"title": "Unable to use String variable outside if statement", "tags": ["java", "android", "android-intent"], "creation_date": 1476521273, "score": 1, "body": "<p><strong>There could be two reasons and solutions:</strong></p>\n\n<p><strong>case 1:</strong> If you are using your <code>if</code> inside a Thread then you should update the <code>TextView</code> on <code>UIThread</code> i.e <code>MainThread</code>. </p>\n\n<p>Like this:</p>\n\n<pre><code>if (mySwitch.isChecked()) {\n                    int getvaluehour = numPickerHour.getValue();\n                    int getvalueminute = numPickerMin.getValue();\n\n                    getvaluehour = getvaluehour * 3600000;\n                    getvalueminute = getvalueminute * 60000;\n                    long hoursandMinstomils = getvalueminute + getvaluehour;\n\n                    new CountDownTimer(hoursandMinstomils, 1000) {\n\n                        public void onTick(long millisUntilFinished) {\n                            //here you can have your logic to set text to edittext\n                            long millis = millisUntilFinished;\n                            //Convert milliseconds into hour,minute and seconds\n                             String hms = String.format(\"%02d:%02d:%02d\", TimeUnit.MILLISECONDS.toHours(millis), TimeUnit.MILLISECONDS.toMinutes(millis) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(millis)), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis)));\n                            MainActivity.this.runOnUIThread(new Runnable()\n                                 {\n                                 @Override\n                                 public void run()\n                                    {\n                                    myText.setText(hms);\n                                    }\n                                 }).start();\n\n                        }\n\n                        public void onFinish() {\n                            MainActivity.this.runOnUIThread(new Runnable()\n                                 {\n                                 @Override\n                                 public void run()\n                                    {\n                                    myText.setText(\"TIME'S UP!!\"); //On finish change timer text\n                                    }\n                                 }).start();\n\n                        }\n                    }.start();\n</code></pre>\n\n<p>You should always update any UI element on MainThread only by using the runOnUIThread() method. May be this was the cause of your problem.</p>\n\n<p><strong>case 2:</strong> Solution given by Sudip Podder.</p>\n\n<p><strong>case 3</strong> : Answer to your query :\nIn java you can not just use a variable outside of its scope. All you can do the thing is to put the value to class variable like this :\nJust declare a class variable and put value in it and then use the class variable for the values.</p>\n\n<pre><code>public class MainActivity extends AppCompatActivity {\n....\n....\nString time;\n....\n....\n}\n....\n....\n....\nif (mySwitch.isChecked()) {\n                int getvaluehour = numPickerHour.getValue();\n                int getvalueminute = numPickerMin.getValue();\n\n                getvaluehour = getvaluehour * 3600000;\n                getvalueminute = getvalueminute * 60000;\n                long hoursandMinstomils = getvalueminute + getvaluehour;\n\n                new CountDownTimer(hoursandMinstomils, 1000) {\n\n                    public void onTick(long millisUntilFinished) {\n                        //here you can have your logic to set text to edittext\n                        long millis = millisUntilFinished;\n                        //Convert milliseconds into hour,minute and seconds\n                         String hms = String.format(\"%02d:%02d:%02d\", TimeUnit.MILLISECONDS.toHours(millis), TimeUnit.MILLISECONDS.toMinutes(millis) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(millis)), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis)));\n                        MainActivity.this.time=hms;\n                        MainActivity.this.runOnUIThread(new Runnable()\n                             {\n                             @Override\n                             public void run()\n                                {\n                                myText.setText(MainActivity.this.time);\n                                }\n                             }).start();\n\n                    }\n\n                    public void onFinish() {\n                        MainActivity.this.runOnUIThread(new Runnable()\n                             {\n                             @Override\n                             public void run()\n                                {\n                                myText.setText(\"TIME'S UP!!\"); //On finish change timer text\n                                }\n                             }).start();\n</code></pre>\n\n<p>Now you can use the value of hms variable by the class variable <code>time</code>. And yes don't forget to declare myText as class variable.</p>\n", "last_activity_date": 1476535946, "answer_id": 40056971, "is_accepted": false, "owner": {"user_id": 4755399, "reputation": 224, "user_type": "registered", "accept_rate": 90, "display_name": "Dushyant Suthar", "link": "http://stackoverflow.com/users/4755399/dushyant-suthar", "profile_image": "https://lh6.googleusercontent.com/-msTJIz_air4/AAAAAAAAAAI/AAAAAAAAAHk/rYWTAGBnSRk/photo.jpg?sz=128"}, "last_edit_date": 1476535946, "question_id": 40056167}