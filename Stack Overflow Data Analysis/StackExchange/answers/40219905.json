{"title": "Check current time (without date) is between two times in C", "tags": ["c", "time"], "creation_date": 1477316222, "score": 0, "body": "<p>A shortest comparison solution consists to convert all string-timestamp to time_t value.</p>\n\n<blockquote>\n  <p>Improving the source as Brian McFarland suggests <code>memset()</code>.</p>\n</blockquote>\n\n<pre><code>struct tm tmVar;\ntime_t t_on_time, t_off_time, t_curr_time;\n\n    memset(&amp;tmVar, 0, sizeof(tmVar));    \n    if(sscanf(on_time, \"%d:%d:%d\", &amp;tmVar.tm_hour,  &amp;tmVar.tm_min,  &amp;tmVar.tm_sec)==3) {\n        t_on_time = mktime(&amp;tmVar);\n    }\n    memset(&amp;tmVar, 0, sizeof(tmVar)); \n    if(sscanf(off_time, \"%d:%d:%d\", &amp;tmVar.tm_hour,  &amp;tmVar.tm_min,  &amp;tmVar.tm_sec)==3) {\n        t_off_time = mktime(&amp;tmVar);\n    }\n    memset(&amp;tmVar, 0, sizeof(tmVar)); \n    if(sscanf(CURTIME(), \"%d:%d:%d\", &amp;tmVar.tm_hour,  &amp;tmVar.tm_min,  &amp;tmVar.tm_sec)==3) {\n        t_curr_time = mktime(&amp;tmVar);\n    }\n</code></pre>\n\n<p>And your comparison is:</p>\n\n<pre><code>if (((t_on_time &lt;= t_off_time) &amp;&amp; (t_curr_time &gt;= t_on_time) &amp;&amp; (t_curr_time &lt;= t_off_time)) ||\n ((t_off_time &lt; t_on_time) &amp;&amp; ((t_curr_time &lt;= t_off_time) || (t_curr_time &gt;= t_on_time))) {\n    // To do something\n}\n</code></pre>\n", "last_activity_date": 1477756645, "answer_id": 40219905, "is_accepted": true, "owner": {"user_id": 6945651, "reputation": 374, "user_type": "registered", "display_name": "J. Piquard", "link": "http://stackoverflow.com/users/6945651/j-piquard", "profile_image": "https://www.gravatar.com/avatar/fee73745ee8f1b45b788cf88b1ab20f6?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477756645, "question_id": 40218968}