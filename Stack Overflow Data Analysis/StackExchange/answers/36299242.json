{"title": "setInterval in a React app", "tags": ["javascript", "reactjs", "settimeout", "state"], "creation_date": 1459309260, "score": 8, "body": "<p>I see 4 issues with your code:</p>\n\n<ul>\n<li>In your timer method you are always setting your current count to 10</li>\n<li>You try to update the state in render method</li>\n<li>You do not use <code>setState</code> method to actually change the state</li>\n<li>You are not storing your intervalId in the state</li>\n</ul>\n\n<p>Let's try to fix that:</p>\n\n<pre><code>componentDidMount: function() {\n   var intervalId = setInterval(this.timer, 1000);\n   // store intervalId in the state so it can be accessed later:\n   this.setState({intervalId: intervalId});\n},\n\ncomponentWillUnmount: function() {\n   // use intervalId from the state to clear the interval\n   clearInterval(this.state.intervalId);\n},\n\ntimer: function() {\n   // setState method is used to update the state\n   this.setState({ currentCount: this.state.currentCount -1 });\n},\n\nrender: function() {\n    // You do not need to decrease the value here\n    return (\n      &lt;section&gt;\n       {this.state.currentCount}\n      &lt;/section&gt;\n    );\n}\n</code></pre>\n\n<p>This would result in a timer that decreases from 10 to -N. If you want timer that decreases to 0, you can use slightly modified version:</p>\n\n<pre><code>timer: function() {\n   var newCount = this.state.currentCount - 1;\n   if(newCount &gt;= 0) { \n       this.setState({ currentCount: newCount });\n   } else {\n       clearInterval(this.state.intervalId);\n   }\n},\n</code></pre>\n", "last_activity_date": 1477673933, "answer_id": 36299242, "is_accepted": true, "owner": {"user_id": 3697011, "reputation": 17248, "user_type": "registered", "display_name": "dotnetom", "link": "http://stackoverflow.com/users/3697011/dotnetom", "profile_image": "https://www.gravatar.com/avatar/98fc0c1fce045a8b4946943c079ce538?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477673933, "question_id": 36299174}