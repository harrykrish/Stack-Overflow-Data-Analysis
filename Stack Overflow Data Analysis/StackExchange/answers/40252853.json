{"title": "Configure durandal for multiple SPA", "tags": ["javascript", "single-page-application", "durandal"], "creation_date": 1477449727, "score": 0, "body": "<p>Since I had to spend a whole day getting this to work, I will answer my own question.</p>\n\n<p>First, prepare a <code>loader</code> site. This would be the main site that is actually loaded that is responsible from loading all the other sites.</p>\n\n<blockquote>\n  <p><strong>App/main.js</strong> - Contains the requirejs setup</p>\n  \n  <blockquote>\n    <p>In this we would run          <code>app.setRoot('shell', 'entrance');</code></p>\n  </blockquote>\n  \n  <p><strong>App/shell.js</strong> - contains the router config</p>\n</blockquote>\n\n<pre><code>return router.map([\n    { route: 'Admin/*all', moduleId: \"Admin/index\", nav: true },\n    { route: 'Signup/*all', moduleId: \"Signup/index\", nav: true },\n    { route: '*all', moduleId: \"MainApp/index\", nav: true }\n])\n    .buildNavigationModel()\n    .activate();\n</code></pre>\n\n<blockquote>\n  <p><strong>App/shell.html</strong> - contains the router usage and common header/footer/loading shield</p>\n</blockquote>\n\n<pre><code>&lt;div style=\"height: 100%\" data-bind=\"css: { loading: isLoading }\"&gt;\n &lt;!-- ko compose: 'loading.html'--&gt;&lt;!-- /ko --&gt;\n &lt;div class=\"header\"&gt;...&lt;/div&gt;\n &lt;!-- ko router: {  transition:'entrance' } --&gt;&lt;!-- /ko --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<blockquote>\n  <p><strong>App/*.js</strong> - Files shared among all the SPAs</p>\n  \n  <p><strong>App/MainApp/index.js</strong> - Contains the sub router for that SPA</p>\n</blockquote>\n\n<pre><code>define([\"require\", \"exports\", \"plugins/router\"], function (require, exports, router) {\n    \"use strict\";\n    var childRouter = router.createChildRouter()\n        .makeRelative({\n        moduleId: 'MainApp',\n        fromParent: false //&lt;!----- FALSE for MainApp, TRUE for other SPA\n    })\n        .map([\n        { route: '', moduleId: \"viewmodels/test\", nav: true },\n    ])\n        .mapUnknownRoutes(\"viewmodels/err\", 'err')\n        .buildNavigationModel();\n    return (function () {\n        function class_1() {\n            this.router = childRouter;\n        }\n        return class_1;\n    }());\n});\n</code></pre>\n\n<blockquote>\n  <p><strong>App/MainApp/index.html</strong> - Uses the router, and performs any rendering of submenues or whatever. Here the bare minimum:</p>\n</blockquote>\n\n<pre><code>&lt;div data-bind=\"router: { }\"&gt;&lt;/div&gt;\n</code></pre>\n\n<blockquote>\n  <p><strong>App/Admin/index.js</strong></p>\n  \n  <blockquote>\n    <p>Is identical to the <code>MainApp.js</code>, except for the <code>fromParent</code> set to true and <code>moduleId</code> set to the SPAs name.</p>\n  </blockquote>\n</blockquote>\n\n<p>This should work fine in debug mode now.</p>\n\n<p>The gulp setup becomes:</p>\n\n<blockquote>\n  <p><strong>gulpfile.js</strong></p>\n</blockquote>\n\n<pre><code>var durandal = require('gulp-durandal');\n\ngulp.task('build', [], function () {\n return gulp.start(['build-admin', 'build-signup', 'build-mainapp', 'build-base']);\n});\n\nfunction buildModule(name) {\n var path = name + '/';\n return durandal({\n  baseDir: 'App',\n  output: name + '.js',\n  minify: true,\n  almond: false,\n  verbose: false,\n  moduleFilter: function (moduleName) {\n   return moduleName.indexOf(path) &gt; -1;\n  },\n\n  rjsConfigAdapter: function (config) {\n   config.stubModules = config.exclude;\n   config.exclude = [\"main\"];\n   config.stubModules.push('text');\n   return config;\n  }\n })\n  .pipe(gulp.dest('dist'));\n}\n\ngulp.task('build-admin', [], function () {\n return buildModule('Admin');\n});\ngulp.task('build-signup', [], function () {\n return buildModule('Signup');\n});\ngulp.task('build-mainapp', [], function () {\n return buildModule('MainApp');\n});\ngulp.task('build-base', [], function () {\n return durandal({\n  baseDir: 'App',\n  output: 'main.js',\n  minify: true,\n  verbose: false,\n  moduleFilter: function (moduleName) {\n   return moduleName.indexOf('Admin/') === -1 &amp;&amp; moduleName.indexOf('MainApp/') === -1 &amp;&amp; moduleName.indexOf('Signup/') === -1;\n  },\n  rjsConfigAdapter: function (config) {\n   config.stubModules = config.exclude;\n   config.exclude = [];\n   return config;\n  }\n })\n  .pipe(gulp.dest('dist'));\n});\n</code></pre>\n\n<p>This will now result in</p>\n\n<pre><code>dist/main.js\ndist/Admin.js\ndist/MainApp.js\ndist/Signup.js\n</code></pre>\n\n<p>In your <code>default.html</code> (or whatever you call it), you need to tell it how to load these files:</p>\n\n<pre><code>&lt;script&gt;window.require = {\n    bundles: { 'MainApp': ['MainApp/index'],'Signup': ['Signup/index'], 'Admin': ['Admin/index'] }\n};&lt;/script&gt;\n&lt;script type=\"text/javascript\" data-main=\"main\" src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.2.0/require.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The reason for this being in the html files rather than the <code>main.js</code>, is that the bundles are only used for the compiled version.</p>\n", "last_activity_date": 1477455086, "answer_id": 40252853, "is_accepted": false, "owner": {"user_id": 264022, "reputation": 2513, "user_type": "registered", "accept_rate": 71, "display_name": "Cine", "link": "http://stackoverflow.com/users/264022/cine", "profile_image": "https://www.gravatar.com/avatar/05d66a001de1c03c6d081dc25c2271f6?s=128&d=identicon&r=PG"}, "last_edit_date": 1477455086, "question_id": 40252852}