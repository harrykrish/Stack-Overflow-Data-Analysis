{"body": "<p>This shows the perfect reason as to why <code>scanf</code> is so dangerous. You've overwritten other memory that was not intended for this. A much safer way to read constant length strings is to do something like this</p>\n\n<pre><code>char a[2];\nfgets(a, sizeof(a), stdin);\nprintf(\"%s\\n\", a);\n</code></pre>\n\n<p>If you did this and you typed <code>helloworld</code> you would only get <code>h</code> to stdout (because strings have <code>sizeof(a) - 1</code> characters due to the null terminator. This means the array <code>a</code> is actually <code>{'h', '\\0'}</code>). <code>fgets</code> is a lot safer for reading constantly sized strings than <code>scanf</code>.</p>\n", "tags": ["c"], "creation_date": 1477513896, "score": 4, "last_activity_date": 1477513896, "answer_id": 40271610, "is_accepted": false, "owner": {"user_id": 5021321, "reputation": 2041, "user_type": "registered", "accept_rate": 75, "display_name": "Eli Sadoff", "link": "http://stackoverflow.com/users/5021321/eli-sadoff", "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG"}, "title": "Declaring variable length strings in c - apparently dynamic?", "question_id": 40271508}