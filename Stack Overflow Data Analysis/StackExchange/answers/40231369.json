{"title": "LINQ for getting all entries of a IEnumerable&lt;string&gt; which start with the same characters", "tags": ["c#", "linq"], "creation_date": 1477369559, "score": 3, "body": "<p>You just need to use <code>.GroupBy</code></p>\n\n<pre><code>list.GroupBy(x=&gt;x.Substring(0, n)).OrderByDescending(x=&gt;x.Count()).First()\n</code></pre>\n\n<p>Where <code>n</code> is the number of char you want to compare.</p>\n\n<p>Can also add a <code>Where</code> to filter any requirements you may have:</p>\n\n<pre><code>list.GroupBy(x=&gt;x.Substring(n))\n   .Where(x=&gt;x.Count() &gt; 1)\n   .OrderByDescending(x=&gt;x.Count())\n   .First()\n</code></pre>\n\n<p>Complete example:</p>\n\n<pre><code>     var lst = new string[]\n     {\n        \"Hans\",\n        \"Hannes\",\n        \"Gustav\",\n        \"Klaus\",\n        \"Herbert\",\n        \"Hanne\"\n     };\n     var source = lst.GroupBy(x =&gt; x.Substring(0, 2)).OrderByDescending(x =&gt; x.Count()).First()\n     Console.WriteLine(source.Key);\n     Console.WriteLine(string.Join(\",\", source));\n</code></pre>\n", "last_activity_date": 1477370657, "answer_id": 40231369, "is_accepted": true, "owner": {"user_id": 264022, "reputation": 2513, "user_type": "registered", "accept_rate": 71, "display_name": "Cine", "link": "http://stackoverflow.com/users/264022/cine", "profile_image": "https://www.gravatar.com/avatar/05d66a001de1c03c6d081dc25c2271f6?s=128&d=identicon&r=PG"}, "last_edit_date": 1477370657, "question_id": 40231250}