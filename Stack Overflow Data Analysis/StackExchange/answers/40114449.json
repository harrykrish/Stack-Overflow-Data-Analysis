{"title": "Difference of elements of 2 sorted arrays within given interval", "tags": ["arrays", "algorithm"], "creation_date": 1476811549, "score": 2, "body": "<p>Here is a solution.</p>\n\n<p>Have a pointer at the beginning of each array say <code>i</code> for array A and <code>j</code> for array B.</p>\n\n<p>Calculate the difference between B[j] and A[i]. </p>\n\n<p>If it is less than <code>L</code>, increment the pointer in array B[], i.e increment <code>j</code> by 1</p>\n\n<p>If it is more than <code>M</code>, increment <code>i</code>, i.e pointer of A.</p>\n\n<p>If the difference is in between, then do the following:</p>\n\n<ul>\n<li><p>search for the position of an element whose value is <code>B[j]-A[i]-L</code> or the nearest\nelement whose value is lesser than <code>(B[j]-A[i])-L</code> in array A. This\ntakes <code>O(logN)</code> time. Say the position is <code>p</code>. Increment the count of\n(x,y) pairs by <code>p-i+1</code></p></li>\n<li><p>Increment only pointer <code>j</code></p></li>\n</ul>\n\n<p>My solution only counts the number of possible (x,y) pairs in <code>O(NlogN)</code> time</p>\n\n<p>For <code>A=[1,2,3]</code> and <code>B=[10,12,15]</code> and <code>L=12</code> and <code>M=14</code>, answer is <code>3</code>.</p>\n\n<p>Hope this helps. I leave it up to you, to implement the solution</p>\n\n<p><strong>Edit:</strong> Enumerating all the possible (x,y) pairs would take <code>O(N^2)</code> worst case time. We will be able to return the <em>count</em> of such pairs (x,y) in <code>O(NlogN)</code> time. Sorry for not clarifying it earlier.</p>\n\n<p><strong>Edit2:</strong> I am attaching a sample implementation of my proposed method below:</p>\n\n<pre><code>def binsearch(a, x):\n\n    low = 0\n    high = len(a)-1\n    while(low&lt;=high):\n        mid = (low+high)/2\n        if a[mid] == x:\n            return mid\n        elif a[mid]&lt;x:\n            k = mid\n            low = low + mid\n        else:\n            high = high - mid\n\n    return k\n\na = [1, 2, 3]\nb = [10, 12, 15, 16]\ni = 0\nj = 0\n\nlenA = len(a)\nlenB = len(b)\n\nL = 12\nM = 14\ncount = 0 \nresult = []\nwhile i&lt;lenA and j&lt;lenB:\n    if b[j] - a[i] &lt; L:\n        j = j + 1\n    elif b[j] - a[i] &gt; M:\n        i = i + 1\n    else:\n        p = binsearch(a,b[j]-L)\n        count = count + p - i + 1\n        j = j + 1\n\nprint \"number of (x,y) pairs: \", count\n</code></pre>\n", "last_activity_date": 1476815318, "answer_id": 40114449, "is_accepted": false, "owner": {"user_id": 6354622, "reputation": 1183, "user_type": "registered", "accept_rate": 76, "display_name": "User_Targaryen", "link": "http://stackoverflow.com/users/6354622/user-targaryen", "profile_image": "https://i.stack.imgur.com/rNoam.jpg?s=128&g=1"}, "last_edit_date": 1476815318, "question_id": 40114002}