{"title": "get average of times that take job finish in for loop shell script", "tags": ["linux", "bash", "shell"], "creation_date": 1477437487, "score": 1, "body": "<pre><code>#!/bin/bash\necho \"How many runs would you like to perform?\"\nread limit\ntotal_time=0\ncounter=1\nwhile [ ${counter} -le ${limit} ]\ndo\n        date\n        run_time=`(time -p wget -qO- http://exmple.com/) 2&gt;&amp;1 &gt; /dev/null | grep real | awk '{print $2}'`\n        echo \"Run ${counter} completed in ${run_time} seconds\"\n        total_time=$(bc&lt;&lt;&lt;\"${total_time}+${run_time}\")\n        if [ ${counter} -ne ${limit} ]\n        then\n                sleep 3\n                let counter=counter+1\n        fi\ndone\navg=$(printf \"%.3f\" \"$(bc -l &lt;&lt;&lt;\"${total_time}/${limit}\")\")\necho \"${counter} requests were sent taking ${total_time} seconds\"\necho \"Average response time was : ${avg} seconds\"        \n</code></pre>\n\n<p>Above is a modified script to perform the operations you requested, with a couple modifications</p>\n\n<ul>\n<li>Added a question then input to ask how many runs to make each time, instead of a static number</li>\n<li>Print out total time for runs and then average per run in 3 decimal places</li>\n<li>Skip sleeping if it's the last run</li>\n</ul>\n\n<p>You'll notice we use <code>bc</code> instead of <code>let</code> for a couple math lines.  The <code>bc</code> command allows the use of decimal places.</p>\n\n<p><a href=\"https://www.gnu.org/software/bc/manual/html_mono/bc.html\" rel=\"nofollow\">https://www.gnu.org/software/bc/manual/html_mono/bc.html</a></p>\n\n<p>To get the value in seconds I had to use <code>awk</code> to separate the value from the title 'real' in the line.  Then you can do the math on the number value.</p>\n\n<p>One other thing I noticed in your initial script.  You used both ways of displaying a variable:</p>\n\n<p><code>$COUNTER</code> and <code>${COUNTER}</code></p>\n\n<p>While both are legitimate, I got into the habit of always encapsulating my variables, it makes things easier when you want to add to the end of it.</p>\n\n<p>For example let's say I have a number defined (<code>NUM=7</code>), but want to display it times 10.  If I don't encapsulate <code>echo $NUM0</code> then I get an error because the variable <code>$NUM0</code> wasn't defined.  But if I encapsulate <code>echo ${NUM}0</code> will display an output of <code>70</code>.</p>\n\n<p>All of this results in a final output as below</p>\n\n<pre><code>How many runs would you like to perform?\n5\nTue Oct 25 16:02:58 MST 2016\nRun 1 completed in 0.09 seconds\nTue Oct 25 16:03:01 MST 2016\nRun 2 completed in 0.08 seconds\nTue Oct 25 16:03:05 MST 2016\nRun 3 completed in 0.07 seconds\nTue Oct 25 16:03:08 MST 2016\nRun 4 completed in 0.09 seconds\nTue Oct 25 16:03:11 MST 2016\nRun 5 completed in 0.08 seconds\n5 requests sent taking .41 seconds\nAverage response time was : 0.08 seconds\n</code></pre>\n\n<p>Please let me know if you have any other questions about the script.</p>\n", "last_activity_date": 1477438061, "answer_id": 40251245, "is_accepted": false, "owner": {"user_id": 5744712, "reputation": 29, "user_type": "registered", "display_name": "Stephan", "link": "http://stackoverflow.com/users/5744712/stephan", "profile_image": "https://www.gravatar.com/avatar/35befc1daf400bcca284e6c06611f268?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477438061, "question_id": 40248119}