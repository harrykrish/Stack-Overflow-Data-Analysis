{"title": "javascript sidebar stay open on page change", "tags": ["javascript", "html", "css"], "creation_date": 1476901953, "score": 1, "body": "<p>So if I understand correctly, you want to keep the bar open when the page change.</p>\n\n<p>When the page reloads into an other one, the browser gets a new html from the server (even if it is the same), and the hole page resets, so the side bar state resets.</p>\n\n<p>You can save the state of the side bar somewhere so that you can retrieve it once the page loads again.\nJavascript has access to 2 storages, the Cookies and the LocalStorage.</p>\n\n<p>Cookies are shared with the server (the browser sends all the cookies to the server with each request)\nwhile the localStorage can be accested only by the javascript.</p>\n\n<p>The server usually don't care if the sidebar is opened or closed, so the \"right\" storage to use is the localStorage.\n(LocalStorage in w3schools <a href=\"http://www.w3schools.com/html/html5_webstorage.asp\" rel=\"nofollow\">http://www.w3schools.com/html/html5_webstorage.asp</a>)</p>\n\n<p>To your problem now, </p>\n\n<p>You need to save the sidebar state, so you update the state when you close or open the sidebar :</p>\n\n<pre><code>function openNav() {\n    ...\n    // If localStorage is supported by the browser\n    if (typeof(Storage) !== \"undefined\") {\n        // Save the state of the sidebar as \"open\"\n        localStorage.setItem(\"sidebar\", \"opened\");\n    }\n    ...\n}\n\nfunction closeNav() {\n    ...\n    // If localStorage is supported by the browser\n    if (typeof(Storage) !== \"undefined\") {\n        // Save the state of the sidebar as \"open\"\n        localStorage.setItem(\"sidebar\", \"closed\");\n    }\n    ...\n}\n</code></pre>\n\n<p>Now that we have saved the state, we need to check it every time the browser loads the page.\nWe need to do it fast, so we don't want to wait for any event like onload event.\nWe only need the sidebar element to be loaded on the page, not all the page, so we can enter our code right under the sidebar element.</p>\n\n<pre><code>&lt;!-- The sidebar element --&gt;\n&lt;div id=\"mySidenav\" class=\"sidenav\"&gt;...&lt;/div&gt;\n&lt;!-- Right after the browser renders the sidebar --&gt;\n&lt;script type=\"text/javascript\"&gt;\n    // If localStorage is supported by the browser\n    if (typeof(Storage) !== \"undefined\") {\n        // If we need to open the bar\n        if(localStorage.getItem(\"sidebar\") == \"opened\"){\n            // Open the bar\n            document.getElementById(\"mySidenav\").style.width = \"250px\";\n            document.getElementById(\"main\").style.marginLeft = \"250px\";\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>This has 2 problems,</p>\n\n<ol>\n<li>LocalStorage has to be supported. (Google Chrome 4.0+, Internet Explorer 8.0+, Firefox 3.5+, Safari 4.0+, Opera 11.5+)</li>\n<li>It replays the animation due to the <code>transition: .5s;</code> css rule.</li>\n</ol>\n\n<p>The 2nd problem can be fixed by adding the <code>transition: .5s;</code> on a class and temporary removing it with javascript untill you open the sidebar.</p>\n\n<pre><code>&lt;!-- The sidebar element --&gt;\n&lt;div id=\"mySidenav\" class=\"sidenav\"&gt;...&lt;/div&gt;\n&lt;!-- Right after the browser renders the sidebar --&gt;\n&lt;script type=\"text/javascript\"&gt;\n    // If localStorage is supported by the browser\n    if (typeof(Storage) !== \"undefined\") {\n        // If we need to open the bar\n        if(localStorage.getItem(\"sidebar\") == \"opened\"){\n            // Remove class with transition from the 'sidebar' and the 'main'\n            ...\n            // Open the bar\n            document.getElementById(\"mySidenav\").style.width = \"250px\";\n            document.getElementById(\"main\").style.marginLeft = \"250px\";\n            // Add the transition class again\n            ...\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<hr>\n\n<h2>Using Cookies</h2>\n\n<p>Javascript don't access the cookies in the same way like the access to the local storage.</p>\n\n<p>You can imagine cookies like a big string that can be accessed from the variable\non <code>document.cookie</code> (all document cookies are here)</p>\n\n<p>You can see this variable in the console</p>\n\n<pre><code>&gt; document.cookie\n\"a_cookie_name=cookie_value; an_other_cookie_name=and_his_value; ...\"\n</code></pre>\n\n<p>To save a cookie, all you have to do is</p>\n\n<pre><code>// Add/Update a cookie by name\ndocument.cookie = name + \"=\" + value + \";\"\n</code></pre>\n\n<p>This doesn't clear the old cookies, it only adds a new cookie or if it exist, it updates it.</p>\n\n<p>But it is a little difficult to get their value... you have to get the string in a variable, split the string in \"; \" so that you have an array of string where each item of the array is a cookie, and search for your cookie in the array... too big trouble.</p>\n\n<p>But we don't have to reinvent the wheel... so we can use <a href=\"http://www.w3schools.com/js/js_cookies.asp\" rel=\"nofollow\">w3schools' code</a></p>\n\n<pre><code>function setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = \"expires=\"+d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i = 0; i &lt; ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n</code></pre>\n\n<p>Now insted of using localStorage we use the functions above</p>\n\n<p><code>localStorage.getItem(\"sidebar\")</code> equivalent is <code>getCookie(\"sidebar\")</code></p>\n\n<p><code>localStorage.setItem(\"sidebar\",\"&lt;value&gt;\")</code> equivalent is <code>setCookie(\"sidebar\", \"&lt;value&gt;\", 30)</code></p>\n\n<p>(note that because the cookies expire, we set it to expire after <code>30</code> days, so to delete a cookie, you set the expiration day to a time before now)</p>\n\n<p>It is good to check more about cookies on <a href=\"http://www.w3schools.com/js/js_cookies.asp\" rel=\"nofollow\">w3schools</a> and the <a href=\"http://www.w3schools.com/html/html5_webstorage.asp\" rel=\"nofollow\">localStorage</a>.</p>\n", "last_activity_date": 1477772707, "answer_id": 40139065, "is_accepted": true, "owner": {"user_id": 3709257, "reputation": 1665, "user_type": "registered", "display_name": "Thanasis Grammatopoulos", "link": "http://stackoverflow.com/users/3709257/thanasis-grammatopoulos", "profile_image": "https://i.stack.imgur.com/xNdKk.png?s=128&g=1"}, "last_edit_date": 1477772707, "question_id": 39979124}