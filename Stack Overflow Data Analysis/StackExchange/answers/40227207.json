{"body": "<p>I assume you have a <code>.csproj</code> for the Xamarin.Android project and an <code>.xproj</code> for your .NET Core class library, which is targeting .NET Standard.</p>\n\n<p>I <em>believe</em> the issue might be because of the different project systems we currently have and where each of them expects to find built assemblies for project references.</p>\n\n<p>A workaround is to manually edit the <code>.csproj</code> to include the reference with the correct hint path. For example:</p>\n\n<pre><code>&lt;Reference Include=\"SomeOtherClassLibrary\"&gt;\n    &lt;HintPath&gt;..\\SomeOtherClassLibrary\\bin\\$(Configuration)\\netstandard1.6\\SomeOtherClassLibrary.dll&lt;/HintPath&gt;\n&lt;/Reference&gt;\n</code></pre>\n\n<p>You may also need to manually add a build dependency from the Xamarin.Android to the class library project to ensure the projects are built in the correct order (right click the Xamarin.Android project in Solution Explorer <code>Build Dependencies &gt; Project Dependencies...</code>).</p>\n\n<p>In summary, it's not that .NET Standard targeted libraries don't work with Xamarin, or that Xamarin only supports PCLs. It's a quirk with project references and the current state of the tooling, which I am sure will improve in time.</p>\n", "tags": ["xamarin.android", ".net-core", "portable-class-library"], "creation_date": 1477341818, "score": 2, "last_activity_date": 1477341818, "answer_id": 40227207, "is_accepted": true, "owner": {"user_id": 6015101, "reputation": 152, "user_type": "registered", "accept_rate": 50, "display_name": "Steve", "link": "http://stackoverflow.com/users/6015101/steve", "profile_image": "https://www.gravatar.com/avatar/7ec6dc4a1157de963d5e047782ebab04?s=128&d=identicon&r=PG"}, "title": "Class Library (.NET Core) vs PCL in Xamarin", "question_id": 40224290}