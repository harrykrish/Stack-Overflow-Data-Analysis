{"title": "Laravel secure Amazon s3 bucket files", "tags": ["php", "laravel", "amazon-s3", "laravel-4", "laravel-5.2"], "creation_date": 1477734857, "score": 1, "body": "<p>Solution to your question which I'm also using but without laravel. </p>\n\n<p><strong>1. For uploading any file directly to Amazon AWS S3 Bucket in specific folder you can do it like this.</strong></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;form action=\"upload.php\" enctype=\"multipart/form-data\"&gt;\n    &lt;input type=\"file\" name=\"file\" id=\"file\" /&gt;\n    &lt;button type=\"submit\"&gt;Upload file&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>PHP - upload.php</strong></p>\n\n<p><strong>Include aws php sdk</strong></p>\n\n<pre><code>require \"vendor/autoload.php\";\n</code></pre>\n\n<p><strong>Initialize S3 Client</strong></p>\n\n<pre><code>$credentials = new Aws\\Credentials\\Credentials(\n    '&lt;AWS ACCESS KEY&gt;', \n    '&lt;AWS ACCESS SECRET&gt;'\n);\n\n$s3Client = Aws\\S3\\S3Client::factory(\n    [\n        'credentials' =&gt; credentials\n        'region' =&gt; 'us-east-1',\n        'version' =&gt; 'latest'\n    ]\n);\n</code></pre>\n\n<p><strong>Create file upload entity</strong></p>\n\n<pre><code>$uploadEntity = array(\n    'Bucket' =&gt; &lt;S3 Bucket Name&gt;,\n    'Key'    =&gt; '&lt;Upload_Folder_If_Any&gt;/&lt;FileName&gt;',\n    'Body'   =&gt; fopen($_FILES['file']['tmp_name'], 'r+'),\n    //'ContentDisposition' =&gt; 'attachment; filename=\"&lt;FileName&gt;\"' &lt;-- If need to allow downloading\n);\n</code></pre>\n\n<p><strong>Upload to s3 Bucket</strong></p>\n\n<pre><code>try {\n    // $result will be Aws\\Result object\n    $result = $s3Client-&gt;putObject($uploadEntity);  \n} catch (Aws\\S3\\Exception\\S3Exception $exception) {\n    // S3 Exception\n}\n</code></pre>\n\n<p><strong>2. Now for serve the uploaded files to authenticated users only</strong></p>\n\n<p>Firstly, you will need to create private bucket policy for the s3 Bucket. </p>\n\n<p><strong>Bucket Policy</strong> - To generate the bucket policy you can use <a href=\"https://awspolicygen.s3.amazonaws.com/policygen.html\" rel=\"nofollow\">Policy Generator</a>. Using this you can generate policy like this. Copied from <a href=\"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/\" rel=\"nofollow\">Improve.dk website</a></p>\n\n<pre><code>{\n  \"Id\": \"Policy1319566876317\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Stmt1319566860498\",\n      \"Action\": [\n        \"s3:GetObject\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:s3:::&lt;BucketName&gt;/*\",\n      \"Principal\": {\n        \"CanonicalUser\": [\n          \"&lt;CannoicalUserId_of_OAI&gt;\"\n        ]\n      }\n    }\n  ]\n}\n</code></pre>\n\n<p>Secondly, you will need to setup the private web distribution of cloudfront the s3 Bucket. Only doing that you will be able to serve your contents to authenticated users only through <strong>aws signed url or signed cookie</strong></p>\n\n<p>Thirdly, to generate the signed url, you will need the <strong>pem</strong> file which you will get from aws console only.</p>\n\n<p><strong>Generate signed url</strong></p>\n\n<pre><code>$cdnName = '&lt;AWS CLOUDFRONT WEB DISTRIBUTION CDN&gt;';\n$assetName = '&lt;UPLOAD_FOLDER_IF_ANY&gt;/&lt;FILENAME&gt;';\n$expiry = time() + 300;     // 5 mins expiry time, ie. the signed url will be valid only for 5 mins\n\n$cloudfront = CloudFrontClient::factory(array(\n    'credentials' =&gt; $credentials,\n    'region' =&gt; 'us-east-1',\n    'version' =&gt; 'latest'\n));\n\n// Use this for creating signed url\n$signedUrl = $cloudFront-&gt;getSignedUrl([\n    'url'         =&gt; $cdnName . '/' . $assetName,\n    'expires'     =&gt; $expiry,\n    'private_key' =&gt; '/path/to/your/cloudfront-private-key.pem',\n    'key_pair_id' =&gt; '&lt;cloudfront key pair id&gt;'\n]);\n\n// Use this for signed cookie    \n$signedCookie = $cloudFront-&gt;getSignedCookie([\n    'url'         =&gt; $cdnName . '/' . $assetName,\n    'expires'     =&gt; $expiry,\n    'private_key' =&gt; '/path/to/your/cloudfront-private-key.pem',\n    'key_pair_id' =&gt; '&lt;cloudfront key pair id&gt;'\n]);\n</code></pre>\n", "last_activity_date": 1477751467, "answer_id": 40317902, "is_accepted": false, "owner": {"user_id": 2324206, "reputation": 462, "user_type": "registered", "accept_rate": 75, "display_name": "Haridarshan", "link": "http://stackoverflow.com/users/2324206/haridarshan", "profile_image": "https://i.stack.imgur.com/8xmzx.jpg?s=128&g=1"}, "last_edit_date": 1477751467, "question_id": 40168221}