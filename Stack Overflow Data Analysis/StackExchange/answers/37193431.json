{"title": "How to Compare two objects in unit test?", "tags": ["c#", "unit-testing"], "creation_date": 1463073183, "score": 4, "body": "<p>When the comparison of public members is enough <em>(in my experience, it usually is)</em>, you can simply jam your objects into JSON and compare the resulting strings:</p>\n\n<pre><code>var js = new JavaScriptSerializer();\nAssert.AreEqual(js.Serialize(st1), js.Serialize(st2));\n</code></pre>\n\n<p><a href=\"https://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer\" rel=\"nofollow\">JavaScriptSerializer Class documentation</a></p>\n\n<p><strong>Pros</strong></p>\n\n<ul>\n<li>Requires minimal code, zero effort, and no preliminary setup</li>\n<li>Handles complex structures with nested objects</li>\n<li>Does not pollute your types with unit test-specific code, like <code>Equals</code></li>\n</ul>\n\n<p><strong>Cons</strong></p>\n\n<ul>\n<li>Only serializable, public members are considered</li>\n</ul>\n", "last_activity_date": 1477659643, "answer_id": 37193431, "is_accepted": false, "owner": {"user_id": 2788872, "reputation": 3682, "user_type": "registered", "accept_rate": 86, "display_name": "John White", "link": "http://stackoverflow.com/users/2788872/john-white", "profile_image": "https://www.gravatar.com/avatar/a2616878b8bfb95d8fbb8a63ad18d729?s=128&d=identicon&r=PG&f=1"}, "last_edit_date": 1477659643, "question_id": 2046121}