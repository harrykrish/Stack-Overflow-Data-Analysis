{"body": "<blockquote>\n  <p>However I've gotten to a point where the next phase in functionality\n  is just so dependent on the legacy code that it seems like I will\n  basically have to run the main from the project( or at least most of\n  the set up) in order to be able to Unit test my newest class.</p>\n</blockquote>\n\n<p>I have come across this type of problem. You are asked to write a small class with 4 methods.</p>\n\n<p>But, unfortunately, your code needs to create an object of a  legacy class. So, you need to build libraries of legacy code, link your code with them, run 3 dozen processes, bring up database, fill up sample data in database, set up configuration for processes, schedule events to kick-in .. etc.</p>\n\n<p>You can avoid some of that pain by mimicking your input (I assume you already did that). </p>\n\n<p>You can also stub out legacy classes. If you don't have source code of legacy classes in your control, you can even stub out methods of legacy classes selectively (by putting your stub libraries on the command line of the compiler ahead of the actual legacy libraries).</p>\n\n<p>There are different tricks to deal with different type of problems that arise in unit testing. If you have a specific problem in mind, you can add that to your question so that people can help you in a better way.</p>\n", "tags": ["c++", "c", "unit-testing"], "creation_date": 1477613199, "score": 0, "last_activity_date": 1477613199, "answer_id": 40296057, "is_accepted": true, "owner": {"user_id": 3196458, "reputation": 997, "user_type": "registered", "display_name": "blackpen", "link": "http://stackoverflow.com/users/3196458/blackpen", "profile_image": "https://graph.facebook.com/100005547696898/picture?type=large"}, "title": "How to properly Unit Test with a large number of dependencies", "question_id": 40295643}