{"body": "<p>The solution here is to sort you <code>peaks</code> array using a comparison that compares values in the original data.</p>\n\n<p>If you are using Java 8 you could you <code>Integer</code> objects rather than <code>int</code> and then use a comparator:</p>\n\n<pre><code>Integer[] peaks;\nArrays.sort(peaks, Comparator.comparing(i -&gt; x[i]));\n</code></pre>\n\n<p>You can do the same thing in Java 7 but you need to create your own comparator.</p>\n", "tags": ["java", "arrays", "sorting"], "creation_date": 1477266469, "score": 0, "last_activity_date": 1477266469, "answer_id": 40208956, "is_accepted": false, "owner": {"user_id": 3705127, "reputation": 10046, "user_type": "registered", "accept_rate": 53, "display_name": "sprinter", "link": "http://stackoverflow.com/users/3705127/sprinter", "profile_image": "https://www.gravatar.com/avatar/b03aedaddfa4dc1c2b331f318a724ec7?s=128&d=identicon&r=PG&f=1"}, "title": "Print sorted (ascending) floating data with each index included", "question_id": 40208510}