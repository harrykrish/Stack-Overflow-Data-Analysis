{"title": "Can value of RDX in main be depended upon when linking assembly app against glibc", "tags": ["assembly"], "creation_date": 1475115101, "score": 2, "body": "<p>Yes, you can rely on it (in the specific case of glibc-using Unix environments).</p>\n\n<p>Directly from Michael Petch's <a href=\"https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html\" rel=\"nofollow\">link above</a>:</p>\n\n<blockquote>\n  <p>In Unix systems you can define main a third way, using three\n  arguments:</p>\n\n<pre><code>int main (int argc, char *argv[], char *envp[])\n</code></pre>\n</blockquote>\n\n<p>So <code>main()</code> is effectively a function with three arguments on Unix systems, and <code>RDX</code> takes the third argument in the <a href=\"https://en.wikipedia.org/wiki/X86_calling_conventions#System_V_AMD64_ABI\" rel=\"nofollow\">x86-64 System V ABI</a>. That third argument is the pointer to the environment block, so you are golden <em>within this specific environment</em>.</p>\n\n<p>Of course, on non-glibc, non-Unix or systems not using the Sys V ABI, this may not apply. As Michael points out in the comments, the most <em>portable</em> way to access the environment pointer is to use the value of the <em>environ</em> pointer, or more conveniently for specific variables, the <code>getenv</code> call. More details on environment access are <a href=\"https://www.gnu.org/software/libc/manual/html_node/Environment-Access.html\" rel=\"nofollow\">easy to find</a>.  </p>\n", "last_activity_date": 1475115788, "answer_id": 39760282, "is_accepted": true, "owner": {"user_id": 149138, "reputation": 6036, "user_type": "registered", "accept_rate": 67, "display_name": "BeeOnRope", "link": "http://stackoverflow.com/users/149138/beeonrope", "profile_image": "https://www.gravatar.com/avatar/cfd457233c8ebbab383475fc097442d9?s=128&d=identicon&r=PG"}, "last_edit_date": 1475115788, "question_id": 39758752}