{"title": "Prevent TCP connections from causing UDP packet loss", "tags": ["networking", "tcp", "udp"], "creation_date": 1474661704, "score": 1, "body": "<p>To avoid saturating the bandwidth, you need to apply some sort of rate limiting. TCP actually already does this, but it might not be effective in some cases. For example, it has no idea weather you consider the TCP or UDP traffic to be the more important.</p>\n\n<p>To implement any form of rate limiting involving UDP, you will first need to calculate UDP loss rate. UDP packets will need to have sequence numbers, and then the client has to count how many unique packets it actually got, and send this information back to the server. This gives you the packet loss rate. The server should monitor this, and if packet loss jumps after a file transfer is started, start lowering the transfer rate until the packet loss becomes acceptable. (You will probably need to do this for UDP anyway, since UDP has no congestion control.)</p>\n\n<p>Note that while I mention \"server\" above, it could really be done either direction, or both. Depending on who needs to send what. Imagine a game with player created maps that transfer these maps with peer-to-peer connections.</p>\n\n<p>While lowering the transfer rate can be as simple as calling your send function less frequently, attempting to control TCP this way will no doubt conflict with the existing rate control TCP has. As suggested in another answer, you might consider looking into more comprehensive ways to control TCP. </p>\n\n<p>In this particular case, I doubt it would be an issue, unless you really need to send lots of UDP information <em>while</em> the clients are transferring files.\nI wold expect most games to just show a loading screen or a lobby while this is happening. Neither should require much UDP traffic unless your game has it's own VOIP.</p>\n\n<p>Here is an excellent article series that explains some of the possible uses of both TCP and UDP, specifically in the context of network games. <a href=\"http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/\" rel=\"nofollow\" title=\"TCP vs. UDP\">TCP vs. UDP</a></p>\n\n<p>In a later article from the series, he even explains a way to make UDP 'almost' as reliable as TCP (with code examples). </p>\n\n<p>And as always... and measure your results. You have no way of knowing if your code is making the connections faster or slower unless you measure.</p>\n", "last_activity_date": 1474669160, "answer_id": 39668865, "is_accepted": false, "owner": {"user_id": 978551, "reputation": 66, "user_type": "registered", "display_name": "Meta", "link": "http://stackoverflow.com/users/978551/meta", "profile_image": "https://www.gravatar.com/avatar/9134c78fe2b7d671e4fe4daa02817fb7?s=128&d=identicon&r=PG"}, "last_edit_date": 1474669160, "question_id": 5446302}