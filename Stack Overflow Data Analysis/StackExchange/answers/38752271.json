{"body": "<p>In the full example code, this is the important bit:</p>\n\n<pre><code>def __getitem__(self, key):\n    return self.__nodes[key]\n\ndef __setitem__(self, key, item):\n    self.__nodes[key] = item\n</code></pre>\n\n<p>These two 'magic methods', <code>__getitem__</code> and <code>__setitem__</code>, allow the class to be accessed like a list or dictionary would be, using the <code>foo[key]</code> syntax.</p>\n\n<p>So, in your case, if <code>foo</code> was a <code>Tree</code> instance, <code>foo[\"a\"] = \"b\"</code> would execute <code>__setitem__</code> with <code>key</code> as <code>\"a\"</code> and <code>item</code> as <code>\"b\"</code>, consequently mapping <code>key</code> to <code>item</code> in the <code>self.__nodes</code> dictionary.</p>\n", "tags": ["python"], "creation_date": 1470253104, "score": 3, "last_activity_date": 1470253104, "answer_id": 38752271, "is_accepted": true, "owner": {"user_id": 2626000, "reputation": 3633, "user_type": "registered", "accept_rate": 88, "display_name": "OrangeFlash81", "link": "http://stackoverflow.com/users/2626000/orangeflash81", "profile_image": "https://www.gravatar.com/avatar/31e65b55657b74a2692222bafaff849f?s=128&d=identicon&r=PG"}, "title": "What does self[identifier] = some_value do in this code?", "question_id": 38752193}