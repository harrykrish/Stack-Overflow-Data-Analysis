{"title": "Conditional class not always triggers on Angular 2", "tags": ["angular2"], "creation_date": 1477402217, "score": 2, "body": "<p>As far as I know the scroll event doesn't run inside Angulars zone in all browsers because of limitations of the polyfills.</p>\n\n\n\n<pre class=\"lang-ts prettyprint-override\"><code>constructor(private cdRef:ChangeDetectorRef /* or private zone:NgZone */) {}\n\nthis.scrollYSub = Observable.fromEvent(window, 'scroll')\n    .throttleTime(5)\n    .subscribe(e =&gt; {\n        this.scrollY = window.scrollY || document.documentElement.scrollTop;\n        this.cdRef.detectChanges();\n\n        // or\n        /*\n        this.zone.run(() {\n          this.scrollY = window.scrollY || document.documentElement.scrollTop;\n        });\n        */\n});      \n</code></pre>\n\n<p>If the code only changes local properties of the current component, <code>this.cdRef.detectChanges();</code> is usually the better way.</p>\n\n<p>If the code also calls methods that cause changes in other components or services the <code>zone.run(...)</code> approach is preferred because it runs change detection in the whole application, instead of only the current component.</p>\n\n<p>An alternative way would be</p>\n\n<pre class=\"lang-ts prettyprint-override\"><code>scroll = new Subject();\n\n@HostListener('window:scroll', ['$event'])\nonScroll(event) {\n  this.scroll.next(event);\n}\n</code></pre>\n\n<p>because this way ensures the event handler is executed inside Angulars zone.</p>\n", "last_activity_date": 1477402521, "answer_id": 40241353, "is_accepted": true, "owner": {"user_id": 217408, "reputation": 130599, "user_type": "registered", "accept_rate": 99, "display_name": "G&#252;nter Z&#246;chbauer", "link": "http://stackoverflow.com/users/217408/g%c3%bcnter-z%c3%b6chbauer", "profile_image": "https://i.stack.imgur.com/IlnZm.jpg?s=128&g=1"}, "last_edit_date": 1477402521, "question_id": 40241301}