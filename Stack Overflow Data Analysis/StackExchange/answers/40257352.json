{"title": "Symfomy Doctrine query - get a list of children for each parent", "tags": ["php", "symfony2", "doctrine2", "doctrine"], "creation_date": 1477470713, "score": 2, "body": "<p>You can simply use fetch joins for your case.<br> Check the Doctrine documentation on fetch join here in <a href=\"http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/dql-doctrine-query-language.html#joins\" rel=\"nofollow\">chapter <strong>14.2.2. Joins</strong></a>.</p>\n\n<p>In a query builder you do fetch join like this:</p>\n\n<pre><code>$queryBuilder-&gt;select('c', 'p')\n   -&gt;from('Module\\Entity\\Category', 'c')\n   -&gt;leftJoin('c.products', 'p');\n$results = $queryBuilder-&gt;getQuery()-&gt;getResult();\n</code></pre>\n\n<p>Now <code>$results</code> holds a collection of categories where each category has its product collection populated.</p>\n\n<hr>\n\n<h2>UPDATE</h2>\n\n<p>I would say it would be better to get the objects and create the array from the objects in the view (or whereever you need it). <br>\nIf you really want to get only the fields you can change the select clause to select the fields you want instead. Not sure if the resulting array is exactly what you want but you can try it:</p>\n\n<pre><code>$queryBuilder-&gt;select('c.name', 'p.name')\n    -&gt;from('Module\\Entity\\Category', 'c')\n    -&gt;leftJoin('c.products', 'p');\n$results = $queryBuilder-&gt;getResult();\n</code></pre>\n\n<p>Now results holds an array with the fields you selected.</p>\n", "last_activity_date": 1477657698, "answer_id": 40257352, "is_accepted": true, "owner": {"user_id": 1697459, "reputation": 12473, "user_type": "registered", "accept_rate": 87, "display_name": "Wilt", "link": "http://stackoverflow.com/users/1697459/wilt", "profile_image": "https://i.stack.imgur.com/bzP9B.png?s=128&g=1"}, "last_edit_date": 1477657698, "question_id": 40254274}