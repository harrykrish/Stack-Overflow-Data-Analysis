{"body": "<p>In Python 2.x, there is no clean one-liner for this.  </p>\n\n<p>In Python 3, there is itertools.accumulate, but it is still not really clean because it doesn't accept an \"initial\" input, as reduce does.  </p>\n\n<p>Here is a function that, while not as nice as a built-in comprehension syntax, does the job.</p>\n\n<pre><code>def reducemap(func, sequence, initial=None, include_zeroth = False):\n    \"\"\"\n    A version of reduce that also returns the intermediate values.\n    :param func: A function of the form x_i_plus_1 = f(x_i, params_i)\n        Where:\n            x_i is the value passed through the reduce.\n            params_i is the i'th element of sequence\n            x_i_plus_i is the value that will be passed to the next step\n    :param sequence: A list of parameters to feed at each step of the reduce.\n    :param initial: Optionally, an initial value (else the first element of the sequence will be taken as the initial)\n    :param include_zeroth: Include the initial value in the returned list.\n    :return: A list of length: len(sequence), (or len(sequence)+1 if include_zeroth is True) containing the computed result of each iteration.\n    \"\"\"\n    if initial is None:\n        val = sequence[0]\n        sequence = sequence[1:]\n    else:\n        val = initial\n    results = [val] if include_zeroth else []\n    for s in sequence:\n        val = func(val, s)\n        results.append(val)\n    return results\n</code></pre>\n\n<p>Tests:</p>\n\n<pre><code>assert reducemap(lambda a, b: a+b, [1, 2, -4, 3, 6, -7], initial=0) == [1, 3, -1, 2, 8, 1]\nassert reducemap(lambda a, b: a+b, [1, 2, -4, 3, 6, -7]) == [3, -1, 2, 8, 1]\nassert reducemap(lambda a, b: a+b, [1, 2, -4, 3, 6, -7], include_zeroth=True) == [1, 3, -1, 2, 8, 1]\n</code></pre>\n", "tags": ["python", "numpy", "deep-learning", "reduce"], "creation_date": 1476884744, "score": 0, "last_activity_date": 1476884744, "answer_id": 40133207, "is_accepted": true, "owner": {"user_id": 851699, "reputation": 1649, "user_type": "registered", "accept_rate": 36, "display_name": "Peter", "link": "http://stackoverflow.com/users/851699/peter", "profile_image": "https://i.stack.imgur.com/jDiPy.png?s=128&g=1"}, "title": "Cleanest way to combine reduce and map in Python", "question_id": 39688133}